# =============================================================================
# Luna Server - Docker Compose Configuration
# 
# Complete deployment setup with services and networking
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # Main Application Service
  # =============================================================================
  luna-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: luna-server-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_VERSION=${API_VERSION:-v1}
      
      # File Processing
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-52428800}
      - BODY_PARSER_LIMIT=${BODY_PARSER_LIMIT:-50mb}
      - ASPOSE_TEMP_DIR=/app/temp/aspose
      - UPLOAD_TEMP_DIR=/app/temp/uploads
      - ASPOSE_LICENSE_PATH=${ASPOSE_LICENSE_PATH}
      
      # External Services
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIRESTORE_DATABASE_URL=${FIRESTORE_DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Features
      - FEATURE_FIREBASE_STORAGE=${FEATURE_FIREBASE_STORAGE:-false}
      - FEATURE_AI_TRANSLATION=${FEATURE_AI_TRANSLATION:-false}
      - FEATURE_AI_ANALYSIS=${FEATURE_AI_ANALYSIS:-false}
      
      # Security
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      
      # Redis (if using)
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - luna-uploads:/app/temp/uploads
      - luna-aspose:/app/temp/aspose
      - luna-downloads:/app/temp/downloads
      - luna-logs:/app/logs
    networks:
      - luna-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "/app/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # =============================================================================
  # Redis Service (for caching and session storage)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: luna-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      sh -c "
        if [ -n '$$REDIS_PASSWORD' ]; then
          redis-server --requirepass $$REDIS_PASSWORD --appendonly yes
        else
          redis-server --appendonly yes
        fi
      "
    volumes:
      - luna-redis-data:/data
    networks:
      - luna-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # =============================================================================
  # Nginx Reverse Proxy (Production)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: luna-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - luna-logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - luna-network
    depends_on:
      - luna-server
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

# =============================================================================
# Networks
# =============================================================================
networks:
  luna-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# Volumes
# =============================================================================
volumes:
  luna-uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/uploads
  
  luna-aspose:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/aspose
  
  luna-downloads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/downloads
  
  luna-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/logs
  
  luna-redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/redis 