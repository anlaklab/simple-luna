{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://api.aspose.cloud/schemas/universal-powerpoint-schema.json",
  "title": "Universal PowerPoint Schema",
  "description": "Comprehensive JSON schema that can represent any PowerPoint document, operation, or API interaction",
  "type": "object",
  "properties": {
    "presentation": {
      "type": "object",
      "description": "Complete presentation document with all slides and content",
      "$ref": "#/definitions/UniversalPresentation"
    },
    "slide": {
      "type": "object",
      "description": "Individual slide with all possible content",
      "$ref": "#/definitions/UniversalSlide"
    },
    "shape": {
      "type": "object",
      "description": "Any type of shape or content element",
      "$ref": "#/definitions/UniversalShape"
    },
    "operation": {
      "type": "object",
      "description": "Any API operation or batch task",
      "$ref": "#/definitions/UniversalOperation"
    },
    "exportRequest": {
      "type": "object",
      "description": "Export operation with any format and options",
      "$ref": "#/definitions/UniversalExportRequest"
    },
    "apiResponse": {
      "type": "object",
      "description": "Any API response type",
      "$ref": "#/definitions/UniversalApiResponse"
    },
    "batch": {
      "type": "array",
      "description": "Batch operations for multiple actions",
      "items": {
        "$ref": "#/definitions/UniversalOperation"
      }
    }
  },
  "definitions": {
    "SlideAnimation": {
      "type": "object",
      "description": "Represents comments collection of slide",
      "additionalProperties": false,
      "properties": {
        "MainSequence": {
          "type": "array",
          "description": "Main sequence.",
          "items": {
            "$ref": "#/definitions/Effect"
          }
        },
        "InteractiveSequences": {
          "type": "array",
          "description": "Interactive sequence list.",
          "items": {
            "$ref": "#/definitions/InteractiveSequence"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Effect": {
      "type": "object",
      "description": "Represents comment of slide",
      "additionalProperties": false,
      "required": [
        "ShapeIndex"
      ],
      "properties": {
        "Type": {
          "type": "string",
          "description": "Effect type.",
          "enum": [
            "Appear",
            "CurveUpDown",
            "Ascend",
            "FloatUp",
            "Blast",
            "Blinds",
            "Blink",
            "BoldFlash",
            "BoldReveal",
            "Boomerang",
            "Bounce",
            "Box",
            "BrushOnColor",
            "BrushOnUnderline",
            "CenterRevolve",
            "ChangeFillColor",
            "ChangeFont",
            "ChangeFontColor",
            "ChangeFontSize",
            "ChangeFontStyle",
            "ChangeLineColor",
            "Checkerboard",
            "Circle",
            "ColorBlend",
            "ColorTypewriter",
            "ColorWave",
            "ComplementaryColor",
            "ComplementaryColor2",
            "Compress",
            "ContrastingColor",
            "Crawl",
            "Credits",
            "Custom",
            "Darken",
            "Desaturate",
            "Descend",
            "Floatdown",
            "Diamond",
            "Dissolve",
            "EaseInOut",
            "Expand",
            "Fade",
            "FadedSwivel",
            "FadedZoom",
            "FlashBulb",
            "FlashOnce",
            "Flicker",
            "Flip",
            "Float",
            "Fly",
            "Fold",
            "Glide",
            "GrowAndTurn",
            "GrowShrink",
            "GrowWithColor",
            "Lighten",
            "LightSpeed",
            "MediaPause",
            "MediaPlay",
            "MediaStop",
            "Path4PointStar",
            "Path5PointStar",
            "Path6PointStar",
            "Path8PointStar",
            "PathArcDown",
            "PathArcLeft",
            "PathArcRight",
            "PathArcUp",
            "PathBean",
            "PathBounceLeft",
            "PathBounceRight",
            "PathBuzzsaw",
            "PathCircle",
            "PathCrescentMoon",
            "PathCurvedSquare",
            "PathCurvedX",
            "PathCurvyLeft",
            "PathCurvyRight",
            "PathCurvyStar",
            "PathDecayingWave",
            "PathDiagonalDownRight",
            "PathDiagonalUpRight",
            "PathDiamond",
            "PathDown",
            "PathEqualTriangle",
            "PathFigure8Four",
            "PathFootball",
            "PathFunnel",
            "PathHeart",
            "PathHeartbeat",
            "PathHexagon",
            "PathHorizontalFigure8",
            "PathInvertedSquare",
            "PathInvertedTriangle",
            "PathLeft",
            "PathLoopdeLoop",
            "PathNeutron",
            "PathOctagon",
            "PathParallelogram",
            "PathPeanut",
            "PathPentagon",
            "PathPlus",
            "PathPointyStar",
            "PathRight",
            "PathRightTriangle",
            "PathSCurve1",
            "PathSCurve2",
            "PathSineWave",
            "PathSpiralLeft",
            "PathSpiralRight",
            "PathSpring",
            "PathSquare",
            "PathStairsDown",
            "PathSwoosh",
            "PathTeardrop",
            "PathTrapezoid",
            "PathTurnDown",
            "PathTurnRight",
            "PathTurnUp",
            "PathTurnUpRight",
            "PathUp",
            "PathUser",
            "PathVerticalFigure8",
            "PathWave",
            "PathZigzag",
            "Peek",
            "Pinwheel",
            "Plus",
            "RandomBars",
            "RandomEffects",
            "RiseUp",
            "Shimmer",
            "Sling",
            "Spin",
            "Spinner",
            "Spiral",
            "Split",
            "Stretch",
            "Strips",
            "StyleEmphasis",
            "Swish",
            "Swivel",
            "Teeter",
            "Thread",
            "Transparency",
            "Unfold",
            "VerticalGrow",
            "Wave",
            "Wedge",
            "Wheel",
            "Whip",
            "Wipe",
            "Magnify",
            "Zoom",
            "OLEObjectShow",
            "OLEObjectEdit",
            "OLEObjectOpen"
          ]
        },
        "Subtype": {
          "type": "string",
          "description": "Effect subtype.",
          "enum": [
            "None",
            "Across",
            "Bottom",
            "BottomLeft",
            "BottomRight",
            "Center",
            "ObjectCenter",
            "SlideCenter",
            "Clockwise",
            "CounterClockwise",
            "GradualAndCycleClockwise",
            "GradualAndCycleCounterClockwise",
            "Down",
            "DownLeft",
            "DownRight",
            "FontAllCaps",
            "FontBold",
            "FontItalic",
            "FontShadow",
            "FontStrikethrough",
            "FontUnderline",
            "Gradual",
            "Horizontal",
            "HorizontalIn",
            "HorizontalOut",
            "In",
            "InBottom",
            "InCenter",
            "InSlightly",
            "Instant",
            "Left",
            "OrdinalMask",
            "Out",
            "OutBottom",
            "OutCenter",
            "OutSlightly",
            "Right",
            "Slightly",
            "Top",
            "TopLeft",
            "TopRight",
            "Up",
            "UpLeft",
            "UpRight",
            "Vertical",
            "VerticalIn",
            "VerticalOut",
            "Wheel1",
            "Wheel2",
            "Wheel3",
            "Wheel4",
            "Wheel8"
          ]
        },
        "PresetClassType": {
          "type": "string",
          "description": "Preset class type.",
          "enum": [
            "Entrance",
            "Exit",
            "Emphasis",
            "Path",
            "MediaCall",
            "OLEActionVerbs"
          ]
        },
        "AnimateTextType": {
          "type": "string",
          "description": "Preset class type.",
          "enum": [
            "AllAtOnce",
            "ByWord",
            "ByLetter"
          ]
        },
        "ShapeIndex": {
          "type": "integer",
          "description": "Shape index.",
          "format": "int32"
        },
        "ParagraphIndex": {
          "type": "integer",
          "description": "Paragraph index.",
          "format": "int32"
        },
        "TriggerType": {
          "type": "string",
          "description": "Effect trigger type.",
          "enum": [
            "AfterPrevious",
            "OnClick",
            "WithPrevious"
          ]
        },
        "Accelerate": {
          "type": "number",
          "description": "The percentage of duration accelerate behavior effect.",
          "format": "double"
        },
        "AutoReverse": {
          "type": "boolean",
          "description": "True to automatically play the animation in reverse after playing it in the forward direction."
        },
        "Decelerate": {
          "type": "number",
          "description": "The percentage of duration decelerate behavior effect.",
          "format": "double"
        },
        "Duration": {
          "type": "number",
          "description": "The duration of animation effect.",
          "format": "double"
        },
        "RepeatCount": {
          "type": "number",
          "description": "The number of times the effect should repeat.",
          "format": "double"
        },
        "RepeatDuration": {
          "type": "number",
          "description": "The number of times the effect should repeat.",
          "format": "double"
        },
        "Restart": {
          "type": "string",
          "description": "The way for a effect to restart after complete.",
          "enum": [
            "Always",
            "WhenNotActive",
            "Never",
            "NotDefined"
          ]
        },
        "Speed": {
          "type": "number",
          "description": "The percentage by which to speed up (or slow down) the timing.",
          "format": "double"
        },
        "TriggerDelayTime": {
          "type": "number",
          "description": "Delay time after trigger.",
          "format": "double"
        },
        "RepeatUntilEndSlide": {
          "type": "boolean",
          "description": "Specifies if the effect will repeat until the end of slide."
        },
        "RepeatUntilNextClick": {
          "type": "boolean",
          "description": "Specifies if the effect will repeat until the next click."
        },
        "StopPreviousSound": {
          "type": "boolean",
          "description": "This attribute specifies if the animation effect stops the previous sound."
        },
        "Rewind": {
          "type": "boolean",
          "description": "This attribute specifies if the effect will rewind when done playing."
        },
        "AfterAnimationType": {
          "type": "string",
          "description": "Defined an after animation color for effect.",
          "enum": [
            "DoNotDim",
            "Color",
            "HideAfterAnimation",
            "HideOnNextMouseClick"
          ]
        },
        "AfterAnimationColor": {
          "type": "string",
          "description": "Defined an after animation color for effect. Applied when the AfterAnimationType property is set to Color."
        }
      }
    },
    "InteractiveSequence": {
      "type": "object",
      "description": "Represents comments collection of slide",
      "additionalProperties": false,
      "required": [
        "TriggerShapeIndex"
      ],
      "properties": {
        "Effects": {
          "type": "array",
          "description": "Effect list.",
          "items": {
            "$ref": "#/definitions/Effect"
          }
        },
        "TriggerShapeIndex": {
          "type": "integer",
          "description": "Index of the shape that triggers the sequence.",
          "format": "int32"
        }
      }
    },
    "ResourceBase": {
      "type": "object",
      "description": "Base class for all Slide's DTO objects ",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ResourceUri": {
      "type": "object",
      "description": "Represents Resource URI",
      "additionalProperties": false,
      "properties": {
        "Href": {
          "type": "string",
          "description": "Gets or sets the href."
        },
        "Relation": {
          "type": "string",
          "description": "Gets or sets the relation."
        },
        "LinkType": {
          "type": "string",
          "description": "Gets or sets the type of link."
        },
        "Title": {
          "type": "string",
          "description": "Gets or sets the title of link."
        },
        "SlideIndex": {
          "type": "integer",
          "description": "Resource slide index.",
          "format": "int32"
        },
        "ShapeIndex": {
          "type": "integer",
          "description": "Resource shape index.",
          "format": "int32"
        }
      }
    },
    "Chart": {
      "type": "object",
      "description": "Represents chart resource",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "Chart",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "ChartType": {
          "type": "string",
          "description": "Gets or sets the type of the chart.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "ShowDataLabelsOverMaximum": {
          "type": "boolean",
          "description": "True if data labels over the maximum of the chart shall be shown."
        },
        "Series": {
          "type": "array",
          "description": "Gets or sets the series of chart data values.",
          "items": {
            "$ref": "#/definitions/Series"
          }
        },
        "Categories": {
          "type": "array",
          "description": "Gets or sets the categories for chart data",
          "items": {
            "$ref": "#/definitions/ChartCategory"
          }
        },
        "DataSourceForCategories": {
          "description": "Data source type for categories.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "HasTitle": {
          "type": "boolean",
          "description": "True if the chart has a title."
        },
        "Title": {
          "description": "Gets or sets the title.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartTitle"
        },
        "BackWall": {
          "description": "Gets or sets the back wall.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartWall"
        },
        "SideWall": {
          "description": "Gets or sets the side wall.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartWall"
        },
        "Floor": {
          "description": "Gets or sets the floor.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartWall"
        },
        "Legend": {
          "description": "Gets or sets the legend.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Legend"
        },
        "Axes": {
          "description": "Gets or sets the axes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Axes"
        },
        "PlotArea": {
          "description": "Gets or sets the plot area.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PlotArea"
        },
        "HasRoundedCorners": {
          "type": "boolean",
          "description": "Specifies the chart area shall have rounded corners."
        },
        "SeriesGroups": {
          "type": "array",
          "description": "Gets groups of series. ",
          "items": {
            "$ref": "#/definitions/ChartSeriesGroup"
          }
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Series": {
      "type": "object",
      "description": "A chart series.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Series type.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Series name."
        },
        "DataSourceForSeriesName": {
          "description": "Series name data source.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "True if each data marker in the series has a different color."
        },
        "InvertedSolidFillColor": {
          "type": "string",
          "description": "Invert solid color for the series."
        },
        "Smooth": {
          "type": "boolean",
          "description": "True if curve smoothing is turned on. Applies only to line and scatter connected by lines charts."
        },
        "PlotOnSecondAxis": {
          "type": "boolean",
          "description": "True if the series is plotted on second value axis."
        },
        "Order": {
          "type": "integer",
          "description": "Series order.",
          "format": "int32"
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the series shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "Explosion": {
          "type": "integer",
          "description": "The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.",
          "format": "int32"
        },
        "Marker": {
          "description": "Series marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "FillFormat": {
          "description": "Fill properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "DataPointType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        }
      }
    },
    "DataSource": {
      "type": "object",
      "description": "Data source for chart values.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Workbook",
            "Literals"
          ]
        }
      }
    },
    "Workbook": {
      "type": "object",
      "description": "Represents Excel spreadsheet data source.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Data source type.",
          "default": "Workbook",
          "enum": [
            "Workbook",
            "Literals"
          ]
        },
        "WorksheetIndex": {
          "type": "integer",
          "description": "Worksheet index.",
          "format": "int32"
        },
        "ColumnIndex": {
          "type": "integer",
          "description": "Column index of the first value.",
          "format": "int32"
        },
        "RowIndex": {
          "type": "integer",
          "description": "Row index of the first value.",
          "format": "int32"
        }
      }
    },
    "Literals": {
      "type": "object",
      "description": "Represents string or double literals data source.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Data source type.",
          "default": "Literals",
          "enum": [
            "Workbook",
            "Literals"
          ]
        }
      }
    },
    "SeriesMarker": {
      "type": "object",
      "description": "Represents a series marker",
      "additionalProperties": false,
      "properties": {
        "Size": {
          "type": "integer",
          "description": "size",
          "format": "int32"
        },
        "Symbol": {
          "type": "string",
          "description": "symbol",
          "enum": [
            "Circle",
            "Dash",
            "Diamond",
            "Dot",
            "None",
            "Picture",
            "Plus",
            "Square",
            "Star",
            "Triangle",
            "X",
            "NotDefined"
          ]
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "FillFormat": {
      "type": "object",
      "description": "Base class for fill formats ",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        }
      }
    },
    "GradientFill": {
      "type": "object",
      "description": "Represents gradient fill format",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Type of fill.",
          "default": "Gradient",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        },
        "Direction": {
          "type": "string",
          "description": "Gradient style.",
          "enum": [
            "FromCorner1",
            "FromCorner2",
            "FromCorner3",
            "FromCorner4",
            "FromCenter",
            "NotDefined"
          ]
        },
        "Shape": {
          "type": "string",
          "description": "Gradient shape.",
          "enum": [
            "Linear",
            "Rectangle",
            "Radial",
            "Path",
            "NotDefined"
          ]
        },
        "Stops": {
          "type": "array",
          "description": "Gradient stops.",
          "items": {
            "$ref": "#/definitions/GradientFillStop"
          }
        },
        "LinearAngle": {
          "type": "number",
          "description": "Gradient angle.",
          "format": "double"
        },
        "IsScaled": {
          "type": "boolean",
          "description": "True if the gradient is scaled."
        },
        "TileFlip": {
          "type": "string",
          "description": "Gradient flipping mode.",
          "enum": [
            "NoFlip",
            "FlipX",
            "FlipY",
            "FlipBoth",
            "NotDefined"
          ]
        }
      }
    },
    "GradientFillStop": {
      "type": "object",
      "description": "Gradient stop.",
      "additionalProperties": false,
      "required": [
        "Position"
      ],
      "properties": {
        "Color": {
          "type": "string",
          "description": "Color."
        },
        "Position": {
          "type": "number",
          "description": "Stop position (0..1).",
          "format": "double"
        }
      }
    },
    "NoFill": {
      "type": "object",
      "description": "Represents empty fill",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Fill type.",
          "default": "NoFill",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        }
      }
    },
    "PatternFill": {
      "type": "object",
      "description": "Represents Pattern Fill",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Type of fill.",
          "default": "Pattern",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        },
        "BackColor": {
          "type": "string",
          "description": "Gets or sets the back color of the pattern fill."
        },
        "ForeColor": {
          "type": "string",
          "description": "Gets or sets the fore color of the pattern fill."
        },
        "Style": {
          "type": "string",
          "description": "Gets or sets the style of pattern fill.",
          "enum": [
            "Unknown",
            "Percent05",
            "Percent10",
            "Percent20",
            "Percent25",
            "Percent30",
            "Percent40",
            "Percent50",
            "Percent60",
            "Percent70",
            "Percent75",
            "Percent80",
            "Percent90",
            "DarkHorizontal",
            "DarkVertical",
            "DarkDownwardDiagonal",
            "DarkUpwardDiagonal",
            "SmallCheckerBoard",
            "Trellis",
            "LightHorizontal",
            "LightVertical",
            "LightDownwardDiagonal",
            "LightUpwardDiagonal",
            "SmallGrid",
            "DottedDiamond",
            "WideDownwardDiagonal",
            "WideUpwardDiagonal",
            "DashedUpwardDiagonal",
            "DashedDownwardDiagonal",
            "NarrowVertical",
            "NarrowHorizontal",
            "DashedVertical",
            "DashedHorizontal",
            "LargeConfetti",
            "LargeGrid",
            "HorizontalBrick",
            "LargeCheckerBoard",
            "SmallConfetti",
            "Zigzag",
            "SolidDiamond",
            "DiagonalBrick",
            "OutlinedDiamond",
            "Plaid",
            "Sphere",
            "Weave",
            "DottedGrid",
            "Divot",
            "Shingle",
            "Wave",
            "Horizontal",
            "Vertical",
            "Cross",
            "DownwardDiagonal",
            "UpwardDiagonal",
            "DiagonalCross",
            "NotDefined"
          ]
        }
      }
    },
    "PictureFill": {
      "type": "object",
      "description": "Picture fill.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Fill type.",
          "default": "Picture",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        },
        "CropBottom": {
          "type": "number",
          "description": "Percentage of image height that is cropped from the bottom.",
          "format": "double"
        },
        "CropLeft": {
          "type": "number",
          "description": "Percentage of image height that is cropped from the left.",
          "format": "double"
        },
        "CropRight": {
          "type": "number",
          "description": "Percentage of image height that is cropped from the right.",
          "format": "double"
        },
        "CropTop": {
          "type": "number",
          "description": "Percentage of image height that is cropped from the top.",
          "format": "double"
        },
        "Dpi": {
          "type": "integer",
          "description": "Picture resolution.",
          "format": "int32"
        },
        "TileOffsetX": {
          "type": "number",
          "description": "The horizontal offset of the texture from the shape's origin in points. A positive value moves the texture to the right, while a negative value moves it to the left.",
          "format": "double"
        },
        "TileOffsetY": {
          "type": "number",
          "description": "The vertical offset of the texture from the shape's origin in points. A positive value moves the texture down, while a negative value moves it up.",
          "format": "double"
        },
        "TileScaleX": {
          "type": "number",
          "description": "The horizontal scale for the texture fill as a percentage.",
          "format": "double"
        },
        "TileScaleY": {
          "type": "number",
          "description": "The vertical scale for the texture fill as a percentage.",
          "format": "double"
        },
        "TileAlignment": {
          "type": "string",
          "description": "The way texture is aligned within the shape. This setting controls the starting point of the texture pattern and how it repeats across the shape.",
          "enum": [
            "TopLeft",
            "Top",
            "TopRight",
            "Left",
            "Center",
            "Right",
            "BottomLeft",
            "Bottom",
            "BottomRight",
            "NotDefined"
          ]
        },
        "TileFlip": {
          "type": "string",
          "description": "Flips the texture tile around its horizontal, vertical or both axis.",
          "enum": [
            "NoFlip",
            "FlipX",
            "FlipY",
            "FlipBoth",
            "NotDefined"
          ]
        },
        "Image": {
          "description": "Internal image link.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Base64Data": {
          "type": "string",
          "description": "Base 64 image data."
        },
        "SvgData": {
          "type": "string",
          "description": "SVG image data."
        },
        "DeletePictureCroppedAreas": {
          "type": "boolean",
          "description": "true to delete picture cropped areas on save."
        },
        "Resolution": {
          "type": "number",
          "description": "true to compress the picture image with the specified resolution (in dpi) on save.",
          "format": "double"
        },
        "PictureFillMode": {
          "type": "string",
          "description": "Fill mode.",
          "enum": [
            "Tile",
            "Stretch"
          ]
        },
        "ImageTransformList": {
          "type": "array",
          "description": "Image transform effects.",
          "items": {
            "$ref": "#/definitions/ImageTransformEffect"
          }
        }
      }
    },
    "ImageTransformEffect": {
      "type": "object",
      "description": "Image transform effect",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "AlphaBiLevelEffect": {
      "type": "object",
      "description": "Represents an Alpha Bi-Level effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaBiLevel",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Threshold": {
          "type": "number",
          "description": "Returns effect threshold.",
          "format": "double"
        }
      }
    },
    "AlphaCeilingEffect": {
      "type": "object",
      "description": "Represents an Alpha Ceiling effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaCeiling",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "AlphaFloorEffect": {
      "type": "object",
      "description": "/// Represents an Alpha Floor effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaFloor",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "AlphaInverseEffect": {
      "type": "object",
      "description": "Represents an Alpha Inverse effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaInverse",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "AlphaModulateEffect": {
      "type": "object",
      "description": "Represents an Alpha Modulate effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaModulate",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "AlphaModulateFixedEffect": {
      "type": "object",
      "description": "Represents an Alpha Modulate Fixed effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaModulateFixed",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Amount": {
          "type": "number",
          "description": "Returns an amount of effect in percents.    ",
          "format": "double"
        }
      }
    },
    "AlphaReplaceEffect": {
      "type": "object",
      "description": "Represents an Alpha Replace Effect effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "AlphaReplace",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Alpha": {
          "type": "number",
          "description": "The new opacity value.",
          "format": "double"
        }
      }
    },
    "BiLevelEffect": {
      "type": "object",
      "description": "Represents an BiLevel effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "BiLevel",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Threshold": {
          "type": "number",
          "description": "Returns effect threshold.",
          "format": "double"
        }
      }
    },
    "BlurImageEffect": {
      "type": "object",
      "description": "Represents a Blur effect that is applied to the entire shape, including its fill.\nAll color channels, including alpha, are affected.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "Blur",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Radius": {
          "type": "number",
          "description": "Returns or sets blur radius.",
          "format": "double"
        },
        "Grow": {
          "type": "boolean",
          "description": "Determines whether the bounds of the object should be grown as a result of the blurring.\nTrue indicates the bounds are grown while false indicates that they are not."
        }
      }
    },
    "ColorChangeEffect": {
      "type": "object",
      "description": "Represents a Color Change effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "ColorChange",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "FromColor": {
          "type": "string",
          "description": "Color which will be replaced."
        },
        "ToColor": {
          "type": "string",
          "description": "Color which will replace."
        }
      }
    },
    "ColorReplaceEffect": {
      "type": "object",
      "description": "Represents a Color Replacement effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "ColorReplace",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Color": {
          "type": "string",
          "description": "Returns color format which will replace color of every pixel."
        }
      }
    },
    "DuotoneEffect": {
      "type": "object",
      "description": "Represents a Duotone effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "Duotone",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Color1": {
          "type": "string",
          "description": "Returns target color format for dark pixels."
        },
        "Color2": {
          "type": "string",
          "description": "Returns target color format for light pixels."
        }
      }
    },
    "FillOverlayImageEffect": {
      "type": "object",
      "description": "Represents a Fill Overlay effect. A fill overlay may be used to specify\nan additional fill for an object and blend the two fills together.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "FillOverlay",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Blend": {
          "type": "string",
          "description": "FillBlendMode.",
          "enum": [
            "Darken",
            "Lighten",
            "Multiply",
            "Overlay",
            "Screen"
          ]
        },
        "FillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        }
      }
    },
    "GrayScaleEffect": {
      "type": "object",
      "description": "Represents an Gray Scale effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "GrayScale",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        }
      }
    },
    "HslEffect": {
      "type": "object",
      "description": "Represents a Hue/Saturation/Luminance effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "Hsl",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Hue": {
          "type": "number",
          "description": "Hue",
          "format": "double"
        },
        "Saturation": {
          "type": "number",
          "description": "Saturation",
          "format": "double"
        },
        "Luminance": {
          "type": "number",
          "description": "Luminance",
          "format": "double"
        }
      }
    },
    "LuminanceEffect": {
      "type": "object",
      "description": "Represents a Luminance effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "Luminance",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Brightness": {
          "type": "number",
          "description": "Brightness",
          "format": "double"
        },
        "Contrast": {
          "type": "number",
          "description": "Contrast",
          "format": "double"
        }
      }
    },
    "TintEffect": {
      "type": "object",
      "description": "Represents a Tint effect.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Image transform effect type",
          "default": "Tint",
          "enum": [
            "AlphaBiLevel",
            "AlphaCeiling",
            "AlphaFloor",
            "AlphaInverse",
            "AlphaModulate",
            "AlphaModulateFixed",
            "AlphaReplace",
            "BiLevel",
            "Blur",
            "ColorChange",
            "ColorReplace",
            "Duotone",
            "FillOverlay",
            "GrayScale",
            "Hsl",
            "Luminance",
            "Tint"
          ]
        },
        "Hue": {
          "type": "number",
          "description": "Hue",
          "format": "double"
        },
        "Amount": {
          "type": "number",
          "description": "Amount",
          "format": "double"
        }
      }
    },
    "SolidFill": {
      "type": "object",
      "description": "Represents solid fill format ",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Fill type.",
          "default": "Solid",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        },
        "Color": {
          "type": "string",
          "description": "Color."
        }
      }
    },
    "EffectFormat": {
      "type": "object",
      "description": "Effect format",
      "additionalProperties": false,
      "properties": {
        "Blur": {
          "description": "blur effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/BlurEffect"
        },
        "Glow": {
          "description": "glow effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/GlowEffect"
        },
        "InnerShadow": {
          "description": "inner shadow effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InnerShadowEffect"
        },
        "OuterShadow": {
          "description": "outer shadow effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/OuterShadowEffect"
        },
        "PresetShadow": {
          "description": "preset shadow effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PresetShadowEffect"
        },
        "SoftEdge": {
          "description": "soft edge effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SoftEdgeEffect"
        },
        "Reflection": {
          "description": "reflection effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ReflectionEffect"
        },
        "FillOverlay": {
          "description": "fill overlay effect",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillOverlayEffect"
        }
      }
    },
    "BlurEffect": {
      "type": "object",
      "description": "Represents blur effect ",
      "additionalProperties": false,
      "required": [
        "Radius",
        "Grow"
      ],
      "properties": {
        "Radius": {
          "type": "number",
          "description": "radius",
          "format": "double"
        },
        "Grow": {
          "type": "boolean",
          "description": "true if the bounds are grown"
        }
      }
    },
    "GlowEffect": {
      "type": "object",
      "description": "Represents glow effect ",
      "additionalProperties": false,
      "required": [
        "Radius"
      ],
      "properties": {
        "Radius": {
          "type": "number",
          "description": "radius",
          "format": "double"
        },
        "Color": {
          "type": "string",
          "description": "color"
        }
      }
    },
    "InnerShadowEffect": {
      "type": "object",
      "description": "Represents inner shadow effect ",
      "additionalProperties": false,
      "required": [
        "Direction",
        "Distance",
        "BlurRadius"
      ],
      "properties": {
        "Direction": {
          "type": "number",
          "description": "direction",
          "format": "double"
        },
        "Distance": {
          "type": "number",
          "description": "distance",
          "format": "double"
        },
        "BlurRadius": {
          "type": "number",
          "description": "blur radius",
          "format": "double"
        },
        "ShadowColor": {
          "type": "string",
          "description": "shadow color"
        }
      }
    },
    "OuterShadowEffect": {
      "type": "object",
      "description": "Represents outer shadow effect ",
      "additionalProperties": false,
      "required": [
        "Direction",
        "Distance",
        "BlurRadius"
      ],
      "properties": {
        "Direction": {
          "type": "number",
          "description": "direction",
          "format": "double"
        },
        "Distance": {
          "type": "number",
          "description": "distance",
          "format": "double"
        },
        "BlurRadius": {
          "type": "number",
          "description": "blur radius",
          "format": "double"
        },
        "ShadowColor": {
          "type": "string",
          "description": "shadow color"
        }
      }
    },
    "PresetShadowEffect": {
      "type": "object",
      "description": "Represents preset shadow effect ",
      "additionalProperties": false,
      "required": [
        "Direction",
        "Distance",
        "Preset"
      ],
      "properties": {
        "Direction": {
          "type": "number",
          "description": "direction",
          "format": "double"
        },
        "Distance": {
          "type": "number",
          "description": "distance",
          "format": "double"
        },
        "Preset": {
          "type": "string",
          "description": "preset",
          "enum": [
            "TopLeftDropShadow",
            "TopLeftLargeDropShadow",
            "BackLeftLongPerspectiveShadow",
            "BackRightLongPerspectiveShadow",
            "TopLeftDoubleDropShadow",
            "BottomRightSmallDropShadow",
            "FrontLeftLongPerspectiveShadow",
            "FrontRightLongPerspectiveShadow",
            "OuterBoxShadow3D",
            "InnerBoxShadow3D",
            "BackCenterPerspectiveShadow",
            "TopRightDropShadow",
            "FrontBottomShadow",
            "BackLeftPerspectiveShadow",
            "BackRightPerspectiveShadow",
            "BottomLeftDropShadow",
            "BottomRightDropShadow",
            "FrontLeftPerspectiveShadow",
            "FrontRightPerspectiveShadow",
            "TopLeftSmallDropShadow"
          ]
        },
        "ShadowColor": {
          "type": "string",
          "description": "shadow color"
        }
      }
    },
    "SoftEdgeEffect": {
      "type": "object",
      "description": "Represents soft edge effect ",
      "additionalProperties": false,
      "required": [
        "Radius"
      ],
      "properties": {
        "Radius": {
          "type": "number",
          "description": "radius",
          "format": "double"
        }
      }
    },
    "ReflectionEffect": {
      "type": "object",
      "description": "Represents reflection effect ",
      "additionalProperties": false,
      "required": [
        "Direction",
        "FadeDirection",
        "Distance",
        "BlurRadius",
        "ScaleHorizontal",
        "ScaleVertical",
        "SkewHorizontal",
        "SkewVertical",
        "StartPosAlpha",
        "EndPosAlpha",
        "StartReflectionOpacity",
        "EndReflectionOpacity",
        "RectangleAlign",
        "RotateShadowWithShape"
      ],
      "properties": {
        "Direction": {
          "type": "number",
          "description": "direction",
          "format": "double"
        },
        "FadeDirection": {
          "type": "number",
          "description": "fade direction",
          "format": "double"
        },
        "Distance": {
          "type": "number",
          "description": "distance",
          "format": "double"
        },
        "BlurRadius": {
          "type": "number",
          "description": "blur radius",
          "format": "double"
        },
        "ScaleHorizontal": {
          "type": "number",
          "description": "scale horizontal",
          "format": "double"
        },
        "ScaleVertical": {
          "type": "number",
          "description": "scale vertical",
          "format": "double"
        },
        "SkewHorizontal": {
          "type": "number",
          "description": "skew horizontal",
          "format": "double"
        },
        "SkewVertical": {
          "type": "number",
          "description": "skew vertical",
          "format": "double"
        },
        "StartPosAlpha": {
          "type": "number",
          "description": "start pos alpha",
          "format": "double"
        },
        "EndPosAlpha": {
          "type": "number",
          "description": "end pos alpha",
          "format": "double"
        },
        "StartReflectionOpacity": {
          "type": "number",
          "description": "start reflection opacity",
          "format": "double"
        },
        "EndReflectionOpacity": {
          "type": "number",
          "description": "end reflection opacity",
          "format": "double"
        },
        "RectangleAlign": {
          "type": "string",
          "description": "rectangle alignment",
          "enum": [
            "TopLeft",
            "Top",
            "TopRight",
            "Left",
            "Center",
            "Right",
            "BottomLeft",
            "Bottom",
            "BottomRight",
            "NotDefined"
          ]
        },
        "RotateShadowWithShape": {
          "type": "boolean",
          "description": "true if the reflection should rotate with the shape when the shape is rotated"
        }
      }
    },
    "FillOverlayEffect": {
      "type": "object",
      "description": "Represents fill overlay effect ",
      "additionalProperties": false,
      "required": [
        "Blend"
      ],
      "properties": {
        "Blend": {
          "type": "string",
          "description": "blend mode",
          "enum": [
            "Darken",
            "Lighten",
            "Multiply",
            "Overlay",
            "Screen"
          ]
        }
      }
    },
    "LineFormat": {
      "type": "object",
      "description": "Line format.",
      "additionalProperties": false,
      "properties": {
        "Alignment": {
          "type": "string",
          "description": "Alignment.",
          "enum": [
            "Center",
            "Inset",
            "NotDefined"
          ]
        },
        "CapStyle": {
          "type": "string",
          "description": "Cap style.",
          "enum": [
            "Round",
            "Square",
            "Flat",
            "NotDefined"
          ]
        },
        "DashStyle": {
          "type": "string",
          "description": "Dash style.",
          "enum": [
            "Solid",
            "Dot",
            "Dash",
            "LargeDash",
            "DashDot",
            "LargeDashDot",
            "LargeDashDotDot",
            "SystemDash",
            "SystemDot",
            "SystemDashDot",
            "SystemDashDotDot",
            "Custom",
            "NotDefined"
          ]
        },
        "JoinStyle": {
          "type": "string",
          "description": "Join style.",
          "enum": [
            "Round",
            "Bevel",
            "Miter",
            "NotDefined"
          ]
        },
        "Style": {
          "type": "string",
          "description": "Style.",
          "enum": [
            "Single",
            "ThinThin",
            "ThinThick",
            "ThickThin",
            "ThickBetweenThin",
            "NotDefined"
          ]
        },
        "SketchType": {
          "type": "string",
          "description": "Sketch type.",
          "enum": [
            "None",
            "Curved",
            "Freehand",
            "Scribble",
            "NotDefined"
          ]
        },
        "BeginArrowHead": {
          "description": "Begin arrowhead.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ArrowHeadProperties"
        },
        "EndArrowHead": {
          "description": "End arrowhead.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ArrowHeadProperties"
        },
        "CustomDashPattern": {
          "description": "Custom dash pattern.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/CustomDashPattern"
        },
        "FillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "MiterLimit": {
          "type": "number",
          "description": "Miter limit.",
          "format": "double"
        },
        "Width": {
          "type": "number",
          "description": "Width.",
          "format": "double"
        }
      }
    },
    "ArrowHeadProperties": {
      "type": "object",
      "description": "Arrow head properties.",
      "additionalProperties": false,
      "properties": {
        "Length": {
          "type": "string",
          "description": "Length.",
          "enum": [
            "Short",
            "Medium",
            "Long",
            "NotDefined"
          ]
        },
        "Style": {
          "type": "string",
          "description": "Style.",
          "enum": [
            "None",
            "Triangle",
            "Stealth",
            "Diamond",
            "Oval",
            "Open",
            "NotDefined"
          ]
        },
        "Width": {
          "type": "string",
          "description": "Width.",
          "enum": [
            "Narrow",
            "Medium",
            "Wide",
            "NotDefined"
          ]
        }
      }
    },
    "CustomDashPattern": {
      "type": "object",
      "description": "Custom dash pattern.",
      "additionalProperties": false,
      "properties": {
        "Items": {
          "type": "array",
          "description": "Pattern items.",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "OneValueSeries": {
      "type": "object",
      "description": "One value series.",
      "additionalProperties": false,
      "properties": {
        "DataPointType": {
          "type": "string",
          "description": "Data point type.",
          "default": "OneValue",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "DataPoints": {
          "type": "array",
          "description": "Gets or sets the values.",
          "items": {
            "$ref": "#/definitions/OneValueChartDataPoint"
          }
        },
        "NumberFormatOfValues": {
          "type": "string",
          "description": "The number format for the series values."
        },
        "DataSourceForValues": {
          "description": "Data source type for values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "ShowConnectorLines": {
          "type": "boolean",
          "description": "True if inner points are shown. Applied to Waterfall series only."
        },
        "QuartileMethod": {
          "type": "string",
          "description": "Quartile method. Applied to BoxAndWhisker series only.",
          "enum": [
            "Exclusive",
            "Inclusive"
          ]
        },
        "ShowInnerPoints": {
          "type": "boolean",
          "description": "True if inner points are shown. Applied to BoxAndWhisker series only."
        },
        "ShowMeanLine": {
          "type": "boolean",
          "description": "True if mean line is shown. Applied to BoxAndWhisker series only."
        },
        "ShowMeanMarkers": {
          "type": "boolean",
          "description": "True if mean markers are shown. Applied to BoxAndWhisker series only."
        },
        "ShowOutlierPoints": {
          "type": "boolean",
          "description": "True if outlier points are shown. Applied to BoxAndWhisker series only."
        },
        "Type": {
          "type": "string",
          "description": "Series type.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Series name."
        },
        "DataSourceForSeriesName": {
          "description": "Series name data source.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "True if each data marker in the series has a different color."
        },
        "InvertedSolidFillColor": {
          "type": "string",
          "description": "Invert solid color for the series."
        },
        "Smooth": {
          "type": "boolean",
          "description": "True if curve smoothing is turned on. Applies only to line and scatter connected by lines charts."
        },
        "PlotOnSecondAxis": {
          "type": "boolean",
          "description": "True if the series is plotted on second value axis."
        },
        "Order": {
          "type": "integer",
          "description": "Series order.",
          "format": "int32"
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the series shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "Explosion": {
          "type": "integer",
          "description": "The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.",
          "format": "int32"
        },
        "Marker": {
          "description": "Series marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "FillFormat": {
          "description": "Fill properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "OneValueChartDataPoint": {
      "type": "object",
      "description": "One value chart data point.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Data point type.",
          "default": "OneValue",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "Value": {
          "type": "number",
          "description": "Value.",
          "format": "double"
        },
        "ValueFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "SetAsTotal": {
          "type": "boolean",
          "description": "SetAsTotal. Applied to Waterfall data points only."
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the data point shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "Marker": {
          "description": "Gets or sets the marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        }
      }
    },
    "DataPoint": {
      "type": "object",
      "description": "Data point.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "Marker": {
          "description": "Gets or sets the marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        }
      }
    },
    "ThreeDFormat": {
      "type": "object",
      "description": "ThreeDFormat",
      "additionalProperties": false,
      "properties": {
        "BevelBottom": {
          "description": "Type of a bottom 3D bevel.\n            ",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ShapeBevel"
        },
        "BevelTop": {
          "description": "Type of a top 3D bevel.\n            ",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ShapeBevel"
        },
        "Camera": {
          "description": "Camera",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Camera"
        },
        "ContourColor": {
          "type": "string",
          "description": "Contour color"
        },
        "ContourWidth": {
          "type": "number",
          "description": "Contour width",
          "format": "double"
        },
        "Depth": {
          "type": "number",
          "description": "Depth",
          "format": "double"
        },
        "ExtrusionColor": {
          "type": "string",
          "description": "Extrusion color"
        },
        "ExtrusionHeight": {
          "type": "number",
          "description": "Extrusion height",
          "format": "double"
        },
        "LightRig": {
          "description": "Light rig",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LightRig"
        },
        "Material": {
          "type": "string",
          "description": "Material",
          "enum": [
            "Clear",
            "DkEdge",
            "Flat",
            "LegacyMatte",
            "LegacyMetal",
            "LegacyPlastic",
            "LegacyWireframe",
            "Matte",
            "Metal",
            "Plastic",
            "Powder",
            "SoftEdge",
            "Softmetal",
            "TranslucentPowder",
            "WarmMatte",
            "NotDefined"
          ]
        }
      }
    },
    "ShapeBevel": {
      "type": "object",
      "description": "ShapeBevel",
      "additionalProperties": false,
      "properties": {
        "BevelType": {
          "type": "string",
          "description": "Bevel type",
          "enum": [
            "Angle",
            "ArtDeco",
            "Circle",
            "Convex",
            "CoolSlant",
            "Cross",
            "Divot",
            "HardEdge",
            "RelaxedInset",
            "Riblet",
            "Slope",
            "SoftRound",
            "NotDefined"
          ]
        },
        "Width": {
          "type": "number",
          "description": "Bevel width",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Bevel height",
          "format": "double"
        }
      }
    },
    "Camera": {
      "type": "object",
      "description": "Camera",
      "additionalProperties": false,
      "properties": {
        "CameraType": {
          "type": "string",
          "description": "Camera type",
          "enum": [
            "IsometricBottomDown",
            "IsometricBottomUp",
            "IsometricLeftDown",
            "IsometricLeftUp",
            "IsometricOffAxis1Left",
            "IsometricOffAxis1Right",
            "IsometricOffAxis1Top",
            "IsometricOffAxis2Left",
            "IsometricOffAxis2Right",
            "IsometricOffAxis2Top",
            "IsometricOffAxis3Bottom",
            "IsometricOffAxis3Left",
            "IsometricOffAxis3Right",
            "IsometricOffAxis4Bottom",
            "IsometricOffAxis4Left",
            "IsometricOffAxis4Right",
            "IsometricRightDown",
            "IsometricRightUp",
            "IsometricTopDown",
            "IsometricTopUp",
            "LegacyObliqueBottom",
            "LegacyObliqueBottomLeft",
            "LegacyObliqueBottomRight",
            "LegacyObliqueFront",
            "LegacyObliqueLeft",
            "LegacyObliqueRight",
            "LegacyObliqueTop",
            "LegacyObliqueTopLeft",
            "LegacyObliqueTopRight",
            "LegacyPerspectiveBottom",
            "LegacyPerspectiveBottomLeft",
            "LegacyPerspectiveBottomRight",
            "LegacyPerspectiveFront",
            "LegacyPerspectiveLeft",
            "LegacyPerspectiveRight",
            "LegacyPerspectiveTop",
            "LegacyPerspectiveTopLeft",
            "LegacyPerspectiveTopRight",
            "ObliqueBottom",
            "ObliqueBottomLeft",
            "ObliqueBottomRight",
            "ObliqueLeft",
            "ObliqueRight",
            "ObliqueTop",
            "ObliqueTopLeft",
            "ObliqueTopRight",
            "OrthographicFront",
            "PerspectiveAbove",
            "PerspectiveAboveLeftFacing",
            "PerspectiveAboveRightFacing",
            "PerspectiveBelow",
            "PerspectiveContrastingLeftFacing",
            "PerspectiveContrastingRightFacing",
            "PerspectiveFront",
            "PerspectiveHeroicExtremeLeftFacing",
            "PerspectiveHeroicExtremeRightFacing",
            "PerspectiveHeroicLeftFacing",
            "PerspectiveHeroicRightFacing",
            "PerspectiveLeft",
            "PerspectiveRelaxed",
            "PerspectiveRelaxedModerately",
            "PerspectiveRight",
            "NotDefined"
          ]
        },
        "FieldOfViewAngle": {
          "type": "number",
          "description": "Camera FOV",
          "format": "double"
        },
        "Zoom": {
          "type": "number",
          "description": "Camera zoom",
          "format": "double"
        },
        "XRotation": {
          "type": "number",
          "description": "XRotation",
          "format": "double"
        },
        "YRotation": {
          "type": "number",
          "description": "YRotation",
          "format": "double"
        },
        "ZRotation": {
          "type": "number",
          "description": "ZRotation",
          "format": "double"
        }
      }
    },
    "LightRig": {
      "type": "object",
      "description": "Light rig",
      "additionalProperties": false,
      "properties": {
        "Direction": {
          "type": "string",
          "description": "Light direction",
          "enum": [
            "TopLeft",
            "Top",
            "TopRight",
            "Right",
            "BottomRight",
            "Bottom",
            "BottomLeft",
            "Left",
            "NotDefined"
          ]
        },
        "LightType": {
          "type": "string",
          "description": "Light type",
          "enum": [
            "Balanced",
            "BrightRoom",
            "Chilly",
            "Contrasting",
            "Flat",
            "Flood",
            "Freezing",
            "Glow",
            "Harsh",
            "LegacyFlat1",
            "LegacyFlat2",
            "LegacyFlat3",
            "LegacyFlat4",
            "LegacyHarsh1",
            "LegacyHarsh2",
            "LegacyHarsh3",
            "LegacyHarsh4",
            "LegacyNormal1",
            "LegacyNormal2",
            "LegacyNormal3",
            "LegacyNormal4",
            "Morning",
            "Soft",
            "Sunrise",
            "Sunset",
            "ThreePt",
            "TwoPt",
            "NotDefined"
          ]
        },
        "XRotation": {
          "type": "number",
          "description": "XRotation",
          "format": "double"
        },
        "YRotation": {
          "type": "number",
          "description": "YRotation",
          "format": "double"
        },
        "ZRotation": {
          "type": "number",
          "description": "ZRotation",
          "format": "double"
        }
      }
    },
    "ScatterChartDataPoint": {
      "type": "object",
      "description": "Scatter chart (two-dimensional) data point",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Data point type.",
          "default": "Scatter",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "XValue": {
          "type": "number",
          "description": "X-value",
          "format": "double"
        },
        "YValue": {
          "type": "number",
          "description": "Y-value",
          "format": "double"
        },
        "XValueFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "YValueFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "Marker": {
          "description": "Gets or sets the marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        }
      }
    },
    "BubbleChartDataPoint": {
      "type": "object",
      "description": "Bubble chart data point.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Data point type.",
          "default": "Bubble",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "BubbleSize": {
          "type": "number",
          "description": "Bubble size.",
          "format": "double"
        },
        "BubbleSizeFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "XValue": {
          "type": "number",
          "description": "X-value",
          "format": "double"
        },
        "YValue": {
          "type": "number",
          "description": "Y-value",
          "format": "double"
        },
        "XValueFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "YValueFormula": {
          "type": "string",
          "description": "Spreadsheet formula in A1-style."
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "Marker": {
          "description": "Gets or sets the marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        }
      }
    },
    "ScatterSeries": {
      "type": "object",
      "description": "A scatter series",
      "additionalProperties": false,
      "properties": {
        "DataPointType": {
          "type": "string",
          "description": "Data point type.",
          "default": "Scatter",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "DataPoints": {
          "type": "array",
          "description": "Gets or sets the values.",
          "items": {
            "$ref": "#/definitions/ScatterChartDataPoint"
          }
        },
        "NumberFormatOfYValues": {
          "type": "string",
          "description": "The number format for the series y values."
        },
        "NumberFormatOfXValues": {
          "type": "string",
          "description": "The number format for the series x values."
        },
        "DataSourceForXValues": {
          "description": "Data source type for X Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "DataSourceForYValues": {
          "description": "Data source type for Y Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "Type": {
          "type": "string",
          "description": "Series type.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Series name."
        },
        "DataSourceForSeriesName": {
          "description": "Series name data source.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "True if each data marker in the series has a different color."
        },
        "InvertedSolidFillColor": {
          "type": "string",
          "description": "Invert solid color for the series."
        },
        "Smooth": {
          "type": "boolean",
          "description": "True if curve smoothing is turned on. Applies only to line and scatter connected by lines charts."
        },
        "PlotOnSecondAxis": {
          "type": "boolean",
          "description": "True if the series is plotted on second value axis."
        },
        "Order": {
          "type": "integer",
          "description": "Series order.",
          "format": "int32"
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the series shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "Explosion": {
          "type": "integer",
          "description": "The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.",
          "format": "int32"
        },
        "Marker": {
          "description": "Series marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "FillFormat": {
          "description": "Fill properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "XYSeries": {
      "type": "object",
      "description": "Common properties for Bubble and Scatter series. ",
      "additionalProperties": false,
      "properties": {
        "NumberFormatOfYValues": {
          "type": "string",
          "description": "The number format for the series y values."
        },
        "NumberFormatOfXValues": {
          "type": "string",
          "description": "The number format for the series x values."
        },
        "DataSourceForXValues": {
          "description": "Data source type for X Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "DataSourceForYValues": {
          "description": "Data source type for Y Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "Type": {
          "type": "string",
          "description": "Series type.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Series name."
        },
        "DataSourceForSeriesName": {
          "description": "Series name data source.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "True if each data marker in the series has a different color."
        },
        "InvertedSolidFillColor": {
          "type": "string",
          "description": "Invert solid color for the series."
        },
        "Smooth": {
          "type": "boolean",
          "description": "True if curve smoothing is turned on. Applies only to line and scatter connected by lines charts."
        },
        "PlotOnSecondAxis": {
          "type": "boolean",
          "description": "True if the series is plotted on second value axis."
        },
        "Order": {
          "type": "integer",
          "description": "Series order.",
          "format": "int32"
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the series shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "Explosion": {
          "type": "integer",
          "description": "The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.",
          "format": "int32"
        },
        "Marker": {
          "description": "Series marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "FillFormat": {
          "description": "Fill properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "DataPointType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        }
      }
    },
    "BubbleSeries": {
      "type": "object",
      "description": "A bubble series.",
      "additionalProperties": false,
      "properties": {
        "DataPointType": {
          "type": "string",
          "description": "Data point type.",
          "default": "Bubble",
          "enum": [
            "OneValue",
            "Scatter",
            "Bubble"
          ]
        },
        "DataPoints": {
          "type": "array",
          "description": "Gets or sets the values.",
          "items": {
            "$ref": "#/definitions/BubbleChartDataPoint"
          }
        },
        "NumberFormatOfBubbleSizes": {
          "type": "string",
          "description": "The number format for the series bubble sizes."
        },
        "DataSourceForBubbleSizeValues": {
          "description": "Data source type for Bubble size values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "NumberFormatOfYValues": {
          "type": "string",
          "description": "The number format for the series y values."
        },
        "NumberFormatOfXValues": {
          "type": "string",
          "description": "The number format for the series x values."
        },
        "DataSourceForXValues": {
          "description": "Data source type for X Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "DataSourceForYValues": {
          "description": "Data source type for Y Values.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "Type": {
          "type": "string",
          "description": "Series type.",
          "enum": [
            "ClusteredColumn",
            "StackedColumn",
            "PercentsStackedColumn",
            "ClusteredColumn3D",
            "StackedColumn3D",
            "PercentsStackedColumn3D",
            "Column3D",
            "ClusteredCylinder",
            "StackedCylinder",
            "PercentsStackedCylinder",
            "Cylinder3D",
            "ClusteredCone",
            "StackedCone",
            "PercentsStackedCone",
            "Cone3D",
            "ClusteredPyramid",
            "StackedPyramid",
            "PercentsStackedPyramid",
            "Pyramid3D",
            "Line",
            "StackedLine",
            "PercentsStackedLine",
            "LineWithMarkers",
            "StackedLineWithMarkers",
            "PercentsStackedLineWithMarkers",
            "Line3D",
            "Pie",
            "Pie3D",
            "PieOfPie",
            "ExplodedPie",
            "ExplodedPie3D",
            "BarOfPie",
            "PercentsStackedBar",
            "ClusteredBar3D",
            "ClusteredBar",
            "StackedBar",
            "StackedBar3D",
            "PercentsStackedBar3D",
            "ClusteredHorizontalCylinder",
            "StackedHorizontalCylinder",
            "PercentsStackedHorizontalCylinder",
            "ClusteredHorizontalCone",
            "StackedHorizontalCone",
            "PercentsStackedHorizontalCone",
            "ClusteredHorizontalPyramid",
            "StackedHorizontalPyramid",
            "PercentsStackedHorizontalPyramid",
            "Area",
            "StackedArea",
            "PercentsStackedArea",
            "Area3D",
            "StackedArea3D",
            "PercentsStackedArea3D",
            "ScatterWithMarkers",
            "ScatterWithSmoothLinesAndMarkers",
            "ScatterWithSmoothLines",
            "ScatterWithStraightLinesAndMarkers",
            "ScatterWithStraightLines",
            "HighLowClose",
            "OpenHighLowClose",
            "VolumeHighLowClose",
            "VolumeOpenHighLowClose",
            "Surface3D",
            "WireframeSurface3D",
            "Contour",
            "WireframeContour",
            "Doughnut",
            "ExplodedDoughnut",
            "Bubble",
            "BubbleWith3D",
            "Radar",
            "RadarWithMarkers",
            "FilledRadar",
            "SeriesOfMixedTypes",
            "Treemap",
            "Sunburst",
            "Histogram",
            "ParetoLine",
            "BoxAndWhisker",
            "Waterfall",
            "Funnel",
            "Map"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Series name."
        },
        "DataSourceForSeriesName": {
          "description": "Series name data source.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DataSource"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "True if each data marker in the series has a different color."
        },
        "InvertedSolidFillColor": {
          "type": "string",
          "description": "Invert solid color for the series."
        },
        "Smooth": {
          "type": "boolean",
          "description": "True if curve smoothing is turned on. Applies only to line and scatter connected by lines charts."
        },
        "PlotOnSecondAxis": {
          "type": "boolean",
          "description": "True if the series is plotted on second value axis."
        },
        "Order": {
          "type": "integer",
          "description": "Series order.",
          "format": "int32"
        },
        "InvertIfNegative": {
          "type": "boolean",
          "description": "True if the series shall invert its colors if the value is negative. Applies to bar, column and bubble series."
        },
        "Explosion": {
          "type": "integer",
          "description": "The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.",
          "format": "int32"
        },
        "Marker": {
          "description": "Series marker.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SeriesMarker"
        },
        "FillFormat": {
          "description": "Fill properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line properties set for the series.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "ChartCategory": {
      "type": "object",
      "description": "Represents chart category resource",
      "additionalProperties": false,
      "properties": {
        "ParentCategories": {
          "type": "array",
          "description": "Gets or sets the parent categories. Used with Sunburst &amp; treemap categories; ignored for other chart types.",
          "items": {
            "type": "string"
          }
        },
        "Level": {
          "type": "integer",
          "description": "Gets or sets the grouping level for the category. Used with Sunburst &amp; treemap categories; ignored for other chart types.",
          "format": "int32"
        },
        "Value": {
          "type": "string",
          "description": "Category value"
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "DataPoints": {
          "type": "array",
          "description": "Gets or sets the data points for chart data",
          "items": {
            "$ref": "#/definitions/OneValueChartDataPoint"
          }
        }
      }
    },
    "ChartTitle": {
      "type": "object",
      "description": "Represents chart title",
      "additionalProperties": false,
      "properties": {
        "Text": {
          "type": "string",
          "description": "Get or sets the text."
        },
        "X": {
          "type": "number",
          "description": "the X location",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "the Y location",
          "format": "double"
        },
        "Width": {
          "type": "number",
          "description": "Width",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height",
          "format": "double"
        },
        "Overlay": {
          "type": "boolean",
          "description": "true if other elements are allowed to overlay the legend"
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "ChartWall": {
      "type": "object",
      "description": "Represents a chart wall",
      "additionalProperties": false,
      "properties": {
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "Thickness": {
          "type": "integer",
          "description": "Get or sets wall thickness as a percentage of the largest dimension of the plot volume.",
          "format": "int32"
        },
        "PictureType": {
          "type": "string",
          "description": "Get or sets mode of bar picture filling.",
          "enum": [
            "Stack",
            "StackScale",
            "Stretch",
            "NotDefined"
          ]
        }
      }
    },
    "Legend": {
      "type": "object",
      "description": "Represents a chart legend",
      "additionalProperties": false,
      "properties": {
        "Position": {
          "type": "string",
          "description": "position",
          "enum": [
            "Bottom",
            "Left",
            "Right",
            "Top",
            "TopRight"
          ]
        },
        "X": {
          "type": "number",
          "description": "the X location",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "the Y location",
          "format": "double"
        },
        "Width": {
          "type": "number",
          "description": "Width",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height",
          "format": "double"
        },
        "Overlay": {
          "type": "boolean",
          "description": "true if other elements are allowed to overlay the legend"
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HasLegend": {
          "type": "boolean",
          "description": "Get or sets value determines the visibility of legend"
        }
      }
    },
    "Axes": {
      "type": "object",
      "description": "Represents chart axes",
      "additionalProperties": false,
      "properties": {
        "HorizontalAxis": {
          "description": "Gets or sets the horizontal axis.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Axis"
        },
        "VerticalAxis": {
          "description": "Gets or sets the vertical axis.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Axis"
        },
        "SecondaryHorizontalAxis": {
          "description": "Gets or sets the secondary horizontal axis.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Axis"
        },
        "SecondaryVerticalAxis": {
          "description": "Gets or sets the secondary vertical axis.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Axis"
        }
      }
    },
    "Axis": {
      "type": "object",
      "description": "Represents a chart axis",
      "additionalProperties": false,
      "properties": {
        "IsVisible": {
          "type": "boolean",
          "description": "True if the axis is visible"
        },
        "HasTitle": {
          "type": "boolean",
          "description": "True if the axis has a visible title"
        },
        "Title": {
          "description": "Axis title",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartTitle"
        },
        "Position": {
          "type": "string",
          "description": "Axis position",
          "enum": [
            "Bottom",
            "Left",
            "Right",
            "Top"
          ]
        },
        "DisplayUnit": {
          "type": "string",
          "description": "The scaling value of the display units for the value axis",
          "enum": [
            "None",
            "Hundreds",
            "Thousands",
            "TenThousands",
            "HundredThousands",
            "Millions",
            "TenMillions",
            "HundredMillions",
            "Billions",
            "Trillions",
            "CustomValue"
          ]
        },
        "BaseUnitScale": {
          "type": "string",
          "description": "The smallest time unit that is represented on the date axis",
          "enum": [
            "None",
            "Days",
            "Months",
            "Years"
          ]
        },
        "IsAutomaticMajorUnit": {
          "type": "boolean",
          "description": "True the major unit of the axis is automatically assigned"
        },
        "MajorUnit": {
          "type": "number",
          "description": "The major units for the date or value axis",
          "format": "double"
        },
        "MajorUnitScale": {
          "type": "string",
          "description": "The major unit scale for the date axis",
          "enum": [
            "None",
            "Days",
            "Months",
            "Years"
          ]
        },
        "MajorTickMark": {
          "type": "string",
          "description": "The type of major tick mark for the specified axis",
          "enum": [
            "Cross",
            "Inside",
            "None",
            "Outside"
          ]
        },
        "IsAutomaticMinorUnit": {
          "type": "boolean",
          "description": "True the minor unit of the axis is automatically assigned"
        },
        "MinorUnit": {
          "type": "number",
          "description": "The minor units for the date or value axis",
          "format": "double"
        },
        "MinorUnitScale": {
          "type": "string",
          "description": "The minor unit scale for the date axis",
          "enum": [
            "None",
            "Days",
            "Months",
            "Years"
          ]
        },
        "MinorTickMark": {
          "type": "string",
          "description": "The type of minor tick mark for the specified axis",
          "enum": [
            "Cross",
            "Inside",
            "None",
            "Outside"
          ]
        },
        "IsAutomaticMaxValue": {
          "type": "boolean",
          "description": "True if the max value is automatically assigned"
        },
        "MaxValue": {
          "type": "number",
          "description": "The maximum value on the value axis",
          "format": "double"
        },
        "IsAutomaticMinValue": {
          "type": "boolean",
          "description": "True if the min value is automatically assigned"
        },
        "MinValue": {
          "type": "number",
          "description": "The minimum value on the value axis",
          "format": "double"
        },
        "IsLogarithmic": {
          "type": "boolean",
          "description": "True if the value axis scale type is logarithmic"
        },
        "LogBase": {
          "type": "number",
          "description": "The logarithmic base. Default value is 10",
          "format": "double"
        },
        "CategoryAxisType": {
          "type": "string",
          "description": "The type of the category axis",
          "enum": [
            "Text",
            "Date"
          ]
        },
        "AxisBetweenCategories": {
          "type": "boolean",
          "description": "True if the value axis crosses the category axis between categories. This property applies only to category axes, and it doesn't apply to 3-D charts"
        },
        "LabelOffset": {
          "type": "integer",
          "description": "The distance of labels from the axis. Applied to category or date axis. Value must be between 0% and 1000%.\n            "
        },
        "IsPlotOrderReversed": {
          "type": "boolean",
          "description": "True if MS PowerPoint plots data points from last to first"
        },
        "IsNumberFormatLinkedToSource": {
          "type": "boolean",
          "description": "True if the format is linked to source data"
        },
        "NumberFormat": {
          "type": "string",
          "description": "the format string for the Axis Labels"
        },
        "CrossType": {
          "type": "string",
          "description": "The CrossType on the specified axis where the other axis crosses",
          "enum": [
            "AxisCrossesAtZero",
            "Maximum",
            "Custom"
          ]
        },
        "CrossAt": {
          "type": "number",
          "description": "The point on the axis where the perpendicular axis crosses it",
          "format": "double"
        },
        "IsAutomaticTickMarksSpacing": {
          "type": "boolean",
          "description": "True for automatic tick marks spacing value"
        },
        "TickMarksSpacing": {
          "type": "integer",
          "description": "Specifies how many tick marks shall be skipped before the next one shall be drawn. Applied to category or series axis."
        },
        "IsAutomaticTickLabelSpacing": {
          "type": "boolean",
          "description": "True for automatic tick label spacing value"
        },
        "TickLabelSpacing": {
          "type": "integer",
          "description": "Specifies how many tick labels to skip between label that is drawn."
        },
        "TickLabelPosition": {
          "type": "string",
          "description": "The position of tick-mark labels on the specified axis.",
          "enum": [
            "High",
            "Low",
            "NextTo",
            "None"
          ]
        },
        "TickLabelRotationAngle": {
          "type": "number",
          "description": "Represents the rotation angle of tick labels.",
          "format": "double"
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "MajorGridLinesFormat": {
          "description": "Get or sets the format of major grid lines.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartLinesFormat"
        },
        "MinorGridLinesFormat": {
          "description": "Get or sets the format of major grid lines.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartLinesFormat"
        }
      }
    },
    "ChartLinesFormat": {
      "type": "object",
      "description": "Represents the lines format of chart elements. ",
      "additionalProperties": false,
      "properties": {
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "PlotArea": {
      "type": "object",
      "description": "Represents the plot area",
      "additionalProperties": false,
      "properties": {
        "X": {
          "type": "number",
          "description": "the X location",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "the Y location",
          "format": "double"
        },
        "Width": {
          "type": "number",
          "description": "Width",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height",
          "format": "double"
        },
        "LayoutTargetType": {
          "type": "string",
          "description": "If layout of the plot area is defined manually specifies whether to layout the plot area by its inside (not including axis and axis labels) or outside.",
          "enum": [
            "Inner",
            "Outer"
          ]
        },
        "FillFormat": {
          "description": "Get or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Get or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Get or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        }
      }
    },
    "ChartSeriesGroup": {
      "type": "object",
      "description": "Chart series group. Defines common properties for a group of series.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Returns a type of this series group.",
          "enum": [
            "BarOfPieChart",
            "PieOfPieChart",
            "DoughnutChart",
            "PieChart",
            "AreaChartArea",
            "AreaChartPercentsStackedArea",
            "AreaChartStackedArea",
            "BarChartHorizClustered",
            "BarChartHorizStacked",
            "BarChartHorizPercentsStacked",
            "BarChartVertClustered",
            "BarChartVertStacked",
            "BarChartVertPercentsStacked",
            "LineChartLine",
            "LineChartStackedLine",
            "LineChartPercentsStackedLine",
            "RadarChart",
            "FilledRadarChart",
            "StockHighLowClose",
            "StockOpenHighLowClose",
            "StockVolumeHighLowClose",
            "StockVolumeOpenHighLowClose",
            "ScatterStraightMarker",
            "ScatterSmoothMarker",
            "AreaChartArea3D",
            "AreaChartStackedArea3D",
            "AreaChartPercentsStackedArea3D",
            "Line3DChart",
            "Pie3DChart",
            "Bar3DChartVert",
            "Bar3DChartVertClustered",
            "Bar3DChartVertPercentsStackedColumn3D",
            "Bar3DChartVertPercentsStackedCone",
            "Bar3DChartVertPercentsStackedCylinder",
            "Bar3DChartVertPercentsStackedPyramid",
            "Bar3DChartVertStackedColumn3D",
            "Bar3DChartVertStackedCone",
            "Bar3DChartVertStackedCylinder",
            "Bar3DChartVertStackedPyramid",
            "Bar3DChartHorizClustered",
            "Bar3DChartHorizStackedBar3D",
            "Bar3DChartHorizStackedCone",
            "Bar3DChartHorizStackedCylinder",
            "Bar3DChartHorizStackedPyramid",
            "Bar3DChartHorizPercentsStackedBar3D",
            "Bar3DChartHorizPercentsStackedCone",
            "Bar3DChartHorizPercentsStackedCylinder",
            "Bar3DChartHorizPercentsStackedPyramid",
            "SurfaceChartContour",
            "SurfaceChartWireframeContour",
            "SurfaceChartSurface3D",
            "SurfaceChartWireframeSurface3D",
            "BubbleChart",
            "HistogramChart",
            "ParetoLineChart",
            "BoxAndWhiskerChart",
            "WaterfallChart",
            "FunnelChart",
            "TreemapChart",
            "MapChart",
            "SunburstChart"
          ]
        },
        "GapWidth": {
          "type": "integer",
          "description": "Specifies the space between bar or column clusters, as a percentage of the bar or column width.",
          "format": "int32"
        },
        "GapDepth": {
          "type": "integer",
          "description": "Returns or sets the distance, as a percentage of the marker width, between the data series in a 3D chart.",
          "format": "int32"
        },
        "FirstSliceAngle": {
          "type": "integer",
          "description": "Gets or sets the angle of the first pie or doughnut chart slice, \nin degrees (clockwise from up, from 0 to 360 degrees).",
          "format": "int32"
        },
        "IsColorVaried": {
          "type": "boolean",
          "description": "Specifies that each data marker in the series has a different color."
        },
        "HasSeriesLines": {
          "type": "boolean",
          "description": "True if chart has series lines. Applied to stacked bar and OfPie charts."
        },
        "Overlap": {
          "type": "integer",
          "description": "Specifies how much bars and columns shall overlap on 2-D charts (from -100 to 100).",
          "format": "int32"
        },
        "SecondPieSize": {
          "type": "integer",
          "description": "Specifies the size of the second pie or bar of a pie-of-pie chart or \na bar-of-pie chart, as a percentage of the size of the first pie (can \nbe between 5 and 200 percents).",
          "format": "int32"
        },
        "PieSplitPosition": {
          "type": "number",
          "description": "Specifies a value that shall be used to determine which data points \nare in the second pie or bar on a pie-of-pie or bar-of-pie chart. \nIs used together with PieSplitBy property.",
          "format": "double"
        },
        "PieSplitBy": {
          "type": "string",
          "description": "Specifies how to determine which data points are in the second pie or bar \non a pie-of-pie or bar-of-pie chart.",
          "enum": [
            "Default",
            "Custom",
            "ByPercentage",
            "ByPos",
            "ByValue"
          ]
        },
        "DoughnutHoleSize": {
          "type": "integer",
          "description": "Specifies the size of the hole in a doughnut chart (can be between 10 and 90 percents \nof the size of the plot area.).",
          "format": "int32"
        },
        "BubbleSizeScale": {
          "type": "integer",
          "description": "Specifies the scale factor for the bubble chart (can be \nbetween 0 and 300 percents of the default size).\nRead/write Int32.",
          "format": "int32"
        },
        "HiLowLinesFormat": {
          "description": "Specifies HiLowLines format. \nHiLowLines applied with HiLowClose, OpenHiLowClose, VolumeHiLowClose and VolumeOpenHiLowClose chart types.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ChartLinesFormat"
        },
        "BubbleSizeRepresentation": {
          "type": "string",
          "description": "Specifies how the bubble size values are represented on the bubble chart.\nRead/write BubbleSizeRepresentationType.",
          "enum": [
            "Area",
            "Width"
          ]
        }
      }
    },
    "ShapeBase": {
      "type": "object",
      "description": "Slide shape.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Hyperlink": {
      "type": "object",
      "description": "Hyperlink",
      "additionalProperties": false,
      "required": [
        "ActionType"
      ],
      "properties": {
        "IsDisabled": {
          "type": "boolean",
          "description": "If true Hypelink is not applied. "
        },
        "ActionType": {
          "type": "string",
          "description": "Type of HyperLink action\n            ",
          "enum": [
            "NoAction",
            "Hyperlink",
            "JumpFirstSlide",
            "JumpPreviousSlide",
            "JumpNextSlide",
            "JumpLastSlide",
            "JumpEndShow",
            "JumpLastViewedSlide",
            "JumpSpecificSlide",
            "StartCustomSlideShow",
            "OpenFile",
            "OpenPresentation",
            "StartStopMedia",
            "StartMacro",
            "StartProgram",
            "Unknown"
          ]
        },
        "ExternalUrl": {
          "type": "string",
          "description": "Specifies the external URL"
        },
        "TargetSlideIndex": {
          "type": "integer",
          "description": "Index of the target slide",
          "format": "int32"
        },
        "TargetFrame": {
          "type": "string",
          "description": "Target frame"
        },
        "Tooltip": {
          "type": "string",
          "description": "Hyperlink tooltip"
        },
        "History": {
          "type": "boolean",
          "description": "Makes hyperlink viewed when it is invoked.\n            "
        },
        "HighlightClick": {
          "type": "boolean",
          "description": "Determines whether the hyperlink should be highlighted on click."
        },
        "StopSoundOnClick": {
          "type": "boolean",
          "description": "Determines whether the sound should be stopped on hyperlink click"
        },
        "ColorSource": {
          "type": "string",
          "description": "Represents the source of hyperlink color",
          "enum": [
            "Styles",
            "PortionFormat"
          ]
        },
        "SoundBase64": {
          "type": "string",
          "description": "Audio data encoded in base64. Represents the playing sound of the hyperlink. "
        }
      }
    },
    "SmartArt": {
      "type": "object",
      "description": "Represents SmartArt shape resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "SmartArt",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Layout": {
          "type": "string",
          "description": "Layout type.",
          "enum": [
            "AccentProcess",
            "AccentedPicture",
            "AlternatingFlow",
            "AlternatingHexagons",
            "AlternatingPictureBlocks",
            "AlternatingPictureCircles",
            "ArrowRibbon",
            "AscendingPictureAccentProcess",
            "Balance",
            "BasicBendingProcess",
            "BasicBlockList",
            "BasicChevronProcess",
            "BasicCycle",
            "BasicMatrix",
            "BasicPie",
            "BasicProcess",
            "BasicPyramid",
            "BasicRadial",
            "BasicTarget",
            "BasicTimeline",
            "BasicVenn",
            "BendingPictureAccentList",
            "BendingPictureBlocks",
            "BendingPictureCaption",
            "BendingPictureCaptionList",
            "BendingPictureSemiTransparentText",
            "BlockCycle",
            "BubblePictureList",
            "CaptionedPictures",
            "ChevronList",
            "CircleAccentTimeline",
            "CircleArrowProcess",
            "CirclePictureHierarchy",
            "CircleRelationship",
            "CircularBendingProcess",
            "CircularPictureCallout",
            "ClosedChevronProcess",
            "ContinuousArrowProcess",
            "ContinuousBlockProcess",
            "ContinuousCycle",
            "ContinuousPictureList",
            "ConvergingArrows",
            "ConvergingRadial",
            "CounterbalanceArrows",
            "CycleMatrix",
            "DescendingBlockList",
            "DescendingProcess",
            "DetailedProcess",
            "DivergingArrows",
            "DivergingRadial",
            "Equation",
            "FramedTextPicture",
            "Funnel",
            "Gear",
            "GridMatrix",
            "GroupedList",
            "HalfCircleOrganizationChart",
            "HexagonCluster",
            "Hierarchy",
            "HierarchyList",
            "HorizontalBulletList",
            "HorizontalHierarchy",
            "HorizontalLabeledHierarchy",
            "HorizontalMultiLevelHierarchy",
            "HorizontalOrganizationChart",
            "HorizontalPictureList",
            "IncreasingArrowsProcess",
            "IncreasingCircleProcess",
            "InvertedPyramid",
            "LabeledHierarchy",
            "LinearVenn",
            "LinedList",
            "MultidirectionalCycle",
            "NameandTitleOrganizationChart",
            "NestedTarget",
            "NondirectionalCycle",
            "OpposingArrows",
            "OpposingIdeas",
            "OrganizationChart",
            "PhasedProcess",
            "PictureAccentBlocks",
            "PictureAccentList",
            "PictureAccentProcess",
            "PictureCaptionList",
            "PictureGrid",
            "PictureLineup",
            "PictureStrips",
            "PieProcess",
            "PlusandMinus",
            "ProcessArrows",
            "ProcessList",
            "PyramidList",
            "RadialCluster",
            "RadialCycle",
            "RadialList",
            "RadialVenn",
            "RandomToResultProcess",
            "RepeatingBendingProcess",
            "ReverseList",
            "SegmentedCycle",
            "SegmentedProcess",
            "SegmentedPyramid",
            "SnapshotPictureList",
            "SpiralPicture",
            "SquareAccentList",
            "StackedList",
            "StackedVenn",
            "StaggeredProcess",
            "StepDownProcess",
            "StepUpProcess",
            "SubStepProcess",
            "TableHierarchy",
            "TableList",
            "TargetList",
            "TextCycle",
            "TitlePictureLineup",
            "TitledMatrix",
            "TitledPictureAccentList",
            "TitledPictureBlocks",
            "TrapezoidList",
            "UpwardArrow",
            "VerticalAccentList",
            "VerticalArrowList",
            "VerticalBendingProcess",
            "VerticalBlockList",
            "VerticalBoxList",
            "VerticalBulletList",
            "VerticalChevronList",
            "VerticalCircleList",
            "VerticalCurvedList",
            "VerticalEquation",
            "VerticalPictureAccentList",
            "VerticalPictureList",
            "VerticalProcess",
            "Custom",
            "PictureOrganizationChart"
          ]
        },
        "QuickStyle": {
          "type": "string",
          "description": "Quick style.",
          "enum": [
            "SimpleFill",
            "WhiteOutline",
            "SubtleEffect",
            "ModerateEffect",
            "IntenceEffect",
            "Polished",
            "Inset",
            "Cartoon",
            "Powder",
            "BrickScene",
            "FlatScene",
            "MetallicScene",
            "SunsetScene",
            "BirdsEyeScene"
          ]
        },
        "ColorStyle": {
          "type": "string",
          "description": "Color style.",
          "enum": [
            "Dark1Outline",
            "Dark2Outline",
            "DarkFill",
            "ColorfulAccentColors",
            "ColorfulAccentColors2to3",
            "ColorfulAccentColors3to4",
            "ColorfulAccentColors4to5",
            "ColorfulAccentColors5to6",
            "ColoredOutlineAccent1",
            "ColoredFillAccent1",
            "GradientRangeAccent1",
            "GradientLoopAccent1",
            "TransparentGradientRangeAccent1",
            "ColoredOutlineAccent2",
            "ColoredFillAccent2",
            "GradientRangeAccent2",
            "GradientLoopAccent2",
            "TransparentGradientRangeAccent2",
            "ColoredOutlineAccent3",
            "ColoredFillAccent3",
            "GradientRangeAccent3",
            "GradientLoopAccent3",
            "TransparentGradientRangeAccent3",
            "ColoredOutlineAccent4",
            "ColoredFillAccent4",
            "GradientRangeAccent4",
            "GradientLoopAccent4",
            "TransparentGradientRangeAccent4",
            "ColoredOutlineAccent5",
            "ColoredFillAccent5",
            "GradientRangeAccent5",
            "GradientLoopAccent5",
            "TransparentGradientRangeAccent5",
            "ColoredOutlineAccent6",
            "ColoredFillAccent6",
            "GradientRangeAccent6",
            "GradientLoopAccent6",
            "TransparentGradientRangeAccent6"
          ]
        },
        "Nodes": {
          "type": "array",
          "description": "Collection of nodes in SmartArt object.\n            ",
          "items": {
            "$ref": "#/definitions/SmartArtNode"
          }
        },
        "IsReversed": {
          "type": "boolean",
          "description": "The state of the SmartArt diagram with regard to (left-to-right) LTR or (right-to-left) RTL, if the diagram supports reversal."
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SmartArtNode": {
      "type": "object",
      "description": "Smart art node.",
      "additionalProperties": false,
      "required": [
        "OrgChartLayout"
      ],
      "properties": {
        "Shapes": {
          "description": "Gets or sets the link to shapes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "IsAssistant": {
          "type": "boolean",
          "description": "True for and assistant node."
        },
        "Text": {
          "type": "string",
          "description": "Node text."
        },
        "OrgChartLayout": {
          "type": "string",
          "description": "Organization chart layout type associated with current node.",
          "enum": [
            "Initial",
            "Standart",
            "BothHanging",
            "LeftHanging",
            "RightHanging"
          ]
        },
        "Paragraphs": {
          "description": "Get or sets list to paragraphs list",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        }
      }
    },
    "AudioFrame": {
      "type": "object",
      "description": "Represents AudioFrame resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "AudioFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "AudioCdEndTrack": {
          "type": "integer",
          "description": "Returns or sets a last track index.",
          "format": "int32"
        },
        "AudioCdEndTrackTime": {
          "type": "integer",
          "description": "Returns or sets a last track time.",
          "format": "int32"
        },
        "AudioCdStartTrack": {
          "type": "integer",
          "description": "Returns or sets a start track index.",
          "format": "int32"
        },
        "AudioCdStartTrackTime": {
          "type": "integer",
          "description": "Returns or sets a start track time. ",
          "format": "int32"
        },
        "Embedded": {
          "type": "boolean",
          "description": "Determines whether a sound is embedded to a presentation."
        },
        "HideAtShowing": {
          "type": "boolean",
          "description": "Determines whether an AudioFrame is hidden."
        },
        "PlayLoopMode": {
          "type": "boolean",
          "description": "Determines whether an audio is looped. "
        },
        "PlayMode": {
          "type": "string",
          "description": "Returns or sets the audio play mode.",
          "enum": [
            "Auto",
            "OnClick",
            "AllSlides",
            "InClickSequence",
            "Mixed"
          ]
        },
        "Volume": {
          "type": "string",
          "description": "Returns or sets the audio volume.",
          "enum": [
            "Mute",
            "Low",
            "Medium",
            "Loud",
            "Mixed"
          ]
        },
        "VolumeValue": {
          "type": "number",
          "description": "Audio volume percent.",
          "format": "double"
        },
        "Base64Data": {
          "type": "string",
          "description": "Audio data encoded in base64."
        },
        "PlayAcrossSlides": {
          "type": "boolean",
          "description": "Determines whether an audio is playing across the slides."
        },
        "RewindAudio": {
          "type": "boolean",
          "description": "Determines whether audio is automatically rewound to start after playing."
        },
        "FadeInDuration": {
          "type": "number",
          "description": "Time duration for the initial fade-in of the media in milliseconds.",
          "format": "double"
        },
        "FadeOutDuration": {
          "type": "number",
          "description": "Time duration for the ending fade-out of the media in milliseconds.",
          "format": "double"
        },
        "TrimFromStart": {
          "type": "number",
          "description": "Time duration to be removed from the beginning of the media during playback in milliseconds.",
          "format": "double"
        },
        "TrimFromEnd": {
          "type": "number",
          "description": "Time duration to be removed from the end of the media during playback in milliseconds.",
          "format": "double"
        },
        "PictureFillFormat": {
          "description": "Picture fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PictureFill"
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "GeometryShape": {
      "type": "object",
      "description": "Represents GeometryShape resource.",
      "additionalProperties": false,
      "properties": {
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Shape": {
      "type": "object",
      "description": "Represents AutoShape resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "Shape",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Text": {
          "type": "string",
          "description": "Gets or sets the text."
        },
        "Paragraphs": {
          "type": "array",
          "readOnly": true,
          "description": "Get or sets list to paragraphs list",
          "items": {
            "$ref": "#/definitions/Paragraph"
          }
        },
        "TextFrameFormat": {
          "description": "Returns TextFrame's formatting properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/TextFrameFormat"
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Paragraph": {
      "type": "object",
      "description": "Represents paragraph resource",
      "additionalProperties": false,
      "properties": {
        "MarginLeft": {
          "type": "number",
          "description": "Left margin.",
          "format": "double"
        },
        "MarginRight": {
          "type": "number",
          "description": "Right margin.",
          "format": "double"
        },
        "SpaceBefore": {
          "type": "number",
          "description": "Left spacing.",
          "format": "double"
        },
        "SpaceAfter": {
          "type": "number",
          "description": "Right spacing.",
          "format": "double"
        },
        "SpaceWithin": {
          "type": "number",
          "description": "Spacing between lines.",
          "format": "double"
        },
        "Indent": {
          "type": "number",
          "description": "First line indent.",
          "format": "double"
        },
        "Alignment": {
          "type": "string",
          "description": "Text alignment.",
          "enum": [
            "Left",
            "Center",
            "Right",
            "Justify",
            "JustifyLow",
            "Distributed",
            "NotDefined"
          ]
        },
        "FontAlignment": {
          "type": "string",
          "description": "Font alignment.",
          "enum": [
            "Automatic",
            "Top",
            "Center",
            "Bottom",
            "Baseline",
            "Default"
          ]
        },
        "DefaultTabSize": {
          "type": "number",
          "description": "Default tabulation size.",
          "format": "double"
        },
        "Depth": {
          "type": "integer",
          "description": "Depth."
        },
        "HangingPunctuation": {
          "type": "string",
          "description": "True if hanging punctuation is used with the paragraph.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "EastAsianLineBreak": {
          "type": "string",
          "description": "True if East Asian line break is used with the paragraph.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "LatinLineBreak": {
          "type": "string",
          "description": "True if Latin line break is used with the paragraph.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "RightToLeft": {
          "type": "string",
          "description": "True if right to left direction is used with the paragraph.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "PortionList": {
          "type": "array",
          "description": "List of portion links.",
          "items": {
            "$ref": "#/definitions/Portion"
          }
        },
        "DefaultPortionFormat": {
          "description": "Default portion format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PortionFormat"
        },
        "BulletChar": {
          "type": "string",
          "description": "Bullet char."
        },
        "BulletHeight": {
          "type": "number",
          "description": "Bullet height.",
          "format": "double"
        },
        "BulletType": {
          "type": "string",
          "description": "Bullet type.",
          "enum": [
            "None",
            "Symbol",
            "Numbered",
            "Picture",
            "NotDefined"
          ]
        },
        "NumberedBulletStartWith": {
          "type": "integer",
          "description": "Starting number for a numbered bullet."
        },
        "NumberedBulletStyle": {
          "type": "string",
          "description": "Numbered bullet style.",
          "enum": [
            "BulletAlphaLCPeriod",
            "BulletAlphaUCPeriod",
            "BulletArabicParenRight",
            "BulletArabicPeriod",
            "BulletRomanLCParenBoth",
            "BulletRomanLCParenRight",
            "BulletRomanLCPeriod",
            "BulletRomanUCPeriod",
            "BulletAlphaLCParenBoth",
            "BulletAlphaLCParenRight",
            "BulletAlphaUCParenBoth",
            "BulletAlphaUCParenRight",
            "BulletArabicParenBoth",
            "BulletArabicPlain",
            "BulletRomanUCParenBoth",
            "BulletRomanUCParenRight",
            "BulletSimpChinPlain",
            "BulletSimpChinPeriod",
            "BulletCircleNumDBPlain",
            "BulletCircleNumWDWhitePlain",
            "BulletCircleNumWDBlackPlain",
            "BulletTradChinPlain",
            "BulletTradChinPeriod",
            "BulletArabicAlphaDash",
            "BulletArabicAbjadDash",
            "BulletHebrewAlphaDash",
            "BulletKanjiKoreanPlain",
            "BulletKanjiKoreanPeriod",
            "BulletArabicDBPlain",
            "BulletArabicDBPeriod",
            "BulletThaiAlphaPeriod",
            "BulletThaiAlphaParenRight",
            "BulletThaiAlphaParenBoth",
            "BulletThaiNumPeriod",
            "BulletThaiNumParenRight",
            "BulletThaiNumParenBoth",
            "BulletHindiAlphaPeriod",
            "BulletHindiNumPeriod",
            "BulletKanjiSimpChinDBPeriod",
            "BulletHindiNumParenRight",
            "BulletHindiAlpha1Period",
            "NotDefined"
          ]
        },
        "BulletFillFormat": {
          "description": "Bullet fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Portion": {
      "type": "object",
      "description": "Represents portion resource",
      "additionalProperties": false,
      "properties": {
        "Text": {
          "type": "string",
          "description": "Text."
        },
        "MathParagraph": {
          "description": "Math paragraph.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathParagraph"
        },
        "FontBold": {
          "type": "string",
          "description": "True for bold font.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FontItalic": {
          "type": "string",
          "description": "True for italic font.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FontUnderline": {
          "type": "string",
          "description": "Text underline type.",
          "enum": [
            "None",
            "Words",
            "Single",
            "Double",
            "Heavy",
            "Dotted",
            "HeavyDotted",
            "Dashed",
            "HeavyDashed",
            "LongDashed",
            "HeavyLongDashed",
            "DotDash",
            "HeavyDotDash",
            "DotDotDash",
            "HeavyDotDotDash",
            "Wavy",
            "HeavyWavy",
            "DoubleWavy",
            "NotDefined"
          ]
        },
        "StrikethroughType": {
          "type": "string",
          "description": "Text strikethrough type.",
          "enum": [
            "None",
            "Single",
            "Double",
            "NotDefined"
          ]
        },
        "TextCapType": {
          "type": "string",
          "description": "Text capitalization type.",
          "enum": [
            "None",
            "Small",
            "All",
            "NotDefined"
          ]
        },
        "Escapement": {
          "type": "number",
          "description": "Superscript or subscript of the text.",
          "format": "double"
        },
        "Spacing": {
          "type": "number",
          "description": "Intercharacter spacing increment.",
          "format": "double"
        },
        "FontColor": {
          "type": "string",
          "description": "Font color."
        },
        "HighlightColor": {
          "type": "string",
          "description": "Highlight color."
        },
        "FontHeight": {
          "type": "number",
          "description": "Font height.",
          "format": "double"
        },
        "NormaliseHeight": {
          "type": "string",
          "description": "True to normalize the text.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "ProofDisabled": {
          "type": "string",
          "description": "True if the text proof should be disabled.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "SmartTagClean": {
          "type": "boolean",
          "description": "True if smart tag should be cleaned."
        },
        "KerningMinimalSize": {
          "type": "number",
          "description": "Minimal font size for kerning.",
          "format": "double"
        },
        "Kumimoji": {
          "type": "string",
          "description": "True if numbers should ignore East-Asian specific vertical text layout.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "LanguageId": {
          "type": "string",
          "description": "Proving language ID."
        },
        "AlternativeLanguageId": {
          "type": "string",
          "description": "Alternative proving language ID."
        },
        "IsHardUnderlineFill": {
          "type": "string",
          "description": "True if underline style has own FillFormat properties.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "IsHardUnderlineLine": {
          "type": "string",
          "description": "True if underline style has own LineFormat properties.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "UnderlineFillFormat": {
          "description": "Underline fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "UnderlineLineFormat": {
          "description": "Underline line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "LatinFont": {
          "type": "string",
          "description": "Returns or sets the Latin font info."
        },
        "EastAsianFont": {
          "type": "string",
          "description": "Returns or sets the East Asian font info."
        },
        "ComplexScriptFont": {
          "type": "string",
          "description": "Returns or sets the complex script font info."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "MathParagraph": {
      "type": "object",
      "description": "Mathematical paragraph that is a container for mathematical blocks",
      "additionalProperties": false,
      "properties": {
        "MathBlockList": {
          "type": "array",
          "description": "List of math blocks",
          "items": {
            "$ref": "#/definitions/BlockElement"
          }
        },
        "Justification": {
          "type": "string",
          "description": "Justification of the math paragraph",
          "enum": [
            "LeftJustified",
            "RightJustified",
            "Centered",
            "CenteredAsGroup"
          ]
        }
      }
    },
    "BlockElement": {
      "type": "object",
      "description": "Specifies an instance of mathematical text that contained within a MathParagraph and starts on its own line.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Block",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "MathElementList": {
          "type": "array",
          "description": "List of math elements.",
          "items": {
            "$ref": "#/definitions/MathElement"
          }
        }
      }
    },
    "MathElement": {
      "type": "object",
      "description": "Math element.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        }
      }
    },
    "AccentElement": {
      "type": "object",
      "description": "Specifies the accent function, consisting of a base and a combining diacritical mark",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Accent",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "The argument to which the accent was applied",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Character": {
          "type": "string",
          "description": "Accent Character"
        }
      }
    },
    "ArrayElement": {
      "type": "object",
      "description": "An array of elements.",
      "additionalProperties": false,
      "properties": {
        "Arguments": {
          "type": "array",
          "description": "Arguments",
          "items": {
            "$ref": "#/definitions/MathElement"
          }
        },
        "BaseJustification": {
          "type": "string",
          "description": "Specifies alignment of the array relative to surrounding text",
          "enum": [
            "NotDefined",
            "Top",
            "Center",
            "Bottom"
          ]
        },
        "Type": {
          "type": "string",
          "description": "Type",
          "default": "Array",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "MaximumDistribution": {
          "type": "boolean",
          "description": "Maximum Distribution"
        },
        "ObjectDistribution": {
          "type": "boolean",
          "description": "Object Distribution"
        },
        "RowSpacingRule": {
          "type": "string",
          "description": "The type of vertical spacing between array elements",
          "enum": [
            "SingleLineGap",
            "OneAndAHalfLineGap",
            "TwoLineGap",
            "Exactly",
            "Multiple"
          ]
        },
        "RowSpacing": {
          "type": "integer",
          "description": "Spacing between rows of an array",
          "format": "int32"
        }
      }
    },
    "BarElement": {
      "type": "object",
      "description": "Specifies the bar function, consisting of a base argument and an overbar or underbar",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Bar",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Position": {
          "type": "string",
          "description": "Position of the bar line.\n            ",
          "enum": [
            "NotDefined",
            "Top",
            "Bottom"
          ]
        }
      }
    },
    "BoxElement": {
      "type": "object",
      "description": "Box element.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Box",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "OperatorEmulator": {
          "type": "boolean",
          "description": "Operator emulator"
        },
        "NoBreak": {
          "type": "boolean",
          "description": "No break"
        },
        "Differential": {
          "type": "boolean",
          "description": "Differential"
        },
        "AlignmentPoint": {
          "type": "boolean",
          "description": "Alignment point"
        },
        "ExplicitBreak": {
          "type": "integer",
          "description": "Explicit break",
          "format": "int32"
        }
      }
    },
    "DelimiterElement": {
      "type": "object",
      "description": "Delimiter element",
      "additionalProperties": false,
      "properties": {
        "Arguments": {
          "type": "array",
          "description": "Arguments",
          "items": {
            "$ref": "#/definitions/MathElement"
          }
        },
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Delimiter",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "BeginningCharacter": {
          "type": "string",
          "description": "Beginning character"
        },
        "SeparatorCharacter": {
          "type": "string",
          "description": "Separator character"
        },
        "EndingCharacter": {
          "type": "string",
          "description": "Ending character"
        },
        "GrowToMatchOperandHeight": {
          "type": "boolean",
          "description": "Grow to match operand height"
        },
        "DelimiterShape": {
          "type": "string",
          "description": "Delimiter shape",
          "enum": [
            "Centered",
            "Match"
          ]
        }
      }
    },
    "FractionElement": {
      "type": "object",
      "description": "Specifies the fraction object, consisting of a numerator and denominator separated by a fraction bar.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Fraction",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "FractionType": {
          "type": "string",
          "description": "Fraction type",
          "enum": [
            "Bar",
            "Skewed",
            "Linear",
            "NoBar"
          ]
        },
        "Numerator": {
          "description": "Numerator",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Denominator": {
          "description": "Denominator",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        }
      }
    },
    "FunctionElement": {
      "type": "object",
      "description": "Specifies a function of an argument.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Function",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Name": {
          "description": "Function",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Base": {
          "description": "Function Argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        }
      }
    },
    "LimitElement": {
      "type": "object",
      "description": "Specifies the Limit object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Limit",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Limit": {
          "description": "Limit",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "UpperLimit": {
          "type": "boolean",
          "description": "Specifies upper or lower limit"
        }
      }
    },
    "MatrixElement": {
      "type": "object",
      "description": "Specifies the Matrix object,",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Matrix",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "HidePlaceholders": {
          "type": "boolean",
          "description": "Hide the placeholders for empty matrix elements"
        },
        "BaseJustification": {
          "type": "string",
          "description": "Specifies the vertical justification respect to surrounding text. ",
          "enum": [
            "NotDefined",
            "Top",
            "Center",
            "Bottom"
          ]
        },
        "MinColumnWidth": {
          "type": "integer",
          "description": "Minimum column width in twips (1/20th of a point)",
          "format": "int32"
        },
        "ColumnGapRule": {
          "type": "string",
          "description": "The type of horizontal spacing between columns of a matrix.",
          "enum": [
            "SingleSpacingGap",
            "OneAndHalfSpacingGap",
            "DoubleSpacingGap",
            "Exactly",
            "Multiple"
          ]
        },
        "ColumnGap": {
          "type": "integer",
          "description": "The value of horizontal spacing between columns of a matrix",
          "format": "int32"
        },
        "RowGapRule": {
          "type": "string",
          "description": "The type of vertical spacing between rows of a matrix",
          "enum": [
            "SingleSpacingGap",
            "OneAndHalfSpacingGap",
            "DoubleSpacingGap",
            "Exactly",
            "Multiple"
          ]
        },
        "RowGap": {
          "type": "integer",
          "description": "The value of vertical spacing between rows of a matrix;\n            ",
          "format": "int32"
        },
        "Items": {
          "type": "array",
          "description": "Matrix items",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MathElement"
            }
          }
        }
      }
    },
    "RadicalElement": {
      "type": "object",
      "description": "Radical function",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Radical",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Degree": {
          "description": "Degree argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "HideDegree": {
          "type": "boolean",
          "description": "Hide degree"
        }
      }
    },
    "TextElement": {
      "type": "object",
      "description": "Mathematical text",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "Text",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Value": {
          "type": "string",
          "description": "Value"
        }
      }
    },
    "BorderBoxElement": {
      "type": "object",
      "description": "Rectangular or some other border around the MathElement. ",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "BorderBox",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "HideTop": {
          "type": "boolean",
          "description": "Hide Top Edge"
        },
        "HideBottom": {
          "type": "boolean",
          "description": "Hide Bottom Edge"
        },
        "HideLeft": {
          "type": "boolean",
          "description": "Hide Left Edge"
        },
        "HideRight": {
          "type": "boolean",
          "description": "Hide Right Edge"
        },
        "StrikethroughHorizontal": {
          "type": "boolean",
          "description": "Strikethrough Horizontal"
        },
        "StrikethroughVertical": {
          "type": "boolean",
          "description": "Strikethrough Vertical"
        },
        "StrikethroughBottomLeftToTopRight": {
          "type": "boolean",
          "description": "Strikethrough Bottom-Left to Top-Right"
        },
        "StrikethroughTopLeftToBottomRight": {
          "type": "boolean",
          "description": "Strikethrough Top-Left to Bottom-Right."
        }
      }
    },
    "GroupingCharacterElement": {
      "type": "object",
      "description": "Specifies a grouping symbol above or below an expression, usually to highlight the relationship between elements ",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "GroupingCharacter",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Character": {
          "type": "string",
          "description": "Grouping character"
        },
        "Position": {
          "type": "string",
          "description": "Position of grouping character.",
          "enum": [
            "NotDefined",
            "Top",
            "Bottom"
          ]
        },
        "VerticalJustification": {
          "type": "string",
          "description": "Vertical justification of group character.",
          "enum": [
            "NotDefined",
            "Top",
            "Bottom"
          ]
        }
      }
    },
    "NaryOperatorElement": {
      "type": "object",
      "description": "Specifies an N-ary mathematical object, such as Summation and Integral.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "NaryOperator",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Subscript": {
          "description": "Subscript argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Superscript": {
          "description": "Superscript argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Operator": {
          "type": "string",
          "description": "Nary Operator Character"
        },
        "LimitLocation": {
          "type": "string",
          "description": "The location of limits (subscript and superscript)",
          "enum": [
            "NotDefined",
            "UnderOver",
            "SubscriptSuperscript"
          ]
        },
        "GrowToMatchOperandHeight": {
          "type": "boolean",
          "description": "Operator Character grows vertically to match its operand height"
        },
        "HideSubscript": {
          "type": "boolean",
          "description": "Hide Subscript"
        },
        "HideSuperscript": {
          "type": "boolean",
          "description": "Hide Superscript"
        }
      }
    },
    "SubscriptElement": {
      "type": "object",
      "description": "Subscript object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "SubscriptElement",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Subscript": {
          "description": "Subscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        }
      }
    },
    "SuperscriptElement": {
      "type": "object",
      "description": "Subscript object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "SuperscriptElement",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Superscript": {
          "description": "Superscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        }
      }
    },
    "LeftSubSuperscriptElement": {
      "type": "object",
      "description": "Specifies the Sub-Superscript object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "LeftSubSuperscriptElement",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Subscript": {
          "description": "Subscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Superscript": {
          "description": "Superscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        }
      }
    },
    "RightSubSuperscriptElement": {
      "type": "object",
      "description": "Specifies the Sub-Superscript object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Element type",
          "default": "RightSubSuperscriptElement",
          "enum": [
            "Accent",
            "Array",
            "Bar",
            "Block",
            "BorderBox",
            "Box",
            "Delimiter",
            "Text",
            "Fraction",
            "Function",
            "GroupingCharacter",
            "LeftSubSuperscriptElement",
            "Limit",
            "Matrix",
            "NaryOperator",
            "Radical",
            "RightSubSuperscriptElement",
            "SubscriptElement",
            "SuperscriptElement"
          ]
        },
        "Base": {
          "description": "Base argument",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Subscript": {
          "description": "Subscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "Superscript": {
          "description": "Superscript",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/MathElement"
        },
        "AlignScripts": {
          "type": "boolean",
          "description": "Alignment of subscript/superscript."
        }
      }
    },
    "PortionFormat": {
      "type": "object",
      "description": "Represents portion format.",
      "additionalProperties": false,
      "properties": {
        "FontBold": {
          "type": "string",
          "description": "True for bold font.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FontItalic": {
          "type": "string",
          "description": "True for italic font.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FontUnderline": {
          "type": "string",
          "description": "Text underline type.",
          "enum": [
            "None",
            "Words",
            "Single",
            "Double",
            "Heavy",
            "Dotted",
            "HeavyDotted",
            "Dashed",
            "HeavyDashed",
            "LongDashed",
            "HeavyLongDashed",
            "DotDash",
            "HeavyDotDash",
            "DotDotDash",
            "HeavyDotDotDash",
            "Wavy",
            "HeavyWavy",
            "DoubleWavy",
            "NotDefined"
          ]
        },
        "StrikethroughType": {
          "type": "string",
          "description": "Text strikethrough type.",
          "enum": [
            "None",
            "Single",
            "Double",
            "NotDefined"
          ]
        },
        "TextCapType": {
          "type": "string",
          "description": "Text capitalization type.",
          "enum": [
            "None",
            "Small",
            "All",
            "NotDefined"
          ]
        },
        "Escapement": {
          "type": "number",
          "description": "Superscript or subscript of the text.",
          "format": "double"
        },
        "Spacing": {
          "type": "number",
          "description": "Intercharacter spacing increment.",
          "format": "double"
        },
        "FontColor": {
          "type": "string",
          "description": "Font color."
        },
        "HighlightColor": {
          "type": "string",
          "description": "Highlight color."
        },
        "FontHeight": {
          "type": "number",
          "description": "Font height.",
          "format": "double"
        },
        "NormaliseHeight": {
          "type": "string",
          "description": "True to normalize the text.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "ProofDisabled": {
          "type": "string",
          "description": "True if the text proof should be disabled.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "SmartTagClean": {
          "type": "boolean",
          "description": "True if smart tag should be cleaned."
        },
        "KerningMinimalSize": {
          "type": "number",
          "description": "Minimal font size for kerning.",
          "format": "double"
        },
        "Kumimoji": {
          "type": "string",
          "description": "True if numbers should ignore East-Asian specific vertical text layout.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "LanguageId": {
          "type": "string",
          "description": "Proving language ID."
        },
        "AlternativeLanguageId": {
          "type": "string",
          "description": "Alternative proving language ID."
        },
        "IsHardUnderlineFill": {
          "type": "string",
          "description": "True if underline style has own FillFormat properties.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "IsHardUnderlineLine": {
          "type": "string",
          "description": "True if underline style has own LineFormat properties.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "FillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "LineFormat": {
          "description": "Line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "UnderlineFillFormat": {
          "description": "Underline fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "UnderlineLineFormat": {
          "description": "Underline line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "LatinFont": {
          "type": "string",
          "description": "Returns or sets the Latin font info."
        },
        "EastAsianFont": {
          "type": "string",
          "description": "Returns or sets the East Asian font info."
        },
        "ComplexScriptFont": {
          "type": "string",
          "description": "Returns or sets the complex script font info."
        }
      }
    },
    "TextFrameFormat": {
      "type": "object",
      "description": "Contains the TextFrame's formatting properties.",
      "additionalProperties": false,
      "properties": {
        "ThreeDFormat": {
          "description": "Represents 3d effect properties for a text.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "Transform": {
          "type": "string",
          "description": "Gets or sets text wrapping shape.",
          "enum": [
            "None",
            "Plain",
            "Stop",
            "Triangle",
            "TriangleInverted",
            "Chevron",
            "ChevronInverted",
            "RingInside",
            "RingOutside",
            "ArchUp",
            "ArchDown",
            "Circle",
            "Button",
            "ArchUpPour",
            "ArchDownPour",
            "CirclePour",
            "ButtonPour",
            "CurveUp",
            "CurveDown",
            "CanUp",
            "CanDown",
            "Wave1",
            "Wave2",
            "DoubleWave1",
            "Wave4",
            "Inflate",
            "Deflate",
            "InflateBottom",
            "DeflateBottom",
            "InflateTop",
            "DeflateTop",
            "DeflateInflate",
            "DeflateInflateDeflate",
            "FadeRight",
            "FadeLeft",
            "FadeUp",
            "FadeDown",
            "SlantUp",
            "SlantDown",
            "CascadeUp",
            "CascadeDown",
            "Custom",
            "NotDefined"
          ]
        },
        "MarginLeft": {
          "type": "number",
          "description": "Left margin.\nLeft margin.",
          "format": "double"
        },
        "MarginRight": {
          "type": "number",
          "description": "Right margin.",
          "format": "double"
        },
        "MarginTop": {
          "type": "number",
          "description": "Top margin.",
          "format": "double"
        },
        "MarginBottom": {
          "type": "number",
          "description": "Bottom margin.",
          "format": "double"
        },
        "WrapText": {
          "type": "string",
          "description": "True if text is wrapped at TextFrame's margins.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "AnchoringType": {
          "type": "string",
          "description": "Returns or sets vertical anchor text in a TextFrame.",
          "enum": [
            "Top",
            "Center",
            "Bottom",
            "Justified",
            "Distributed",
            "NotDefined"
          ]
        },
        "CenterText": {
          "type": "string",
          "description": "If True then text should be centered in box horizontally.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "TextVerticalType": {
          "type": "string",
          "description": "Determines text orientation.\nThe resulted value of visual text rotation summarized from this property and custom angle\nin property RotationAngle.",
          "enum": [
            "Horizontal",
            "Vertical",
            "Vertical270",
            "WordArtVertical",
            "EastAsianVertical",
            "MongolianVertical",
            "WordArtVerticalRightToLeft",
            "NotDefined"
          ]
        },
        "AutofitType": {
          "type": "string",
          "description": "Returns or sets text's auto-fit mode.",
          "enum": [
            "None",
            "Normal",
            "Shape",
            "NotDefined"
          ]
        },
        "ColumnCount": {
          "type": "integer",
          "description": "Returns or sets number of columns in the text area.\nThis value must be a positive number. Otherwise, the value will be set to zero. \nValue 0 means undefined value.",
          "format": "int32"
        },
        "ColumnSpacing": {
          "type": "number",
          "description": "Returns or sets the space between text columns in the text area (in points). This should only apply \nwhen there is more than 1 column present.\nThis value must be a positive number. Otherwise, the value will be set to zero. ",
          "format": "double"
        },
        "KeepTextFlat": {
          "type": "boolean",
          "description": "Returns or set keeping text out of 3D scene entirely."
        },
        "RotationAngle": {
          "type": "number",
          "description": "Specifies the custom rotation that is being applied to the text within the bounding box.",
          "format": "double"
        },
        "DefaultParagraphFormat": {
          "description": "Default portion format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ParagraphFormat"
        }
      }
    },
    "ParagraphFormat": {
      "type": "object",
      "description": "Paragraph formatting properties.",
      "additionalProperties": false,
      "properties": {
        "Depth": {
          "type": "integer",
          "description": "Depth."
        },
        "Alignment": {
          "type": "string",
          "description": "Text alignment.",
          "enum": [
            "Left",
            "Center",
            "Right",
            "Justify",
            "JustifyLow",
            "Distributed",
            "NotDefined"
          ]
        },
        "MarginLeft": {
          "type": "number",
          "description": "Left margin.",
          "format": "double"
        },
        "MarginRight": {
          "type": "number",
          "description": "Right margin.",
          "format": "double"
        },
        "SpaceBefore": {
          "type": "number",
          "description": "Left spacing.",
          "format": "double"
        },
        "SpaceAfter": {
          "type": "number",
          "description": "Right spacing.",
          "format": "double"
        },
        "SpaceWithin": {
          "type": "number",
          "description": "Spacing between lines.",
          "format": "double"
        },
        "FontAlignment": {
          "type": "string",
          "description": "Font alignment.",
          "enum": [
            "Automatic",
            "Top",
            "Center",
            "Bottom",
            "Baseline",
            "Default"
          ]
        },
        "Indent": {
          "type": "number",
          "description": "First line indent.",
          "format": "double"
        },
        "RightToLeft": {
          "type": "string",
          "description": "Determines whether the Right to Left writing is used in a paragraph. No inheritance applied.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "EastAsianLineBreak": {
          "type": "string",
          "description": "Determines whether the East Asian line break is used in a paragraph. No inheritance applied.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "LatinLineBreak": {
          "type": "string",
          "description": "Determines whether the Latin line break is used in a paragraph. No inheritance applied.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "HangingPunctuation": {
          "type": "string",
          "description": "Determines whether the hanging punctuation is used in a paragraph. No inheritance applied.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "DefaultTabSize": {
          "type": "number",
          "description": "Returns or sets default tabulation size with no inheritance.",
          "format": "double"
        },
        "DefaultPortionFormat": {
          "description": "Default portion format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PortionFormat"
        },
        "BulletChar": {
          "type": "string",
          "description": "Bullet char."
        },
        "BulletHeight": {
          "type": "number",
          "description": "Bullet height.",
          "format": "double"
        },
        "BulletType": {
          "type": "string",
          "description": "Bullet type.",
          "enum": [
            "None",
            "Symbol",
            "Numbered",
            "Picture",
            "NotDefined"
          ]
        },
        "NumberedBulletStartWith": {
          "type": "integer",
          "description": "Starting number for a numbered bullet."
        },
        "NumberedBulletStyle": {
          "type": "string",
          "description": "Numbered bullet style.",
          "enum": [
            "BulletAlphaLCPeriod",
            "BulletAlphaUCPeriod",
            "BulletArabicParenRight",
            "BulletArabicPeriod",
            "BulletRomanLCParenBoth",
            "BulletRomanLCParenRight",
            "BulletRomanLCPeriod",
            "BulletRomanUCPeriod",
            "BulletAlphaLCParenBoth",
            "BulletAlphaLCParenRight",
            "BulletAlphaUCParenBoth",
            "BulletAlphaUCParenRight",
            "BulletArabicParenBoth",
            "BulletArabicPlain",
            "BulletRomanUCParenBoth",
            "BulletRomanUCParenRight",
            "BulletSimpChinPlain",
            "BulletSimpChinPeriod",
            "BulletCircleNumDBPlain",
            "BulletCircleNumWDWhitePlain",
            "BulletCircleNumWDBlackPlain",
            "BulletTradChinPlain",
            "BulletTradChinPeriod",
            "BulletArabicAlphaDash",
            "BulletArabicAbjadDash",
            "BulletHebrewAlphaDash",
            "BulletKanjiKoreanPlain",
            "BulletKanjiKoreanPeriod",
            "BulletArabicDBPlain",
            "BulletArabicDBPeriod",
            "BulletThaiAlphaPeriod",
            "BulletThaiAlphaParenRight",
            "BulletThaiAlphaParenBoth",
            "BulletThaiNumPeriod",
            "BulletThaiNumParenRight",
            "BulletThaiNumParenBoth",
            "BulletHindiAlphaPeriod",
            "BulletHindiNumPeriod",
            "BulletKanjiSimpChinDBPeriod",
            "BulletHindiNumParenRight",
            "BulletHindiAlpha1Period",
            "NotDefined"
          ]
        },
        "BulletFillFormat": {
          "description": "Bullet fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        }
      }
    },
    "Connector": {
      "type": "object",
      "description": "Represents Connector resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "Connector",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "StartShapeConnectedTo": {
          "description": "Start shape link.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "StartShapeConnectedToIndex": {
          "type": "integer",
          "description": "Start shape index.",
          "format": "int32"
        },
        "EndShapeConnectedTo": {
          "description": "End shape link.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "EndShapeConnectedToIndex": {
          "type": "integer",
          "description": "End shape index.",
          "format": "int32"
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "GraphicalObject": {
      "type": "object",
      "description": "Represents AudioFrame resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "GraphicalObject",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "GroupShape": {
      "type": "object",
      "description": "Represents GroupShape resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "GroupShape",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Shapes": {
          "description": "Gets or sets the link to shapes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "OleObjectFrame": {
      "type": "object",
      "description": "Represents OleObjectFrame resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "OleObjectFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "IsObjectIcon": {
          "type": "boolean",
          "description": "True if an object is visible as icon."
        },
        "SubstitutePictureTitle": {
          "type": "string",
          "description": "The title for OleObject icon.\n            "
        },
        "SubstitutePictureFormat": {
          "description": "OleObject image fill properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PictureFill"
        },
        "ObjectName": {
          "type": "string",
          "description": "Returns or sets the name of an object."
        },
        "EmbeddedFileBase64Data": {
          "type": "string",
          "description": "File data of embedded OLE object. "
        },
        "EmbeddedFileExtension": {
          "type": "string",
          "description": "File extension for the current embedded OLE object"
        },
        "ObjectProgId": {
          "type": "string",
          "description": "ProgID of an object."
        },
        "LinkPath": {
          "type": "string",
          "description": "Full path to a linked file."
        },
        "UpdateAutomatic": {
          "type": "boolean",
          "description": "Determines if the linked embedded object is automatically updated when the presentation is opened or printed.\nRead/write Boolean."
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "PictureFrame": {
      "type": "object",
      "description": "Represents PictureFrame resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "PictureFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "PictureFillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PictureFill"
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SmartArtShape": {
      "type": "object",
      "description": "Represents SmartArt resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "SmartArtShape",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Table": {
      "type": "object",
      "description": "Represents Table shape resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "Table",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Style": {
          "type": "string",
          "description": "Builtin table style.",
          "enum": [
            "None",
            "MediumStyle2Accent1",
            "MediumStyle2",
            "NoStyleNoGrid",
            "ThemedStyle1Accent1",
            "ThemedStyle1Accent2",
            "ThemedStyle1Accent3",
            "ThemedStyle1Accent4",
            "ThemedStyle1Accent5",
            "ThemedStyle1Accent6",
            "NoStyleTableGrid",
            "ThemedStyle2Accent1",
            "ThemedStyle2Accent2",
            "ThemedStyle2Accent3",
            "ThemedStyle2Accent4",
            "ThemedStyle2Accent5",
            "ThemedStyle2Accent6",
            "LightStyle1",
            "LightStyle1Accent1",
            "LightStyle1Accent2",
            "LightStyle1Accent3",
            "LightStyle1Accent4",
            "LightStyle2Accent5",
            "LightStyle1Accent6",
            "LightStyle2",
            "LightStyle2Accent1",
            "LightStyle2Accent2",
            "LightStyle2Accent3",
            "MediumStyle2Accent3",
            "MediumStyle2Accent4",
            "MediumStyle2Accent5",
            "LightStyle2Accent6",
            "LightStyle2Accent4",
            "LightStyle3",
            "LightStyle3Accent1",
            "MediumStyle2Accent2",
            "LightStyle3Accent2",
            "LightStyle3Accent3",
            "LightStyle3Accent4",
            "LightStyle3Accent5",
            "LightStyle3Accent6",
            "MediumStyle1",
            "MediumStyle1Accent1",
            "MediumStyle1Accent2",
            "MediumStyle1Accent3",
            "MediumStyle1Accent4",
            "MediumStyle1Accent5",
            "MediumStyle1Accent6",
            "MediumStyle2Accent6",
            "MediumStyle3",
            "MediumStyle3Accent1",
            "MediumStyle3Accent2",
            "MediumStyle3Accent3",
            "MediumStyle3Accent4",
            "MediumStyle3Accent5",
            "MediumStyle3Accent6",
            "MediumStyle4",
            "MediumStyle4Accent1",
            "MediumStyle4Accent2",
            "MediumStyle4Accent3",
            "MediumStyle4Accent4",
            "MediumStyle4Accent5",
            "MediumStyle4Accent6",
            "DarkStyle1",
            "DarkStyle1Accent1",
            "DarkStyle1Accent2",
            "DarkStyle1Accent3",
            "DarkStyle1Accent4",
            "DarkStyle1Accent5",
            "DarkStyle1Accent6",
            "DarkStyle2",
            "DarkStyle2Accent1Accent2",
            "DarkStyle2Accent3Accent4",
            "DarkStyle2Accent5Accent6",
            "LightStyle1Accent5",
            "Custom"
          ]
        },
        "Rows": {
          "type": "array",
          "description": "Rows.",
          "items": {
            "$ref": "#/definitions/TableRow"
          }
        },
        "Columns": {
          "type": "array",
          "description": "Columns.",
          "items": {
            "$ref": "#/definitions/TableColumn"
          }
        },
        "FirstCol": {
          "type": "boolean",
          "description": "Determines whether the first column of a table has to be drawn with a special formatting."
        },
        "FirstRow": {
          "type": "boolean",
          "description": "Determines whether the first row of a table has to be drawn with a special formatting."
        },
        "HorizontalBanding": {
          "type": "boolean",
          "description": "Determines whether the even rows has to be drawn with a different formatting."
        },
        "LastCol": {
          "type": "boolean",
          "description": "Determines whether the last column of a table has to be drawn with a special formatting."
        },
        "LastRow": {
          "type": "boolean",
          "description": "Determines whether the last row of a table has to be drawn with a special formatting."
        },
        "RightToLeft": {
          "type": "boolean",
          "description": "Determines whether the table has right to left reading order."
        },
        "VerticalBanding": {
          "type": "boolean",
          "description": "Determines whether the even columns has to be drawn with a different formatting."
        },
        "Transparency": {
          "type": "number",
          "description": "Transparency.",
          "format": "double"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "TableRow": {
      "type": "object",
      "description": "Table Row.",
      "additionalProperties": false,
      "properties": {
        "Cells": {
          "type": "array",
          "description": "Cells for the row.",
          "items": {
            "$ref": "#/definitions/TableCell"
          }
        },
        "MinimalHeight": {
          "type": "number",
          "description": "Minimal height of the row.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height of the row.",
          "format": "double"
        }
      }
    },
    "TableCell": {
      "type": "object",
      "description": "Represents one cell of table.",
      "additionalProperties": false,
      "properties": {
        "Text": {
          "type": "string",
          "description": "Cell text."
        },
        "RowSpan": {
          "type": "integer",
          "description": "The number of rows spanned by a merged cell.",
          "format": "int32"
        },
        "ColSpan": {
          "type": "integer",
          "description": "The number of columns spanned by a merged cell.",
          "format": "int32"
        },
        "MarginTop": {
          "type": "number",
          "description": "The top margin of the cell.",
          "format": "double"
        },
        "MarginRight": {
          "type": "number",
          "description": "The right margin of the cell.",
          "format": "double"
        },
        "MarginLeft": {
          "type": "number",
          "description": "The left margin of the cell.",
          "format": "double"
        },
        "MarginBottom": {
          "type": "number",
          "description": "The bottom margin of the cell.",
          "format": "double"
        },
        "Transparency": {
          "type": "number",
          "description": "Transparency.",
          "format": "double"
        },
        "TextAnchorType": {
          "type": "string",
          "description": "Text anchor type.",
          "enum": [
            "Top",
            "Center",
            "Bottom",
            "Justified",
            "Distributed",
            "NotDefined"
          ]
        },
        "TextVerticalType": {
          "type": "string",
          "description": "The type of vertical text.",
          "enum": [
            "Horizontal",
            "Vertical",
            "Vertical270",
            "WordArtVertical",
            "EastAsianVertical",
            "MongolianVertical",
            "WordArtVerticalRightToLeft",
            "NotDefined"
          ]
        },
        "FillFormat": {
          "description": "Fill properties set of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "BorderTop": {
          "description": "Line properties set for the top border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "BorderRight": {
          "description": "Line properties set for the right border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "BorderLeft": {
          "description": "Line properties set for the left border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "BorderBottom": {
          "description": "Line properties set for the bottom border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "BorderDiagonalUp": {
          "description": "Line properties set for the diagonal up border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "BorderDiagonalDown": {
          "description": "Line properties set for the diagonal down border of the cell.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "ColumnIndex": {
          "type": "integer",
          "description": "Cell column index",
          "format": "int32"
        },
        "RowIndex": {
          "type": "integer",
          "description": "Cell row index",
          "format": "int32"
        },
        "TextFrameFormat": {
          "description": "Returns TextFrame's formatting properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/TextFrameFormat"
        },
        "Paragraphs": {
          "description": "Get or sets list to paragraphs list",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        }
      }
    },
    "TableColumn": {
      "type": "object",
      "description": "Table column.",
      "additionalProperties": false,
      "required": [
        "Width"
      ],
      "properties": {
        "Width": {
          "type": "number",
          "description": "Width.",
          "format": "double"
        }
      }
    },
    "VideoFrame": {
      "type": "object",
      "description": "Represents VideoFrame resource.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "VideoFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "FullScreenMode": {
          "type": "boolean",
          "description": "Determines whether a video is shown in full screen mode."
        },
        "HideAtShowing": {
          "type": "boolean",
          "description": "Determines whether a VideoFrame is hidden. "
        },
        "PlayLoopMode": {
          "type": "boolean",
          "description": "Determines whether a video is looped."
        },
        "PlayMode": {
          "type": "string",
          "description": "Returns or sets the video play mode.  ",
          "enum": [
            "Auto",
            "OnClick",
            "AllSlides",
            "InClickSequence",
            "Mixed"
          ]
        },
        "RewindVideo": {
          "type": "boolean",
          "description": "Determines whether a video is automatically rewinded to start as soon as the movie has finished playing"
        },
        "Volume": {
          "type": "string",
          "description": "Returns or sets the audio volume.",
          "enum": [
            "Mute",
            "Low",
            "Medium",
            "Loud",
            "Mixed"
          ]
        },
        "Base64Data": {
          "type": "string",
          "description": "Video data encoded in base64."
        },
        "PictureFillFormat": {
          "description": "Picture fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PictureFill"
        },
        "TrimFromStart": {
          "type": "number",
          "description": "Trim start [ms]",
          "format": "double"
        },
        "TrimFromEnd": {
          "type": "number",
          "description": "Trim end [ms]",
          "format": "double"
        },
        "ShapeType": {
          "type": "string",
          "description": "Combined shape type.",
          "enum": [
            "Custom",
            "Line",
            "LineInverse",
            "Triangle",
            "RightTriangle",
            "Rectangle",
            "Diamond",
            "Parallelogram",
            "Trapezoid",
            "NonIsoscelesTrapezoid",
            "Pentagon",
            "Hexagon",
            "Heptagon",
            "Octagon",
            "Decagon",
            "Dodecagon",
            "FourPointedStar",
            "FivePointedStar",
            "SixPointedStar",
            "SevenPointedStar",
            "EightPointedStar",
            "TenPointedStar",
            "TwelvePointedStar",
            "SixteenPointedStar",
            "TwentyFourPointedStar",
            "ThirtyTwoPointedStar",
            "RoundCornerRectangle",
            "OneRoundCornerRectangle",
            "TwoSamesideRoundCornerRectangle",
            "TwoDiagonalRoundCornerRectangle",
            "OneSnipOneRoundCornerRectangle",
            "OneSnipCornerRectangle",
            "TwoSamesideSnipCornerRectangle",
            "TwoDiagonalSnipCornerRectangle",
            "Plaque",
            "Ellipse",
            "Teardrop",
            "HomePlate",
            "Chevron",
            "PieWedge",
            "Pie",
            "BlockArc",
            "Donut",
            "NoSmoking",
            "RightArrow",
            "LeftArrow",
            "UpArrow",
            "DownArrow",
            "StripedRightArrow",
            "NotchedRightArrow",
            "BentUpArrow",
            "LeftRightArrow",
            "UpDownArrow",
            "LeftUpArrow",
            "LeftRightUpArrow",
            "QuadArrow",
            "CalloutLeftArrow",
            "CalloutRightArrow",
            "CalloutUpArrow",
            "CalloutDownArrow",
            "CalloutLeftRightArrow",
            "CalloutUpDownArrow",
            "CalloutQuadArrow",
            "BentArrow",
            "UTurnArrow",
            "CircularArrow",
            "LeftCircularArrow",
            "LeftRightCircularArrow",
            "CurvedRightArrow",
            "CurvedLeftArrow",
            "CurvedUpArrow",
            "CurvedDownArrow",
            "SwooshArrow",
            "Cube",
            "Can",
            "LightningBolt",
            "Heart",
            "Sun",
            "Moon",
            "SmileyFace",
            "IrregularSeal1",
            "IrregularSeal2",
            "FoldedCorner",
            "Bevel",
            "Frame",
            "HalfFrame",
            "Corner",
            "DiagonalStripe",
            "Chord",
            "CurvedArc",
            "LeftBracket",
            "RightBracket",
            "LeftBrace",
            "RightBrace",
            "BracketPair",
            "BracePair",
            "StraightConnector1",
            "BentConnector2",
            "BentConnector3",
            "BentConnector4",
            "BentConnector5",
            "CurvedConnector2",
            "CurvedConnector3",
            "CurvedConnector4",
            "CurvedConnector5",
            "Callout1",
            "Callout2",
            "Callout3",
            "Callout1WithAccent",
            "Callout2WithAccent",
            "Callout3WithAccent",
            "Callout1WithBorder",
            "Callout2WithBorder",
            "Callout3WithBorder",
            "Callout1WithBorderAndAccent",
            "Callout2WithBorderAndAccent",
            "Callout3WithBorderAndAccent",
            "CalloutWedgeRectangle",
            "CalloutWedgeRoundRectangle",
            "CalloutWedgeEllipse",
            "CalloutCloud",
            "Cloud",
            "Ribbon",
            "Ribbon2",
            "EllipseRibbon",
            "EllipseRibbon2",
            "LeftRightRibbon",
            "VerticalScroll",
            "HorizontalScroll",
            "Wave",
            "DoubleWave",
            "Plus",
            "ProcessFlow",
            "DecisionFlow",
            "InputOutputFlow",
            "PredefinedProcessFlow",
            "InternalStorageFlow",
            "DocumentFlow",
            "MultiDocumentFlow",
            "TerminatorFlow",
            "PreparationFlow",
            "ManualInputFlow",
            "ManualOperationFlow",
            "ConnectorFlow",
            "PunchedCardFlow",
            "PunchedTapeFlow",
            "SummingJunctionFlow",
            "OrFlow",
            "CollateFlow",
            "SortFlow",
            "ExtractFlow",
            "MergeFlow",
            "OfflineStorageFlow",
            "OnlineStorageFlow",
            "MagneticTapeFlow",
            "MagneticDiskFlow",
            "MagneticDrumFlow",
            "DisplayFlow",
            "DelayFlow",
            "AlternateProcessFlow",
            "OffPageConnectorFlow",
            "BlankButton",
            "HomeButton",
            "HelpButton",
            "InformationButton",
            "ForwardOrNextButton",
            "BackOrPreviousButton",
            "EndButton",
            "BeginningButton",
            "ReturnButton",
            "DocumentButton",
            "SoundButton",
            "MovieButton",
            "Gear6",
            "Gear9",
            "Funnel",
            "PlusMath",
            "MinusMath",
            "MultiplyMath",
            "DivideMath",
            "EqualMath",
            "NotEqualMath",
            "CornerTabs",
            "SquareTabs",
            "PlaqueTabs",
            "ChartX",
            "ChartStar",
            "ChartPlus",
            "NotDefined"
          ]
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ZoomFrame": {
      "type": "object",
      "description": "Zoom frame.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "ZoomFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "TargetSlideIndex": {
          "type": "integer",
          "description": "Links to the target slide",
          "format": "int32"
        },
        "ImageType": {
          "type": "string",
          "description": "Image type of a zoom object. ",
          "enum": [
            "Preview",
            "Cover"
          ]
        },
        "ReturnToParent": {
          "type": "boolean",
          "description": "Navigation behavior in slideshow. "
        },
        "ShowBackground": {
          "type": "boolean",
          "description": "Specifies whether the Zoom will use the background of the destination slide."
        },
        "Image": {
          "description": "Internal image link for zoom object",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "TransitionDuration": {
          "type": "number",
          "description": "Duration of the transition between Zoom and slide.",
          "format": "double"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ZoomObject": {
      "type": "object",
      "description": "Zoom object.",
      "additionalProperties": false,
      "properties": {
        "ImageType": {
          "type": "string",
          "description": "Image type of a zoom object. ",
          "enum": [
            "Preview",
            "Cover"
          ]
        },
        "ReturnToParent": {
          "type": "boolean",
          "description": "Navigation behavior in slideshow. "
        },
        "ShowBackground": {
          "type": "boolean",
          "description": "Specifies whether the Zoom will use the background of the destination slide."
        },
        "Image": {
          "description": "Internal image link for zoom object",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "TransitionDuration": {
          "type": "number",
          "description": "Duration of the transition between Zoom and slide.",
          "format": "double"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SectionZoomFrame": {
      "type": "object",
      "description": "Section zoom frame.\n            ",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "SectionZoomFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "TargetSectionIndex": {
          "type": "integer",
          "description": "Index of the target section",
          "format": "int32"
        },
        "ImageType": {
          "type": "string",
          "description": "Image type of a zoom object. ",
          "enum": [
            "Preview",
            "Cover"
          ]
        },
        "ReturnToParent": {
          "type": "boolean",
          "description": "Navigation behavior in slideshow. "
        },
        "ShowBackground": {
          "type": "boolean",
          "description": "Specifies whether the Zoom will use the background of the destination slide."
        },
        "Image": {
          "description": "Internal image link for zoom object",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "TransitionDuration": {
          "type": "number",
          "description": "Duration of the transition between Zoom and slide.",
          "format": "double"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SummaryZoomFrame": {
      "type": "object",
      "description": "Summary zoom frame.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "SummaryZoomFrame",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "ZoomLayout": {
          "type": "string",
          "description": "Zoom layout type",
          "enum": [
            "GridLayout",
            "FixedLayout"
          ]
        },
        "Sections": {
          "type": "array",
          "description": "Zoom frame sections",
          "items": {
            "$ref": "#/definitions/SummaryZoomSection"
          }
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SummaryZoomSection": {
      "type": "object",
      "description": "Represents summary zoom section",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Shape type.",
          "default": "SummaryZoomSection",
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ]
        },
        "Title": {
          "type": "string",
          "description": "Section title"
        },
        "Description": {
          "type": "string",
          "description": "Description of the Summary Zoom Section object. "
        },
        "TargetSectionIndex": {
          "type": "integer",
          "description": "Index of the target section",
          "format": "int32"
        },
        "ImageType": {
          "type": "string",
          "description": "Image type of a zoom object. ",
          "enum": [
            "Preview",
            "Cover"
          ]
        },
        "ReturnToParent": {
          "type": "boolean",
          "description": "Navigation behavior in slideshow. "
        },
        "ShowBackground": {
          "type": "boolean",
          "description": "Specifies whether the Zoom will use the background of the destination slide."
        },
        "Image": {
          "description": "Internal image link for zoom object",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "TransitionDuration": {
          "type": "number",
          "description": "Duration of the transition between Zoom and slide.",
          "format": "double"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "AlternativeText": {
          "type": "string",
          "description": "Gets or sets the alternative text."
        },
        "AlternativeTextTitle": {
          "type": "string",
          "description": "The title of alternative text associated with the shape."
        },
        "Hidden": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether this ShapeBase is hidden."
        },
        "IsDecorative": {
          "type": "boolean",
          "description": "Gets or sets 'Mark as decorative' option."
        },
        "X": {
          "type": "number",
          "description": "Gets or sets the X",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Gets or sets the Y.",
          "format": "double"
        },
        "ZOrderPosition": {
          "type": "integer",
          "description": "Gets z-order position of shape",
          "format": "int32"
        },
        "FillFormat": {
          "description": "Gets or sets the fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Gets or sets the effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "ThreeDFormat": {
          "description": "Gets or sets the 3D format",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ThreeDFormat"
        },
        "LineFormat": {
          "description": "Gets or sets the line format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/LineFormat"
        },
        "HyperlinkClick": {
          "description": "Hyperlink defined for mouse click.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "HyperlinkMouseOver": {
          "description": "Hyperlink defined for mouse over.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Hyperlink"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "AxisType": {
      "type": "string",
      "description": "Defines axis type.",
      "x-enumNames": [
        "HorizontalAxis",
        "VerticalAxis",
        "SecondaryHorizontalAxis",
        "SecondaryVerticalAxis"
      ],
      "enum": [
        "HorizontalAxis",
        "VerticalAxis",
        "SecondaryHorizontalAxis",
        "SecondaryVerticalAxis"
      ]
    },
    "ChartWallType": {
      "type": "string",
      "description": "3D chart wall type",
      "x-enumNames": [
        "Floor",
        "SideWall",
        "BackWall"
      ],
      "enum": [
        "Floor",
        "SideWall",
        "BackWall"
      ]
    },
    "CommentAuthors": {
      "type": "object",
      "description": "Represents comments collection of slide",
      "additionalProperties": false,
      "properties": {
        "List": {
          "type": "array",
          "description": "Slide comment list.",
          "items": {
            "$ref": "#/definitions/CommentAuthor"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "CommentAuthor": {
      "type": "object",
      "description": "Represents a comment author",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name"
        },
        "Initials": {
          "type": "string",
          "description": "Initials"
        }
      }
    },
    "SlideComments": {
      "type": "object",
      "description": "Represents comments collection of slide",
      "additionalProperties": false,
      "properties": {
        "List": {
          "type": "array",
          "description": "Slide comment list.",
          "items": {
            "$ref": "#/definitions/SlideCommentBase"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SlideCommentBase": {
      "type": "object",
      "description": "Represents slide comment",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Author": {
          "type": "string",
          "description": "Author."
        },
        "Text": {
          "type": "string",
          "description": "Text."
        },
        "CreatedTime": {
          "type": "string",
          "description": "Creation time."
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Regular",
            "Modern"
          ]
        }
      }
    },
    "SlideComment": {
      "type": "object",
      "description": "Represents comment of slide",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Slide comment type. ",
          "default": "Regular",
          "enum": [
            "Regular",
            "Modern"
          ]
        },
        "Author": {
          "type": "string",
          "description": "Author."
        },
        "Text": {
          "type": "string",
          "description": "Text."
        },
        "CreatedTime": {
          "type": "string",
          "description": "Creation time."
        }
      }
    },
    "SlideModernComment": {
      "type": "object",
      "description": "Represents modern comment of slide",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Slide modern comment type. ",
          "default": "Modern",
          "enum": [
            "Regular",
            "Modern"
          ]
        },
        "TextSelectionStart": {
          "type": "integer",
          "description": "Returns or sets starting position of text selection in text frame if the comment associated with AutoShape.\nRead/write Int32.",
          "format": "int32"
        },
        "TextSelectionLength": {
          "type": "integer",
          "description": "Returns or sets text selection length in text frame if the comment associated with AutoShape.\nRead/write Int32.",
          "format": "int32"
        },
        "Status": {
          "type": "string",
          "description": "Returns or sets the status of the comment.\nRead/write ModernCommentStatus.",
          "enum": [
            "NotDefined",
            "Active",
            "Resolved",
            "Closed"
          ]
        },
        "Author": {
          "type": "string",
          "description": "Author."
        },
        "Text": {
          "type": "string",
          "description": "Text."
        },
        "CreatedTime": {
          "type": "string",
          "description": "Creation time."
        }
      }
    },
    "Document": {
      "type": "object",
      "description": "Represents document DTO.",
      "additionalProperties": false,
      "properties": {
        "DocumentProperties": {
          "description": "Link to Document properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "ViewProperties": {
          "description": "Link to Document properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Slides": {
          "description": "Link to slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Images": {
          "description": "Link to images collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "LayoutSlides": {
          "description": "Link to layout slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "MasterSlides": {
          "description": "Link to master slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "PdfImportOptions": {
      "type": "object",
      "description": "PDF import options.",
      "additionalProperties": false,
      "required": [
        "DetectTables"
      ],
      "properties": {
        "DetectTables": {
          "type": "boolean",
          "description": "True to detect tables."
        }
      }
    },
    "SlideProperties": {
      "type": "object",
      "description": "Slide properties.",
      "additionalProperties": false,
      "properties": {
        "FirstSlideNumber": {
          "type": "integer",
          "description": "First slide number.",
          "format": "int32"
        },
        "Orientation": {
          "type": "string",
          "description": "Slide orientation.",
          "enum": [
            "Landscape",
            "Portrait"
          ]
        },
        "ScaleType": {
          "type": "string",
          "description": "Scale type.",
          "enum": [
            "DoNotScale",
            "EnsureFit",
            "Maximize"
          ]
        },
        "SizeType": {
          "type": "string",
          "description": "Size type.",
          "enum": [
            "OnScreen",
            "LetterPaper",
            "A4Paper",
            "Slide35mm",
            "Overhead",
            "Banner",
            "Custom",
            "Ledger",
            "A3Paper",
            "B4IsoPaper",
            "B5IsoPaper",
            "B4JisPaper",
            "B5JisPaper",
            "HagakiCard",
            "OnScreen16x9",
            "OnScreen16x10",
            "Widescreen"
          ]
        },
        "Width": {
          "type": "integer",
          "description": "Width.",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "description": "Height.",
          "format": "int32"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "HeaderFooter": {
      "type": "object",
      "description": "Represents header/footer info of slide",
      "additionalProperties": false,
      "properties": {
        "IsDateTimeVisible": {
          "type": "boolean",
          "description": "True if date is displayed in the footer"
        },
        "DateTimeText": {
          "type": "string",
          "description": "Text to be displayed as date in the footer"
        },
        "IsFooterVisible": {
          "type": "boolean",
          "description": "True if footer is displayed"
        },
        "FooterText": {
          "type": "string",
          "description": "Text to be displayed in the footer"
        },
        "IsSlideNumberVisible": {
          "type": "boolean",
          "description": "True if slide number is displayed in the footer"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ViewProperties": {
      "type": "object",
      "description": "Slides document properties.",
      "additionalProperties": false,
      "properties": {
        "LastView": {
          "type": "string",
          "description": "Last used view mode.",
          "enum": [
            "NotDefined",
            "SlideView",
            "SlideMasterView",
            "NotesView",
            "HandoutView",
            "NotesMasterView",
            "OutlineView",
            "SlideSorterView",
            "SlideThumbnailView"
          ]
        },
        "HorizontalBarState": {
          "type": "string",
          "description": "Horizontal bar state.",
          "enum": [
            "Minimized",
            "Restored",
            "Maximized"
          ]
        },
        "VerticalBarState": {
          "type": "string",
          "description": "Vertical bar state.",
          "enum": [
            "Minimized",
            "Restored",
            "Maximized"
          ]
        },
        "PreferSingleView": {
          "type": "boolean",
          "description": "True to prefer single view."
        },
        "RestoredLeft": {
          "description": "The sizing of the side content region of the normal view, when the region is of a variable restored size.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/NormalViewRestoredProperties"
        },
        "RestoredTop": {
          "description": "The sizing of the top slide region of the normal view, when the region is of a variable restored size.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/NormalViewRestoredProperties"
        },
        "SlideViewProperties": {
          "description": "Slide view mode properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/CommonSlideViewProperties"
        },
        "NotesViewProperties": {
          "description": "Notes view mode properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/CommonSlideViewProperties"
        },
        "ShowComments": {
          "type": "string",
          "description": "True if the comments should be shown.",
          "enum": [
            "False",
            "True",
            "NotDefined"
          ]
        },
        "GridSpacing": {
          "type": "number",
          "description": "The grid spacing that should be used for the grid underlying the presentation document, in points.",
          "format": "double"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "NormalViewRestoredProperties": {
      "type": "object",
      "description": "The sizing of the slide region.",
      "additionalProperties": false,
      "properties": {
        "AutoAdjust": {
          "type": "boolean",
          "description": "True if the size of the side content region should compensate for the new size when resizing the window containing the view within the application."
        },
        "DimensionSize": {
          "type": "number",
          "description": "The size of the slide region.",
          "format": "double"
        }
      }
    },
    "CommonSlideViewProperties": {
      "type": "object",
      "description": "Slide view properties.",
      "additionalProperties": false,
      "properties": {
        "Scale": {
          "type": "integer",
          "description": "The view scaling ratio (percentage).",
          "format": "int32"
        },
        "VariableScale": {
          "type": "boolean",
          "description": "True if the view content should automatically scale to best fit the current window size."
        },
        "DrawingGuides": {
          "type": "array",
          "description": "Drawing guides",
          "items": {
            "$ref": "#/definitions/DrawingGuide"
          }
        }
      }
    },
    "DrawingGuide": {
      "type": "object",
      "description": "Drawing guide.",
      "additionalProperties": false,
      "required": [
        "Orientation",
        "Position"
      ],
      "properties": {
        "Orientation": {
          "type": "string",
          "description": "Last used view mode.",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "Position": {
          "type": "number",
          "description": "Horizontal bar state.",
          "format": "double"
        }
      }
    },
    "ExportFormat": {
      "type": "string",
      "description": "Available export formats",
      "x-enumNames": [
        "Pdf",
        "Xps",
        "Tiff",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Pot",
        "Potx",
        "Potm",
        "Html",
        "Html5",
        "Swf",
        "Svg",
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Fodp",
        "Xaml",
        "Mpeg4",
        "Md",
        "Xml",
        "Emf"
      ],
      "enum": [
        "Pdf",
        "Xps",
        "Tiff",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Pot",
        "Potx",
        "Potm",
        "Html",
        "Html5",
        "Swf",
        "Svg",
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Fodp",
        "Xaml",
        "Mpeg4",
        "Md",
        "Xml",
        "Emf"
      ]
    },
    "ExportOptions": {
      "type": "object",
      "description": "Represents export options for whole presentation.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        },
        "Format": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FontFallbackRule": {
      "type": "object",
      "description": "Represents font fallback rule.\n            ",
      "additionalProperties": false,
      "required": [
        "RangeStartIndex",
        "RangeEndIndex"
      ],
      "properties": {
        "RangeStartIndex": {
          "type": "integer",
          "description": "First index of continuous unicode range.",
          "format": "int32"
        },
        "RangeEndIndex": {
          "type": "integer",
          "description": "Last index of continuous unicode range.",
          "format": "int32"
        },
        "FallbackFontList": {
          "type": "array",
          "description": "List of fallback font links.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FontSubstRule": {
      "type": "object",
      "description": "Represents font substitution rule.",
      "additionalProperties": false,
      "properties": {
        "SourceFont": {
          "type": "string",
          "description": "Font to substitute."
        },
        "TargetFont": {
          "type": "string",
          "description": "Substitution font."
        },
        "NotFoundOnly": {
          "type": "boolean",
          "description": "Substitute when font is not found. Default: true."
        }
      }
    },
    "HtmlExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in Html format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "html"
        },
        "SaveAsZip": {
          "type": "boolean",
          "description": "Get or sets flag for save presentation as zip file"
        },
        "SubDirectoryName": {
          "type": "string",
          "description": "Get or set name of subdirectory in zip-file for store external files"
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides or not.\nDefault is false. "
        },
        "SvgResponsiveLayout": {
          "type": "boolean",
          "description": "True to make layout responsive by excluding width and height attributes from svg container."
        },
        "JpegQuality": {
          "type": "integer",
          "description": "Returns or sets a value determining the quality of the JPEG images inside PDF document.",
          "format": "byte"
        },
        "PicturesCompression": {
          "type": "string",
          "description": "Represents the pictures compression level",
          "enum": [
            "Dpi330",
            "Dpi220",
            "Dpi150",
            "Dpi96",
            "Dpi72",
            "DocumentResolution"
          ]
        },
        "DeletePicturesCroppedAreas": {
          "type": "boolean",
          "description": "A boolean flag indicates if the cropped parts remain as part of the document. If true the cropped \nparts will removed, if false they will be serialized in the document (which can possible lead to a \nlarger file)"
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "DisableFontLigatures": {
          "type": "boolean",
          "description": "true to disable ligatures in the rendered output."
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "SlidesLayoutOptions": {
      "type": "object",
      "description": "Slides layouting options.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "LayoutType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "NotesComments",
            "Handout"
          ]
        }
      }
    },
    "NotesCommentsLayoutingOptions": {
      "type": "object",
      "description": "Notes &amp; comments layouting options.",
      "additionalProperties": false,
      "properties": {
        "LayoutType": {
          "type": "string",
          "default": "NotesComments",
          "enum": [
            "NotesComments",
            "Handout"
          ]
        },
        "NotesPosition": {
          "type": "string",
          "description": "Gets or sets the position of the notes on the page.",
          "enum": [
            "None",
            "BottomFull",
            "BottomTruncated"
          ]
        },
        "CommentsPosition": {
          "type": "string",
          "description": "Gets or sets the position of the comments on the page.",
          "enum": [
            "None",
            "Bottom",
            "Right"
          ]
        },
        "CommentsAreaWidth": {
          "type": "integer",
          "description": "Gets or sets the width of the comment output area in pixels\n(Applies only if comments are displayed on the right).",
          "format": "int32"
        },
        "CommentsAreaColor": {
          "type": "string",
          "description": "Gets or sets the color of comments area\n(Applies only if comments are displayed on the right)."
        },
        "ShowCommentsByNoAuthor": {
          "type": "boolean",
          "description": "True if comments that have no author are displayed. (Applies only if comments are displayed)."
        }
      }
    },
    "HandoutLayoutingOptions": {
      "type": "object",
      "description": "Handout layouting options",
      "additionalProperties": false,
      "properties": {
        "LayoutType": {
          "type": "string",
          "default": "Handout",
          "enum": [
            "NotesComments",
            "Handout"
          ]
        },
        "Handout": {
          "type": "string",
          "description": "Specified how many pages and in what sequence will be placed on the page.",
          "enum": [
            "Handouts1",
            "Handouts2",
            "Handouts3",
            "Handouts4Horizontal",
            "Handouts4Vertical",
            "Handouts6Horizontal",
            "Handouts6Vertical",
            "Handouts9Horizontal",
            "Handouts9Vertical"
          ]
        },
        "PrintSlideNumbers": {
          "type": "boolean",
          "description": "True to print the displayed slide numbers."
        },
        "PrintComments": {
          "type": "boolean",
          "description": "True to display comments on slide."
        },
        "PrintFrameSlide": {
          "type": "boolean",
          "description": "True to draw frames around the displayed slides."
        }
      }
    },
    "Html5ExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in Html5 format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "html5"
        },
        "AnimateTransitions": {
          "type": "boolean",
          "description": "Gets or sets transitions animation option."
        },
        "AnimateShapes": {
          "type": "boolean",
          "description": "Gets or sets shapes animation option."
        },
        "EmbedImages": {
          "type": "boolean",
          "description": "Gets or sets embed images option."
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "TemplatesPath": {
          "type": "string",
          "description": "Path to custom templates"
        },
        "DisableFontLigatures": {
          "type": "boolean",
          "description": "true to disable ligatures in the rendered output."
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "MarkdownExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in Html5 format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "md"
        },
        "ExportType": {
          "type": "string",
          "description": "Specifies markdown specification to convert presentation.\nDefault is TextOnly.",
          "enum": [
            "Sequential",
            "TextOnly",
            "Visual"
          ]
        },
        "Flavor": {
          "type": "string",
          "description": "Specifies markdown specification to convert presentation.\nDefault is MultiMarkdown.",
          "enum": [
            "Github",
            "Gruber",
            "MultiMarkdown",
            "CommonMark",
            "MarkdownExtra",
            "Pandoc",
            "Kramdown",
            "Markua",
            "Maruku",
            "Markdown2",
            "Remarkable",
            "Showdown",
            "Ghost",
            "GitLab",
            "Haroopad",
            "IaWriter",
            "Redcarpet",
            "ScholarlyMarkdown",
            "Taiga",
            "Trello",
            "S9ETextFormatter",
            "XWiki",
            "StackOverflow",
            "Default"
          ]
        },
        "NewLineType": {
          "type": "string",
          "description": "Specifies whether the generated document should have new lines of \\\\r(Macintosh), \\\\n(Unix) or \\\\r\\\\n(Windows).\nDefault is Unix.",
          "enum": [
            "Windows",
            "Unix",
            "Mac"
          ]
        },
        "ImagesSaveFolderName": {
          "type": "string",
          "description": "Specifies folder name to save images.\nDefault is Images. "
        },
        "ShowSlideNumber": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include slide number.\nDefault is false. "
        },
        "ShowComments": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include comments.\nDefault is false. "
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides.\nDefault is false. "
        },
        "RemoveEmptyLines": {
          "type": "boolean",
          "description": "true to remove empty or whitespace-only lines from the final Markdown output.\nDefault is false. "
        },
        "HandleRepeatedSpaces": {
          "type": "string",
          "description": "Specifies how repeated space characters are preserved to maintain visual alignment. ",
          "enum": [
            "None",
            "AlternateSpacesToNbsp",
            "MultipleSpacesToNbsp"
          ]
        },
        "SlideNumberFormat": {
          "type": "string",
          "description": "The format of slide number headers. "
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "ImageExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in an image format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "image"
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Show hidden slides. If true, hidden are exported."
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output image format.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output the output image format.",
          "format": "int32"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "ImageExportOptionsBase": {
      "type": "object",
      "description": "The class provides shared options for image formats.",
      "additionalProperties": false,
      "properties": {
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output image format.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output the output image format.",
          "format": "int32"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        },
        "Format": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PdfExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in Pdf format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "pdf"
        },
        "TextCompression": {
          "type": "string",
          "description": "Specifies compression type to be used for all textual content in the document.",
          "enum": [
            "None",
            "Flate"
          ]
        },
        "EmbedFullFonts": {
          "type": "boolean",
          "description": "Determines if all characters of font should be embedded or only used subset."
        },
        "Compliance": {
          "type": "string",
          "description": "Desired conformance level for generated PDF document.",
          "enum": [
            "Pdf15",
            "Pdf16",
            "Pdf17",
            "PdfA1b",
            "PdfA1a",
            "PdfA2b",
            "PdfA2a",
            "PdfA3b",
            "PdfA3a",
            "PdfUa",
            "PdfA2u"
          ]
        },
        "SufficientResolution": {
          "type": "number",
          "description": "Returns or sets a value determining resolution of images inside PDF document.\n\nProperty affects on file size, time of export and image quality.\nThe default value is 96.",
          "format": "double"
        },
        "JpegQuality": {
          "type": "integer",
          "description": "Returns or sets a value determining the quality of the JPEG images inside PDF document.",
          "format": "byte"
        },
        "DrawSlidesFrame": {
          "type": "boolean",
          "description": "True to draw black frame around each slide."
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides or not.\nDefault is false. "
        },
        "SaveMetafilesAsPng": {
          "type": "boolean",
          "description": "True to convert all metafiles used in a presentation to the PNG images."
        },
        "Password": {
          "type": "string",
          "description": "Setting user password to protect the PDF document. "
        },
        "EmbedTrueTypeFontsForASCII": {
          "type": "boolean",
          "description": "Determines if Aspose.Slides will embed common fonts for ASCII (33..127 code range) text.\nFonts for character codes greater than 127 are always embedded.\nCommon fonts list includes PDF's base 14 fonts and additional user specified fonts."
        },
        "AdditionalCommonFontFamilies": {
          "type": "array",
          "description": "Returns or sets an array of user-defined names of font families which Aspose.Slides should consider common.",
          "items": {
            "type": "string"
          }
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "ImageTransparentColor": {
          "type": "string",
          "description": "Image transparent color."
        },
        "ApplyImageTransparent": {
          "type": "boolean",
          "description": "True to apply specified ImageTransparentColor  to an image."
        },
        "AccessPermissions": {
          "description": "Access permissions that should be granted when the document is opened with user access.  Default is AccessPermissions.None.\n            ",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/AccessPermissions"
        },
        "HideInk": {
          "type": "boolean",
          "description": "True to hide Ink elements in exported document."
        },
        "InterpretMaskOpAsOpacity": {
          "type": "boolean",
          "description": "True to use ROP operation or Opacity for rendering brush."
        },
        "RasterizeUnsupportedFontStyles": {
          "type": "boolean",
          "description": "True if text should be rasterized as a bitmap and saved to PDF when the font does not support bold styling. This approach can enhance the quality of text in the resulting PDF for certain fonts."
        },
        "IncludeOleData": {
          "type": "boolean",
          "description": "True to convert all OLE data from the presentation to embedded files in the resulting PDF."
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "AccessPermissions": {
      "type": "object",
      "description": "A set of properties specifying which access permissions should be granted when the document is opened with user access.",
      "additionalProperties": false,
      "required": [
        "PrintDocument",
        "ModifyContent",
        "CopyTextAndGraphics",
        "AddOrModifyFields",
        "FillExistingFields",
        "ExtractTextAndGraphics",
        "AssembleDocument",
        "HighQualityPrint"
      ],
      "properties": {
        "PrintDocument": {
          "type": "boolean",
          "description": "The user may print the document (possibly not at the highest quality level, depending on whether bit HighQualityPrint is also set)."
        },
        "ModifyContent": {
          "type": "boolean",
          "description": "The user may modify the contents of the document by operations other than those controlled by bits AddOrModifyFields, FillExistingFields, AssembleDocument."
        },
        "CopyTextAndGraphics": {
          "type": "boolean",
          "description": "The user may copy or otherwise extract text and graphics from the document by operations other than that controlled by bit ExtractTextAndGraphics."
        },
        "AddOrModifyFields": {
          "type": "boolean",
          "description": "The user may add or modify text annotations, fill in interactive form fields, and, if bit ModifyContent is also set, create or modify interactive form fields (including signature fields)."
        },
        "FillExistingFields": {
          "type": "boolean",
          "description": "The user may fill in existing interactive form fields (including signature fields), even if bit AddOrModifyFields is clear."
        },
        "ExtractTextAndGraphics": {
          "type": "boolean",
          "description": "The user may extract text and graphics in support of accessibility to users with disabilities or for other purposes."
        },
        "AssembleDocument": {
          "type": "boolean",
          "description": "The user may assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if bit ModifyContent is clear."
        },
        "HighQualityPrint": {
          "type": "boolean",
          "description": "The user may print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this bit is clear (and bit PrintDocument is set), printing is limited to a low-level representation of the appearance, possibly of degraded quality."
        }
      }
    },
    "SwfExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in SWF format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "swf"
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides or not.\nDefault is false. "
        },
        "Compressed": {
          "type": "boolean",
          "description": "Specifies whether the generated SWF document should be compressed or not.\nDefault is true. "
        },
        "ViewerIncluded": {
          "type": "boolean",
          "description": "Specifies whether the generated SWF document should include the integrated document viewer or not.\nDefault is true. "
        },
        "ShowPageBorder": {
          "type": "boolean",
          "description": "Specifies whether border around pages should be shown. Default is true. "
        },
        "ShowFullScreen": {
          "type": "boolean",
          "description": "Show/hide fullscreen button. Can be overridden in flashvars. Default is true. "
        },
        "ShowPageStepper": {
          "type": "boolean",
          "description": "Show/hide page stepper. Can be overridden in flashvars. Default is true. "
        },
        "ShowSearch": {
          "type": "boolean",
          "description": "Show/hide search section. Can be overridden in flashvars. Default is true. "
        },
        "ShowTopPane": {
          "type": "boolean",
          "description": "Show/hide whole top pane. Can be overridden in flashvars. Default is true. "
        },
        "ShowBottomPane": {
          "type": "boolean",
          "description": "Show/hide bottom pane. Can be overridden in flashvars. Default is true. "
        },
        "ShowLeftPane": {
          "type": "boolean",
          "description": "Show/hide left pane. Can be overridden in flashvars. Default is true. "
        },
        "StartOpenLeftPane": {
          "type": "boolean",
          "description": "Start with opened left pane. Can be overridden in flashvars. Default is false. "
        },
        "EnableContextMenu": {
          "type": "boolean",
          "description": "Enable/disable context menu. Default is true. "
        },
        "LogoImage": {
          "type": "string",
          "description": "Image that will be displayed as logo in the top right corner of the viewer.\nThe image data is a base 64 string.\nImage should be 32x64 pixels PNG image, otherwise logo can be displayed improperly. "
        },
        "LogoLink": {
          "type": "string",
          "description": "Gets or sets the full hyperlink address for a logo.\nHas an effect only if a LogoImage is specified. "
        },
        "JpegQuality": {
          "type": "integer",
          "description": "Specifies the quality of JPEG images.\nDefault is 95.",
          "format": "int32"
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "TiffExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in TIFF format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "tiff"
        },
        "Compression": {
          "type": "string",
          "description": "Compression type.",
          "enum": [
            "Default",
            "None",
            "CCITT3",
            "CCITT4",
            "LZW",
            "RLE"
          ]
        },
        "DpiX": {
          "type": "integer",
          "description": "Horizontal resolution, in dots per inch.",
          "format": "int32"
        },
        "DpiY": {
          "type": "integer",
          "description": "Vertical resolution, in dots per inch.",
          "format": "int32"
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides or not.\nDefault is false. "
        },
        "PixelFormat": {
          "type": "string",
          "description": "Specifies the pixel format for the generated images.\nRead/write ImagePixelFormat.",
          "enum": [
            "Format1bppIndexed",
            "Format4bppIndexed",
            "Format8bppIndexed",
            "Format24bppRgb",
            "Format32bppArgb"
          ]
        },
        "SlidesLayoutOptions": {
          "description": "Slides layouting options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlidesLayoutOptions"
        },
        "BwConversionMode": {
          "type": "string",
          "description": "Specifies the algorithm for converting a color image into a black and white image.\nThis option will applied only if Aspose.Slides.Export.TiffOptions.CompressionType is set to Aspose.Slides.Export.TiffCompressionTypes.CCITT4 or Aspose.Slides.Export.TiffCompressionTypes.CCITT3.",
          "enum": [
            "Default",
            "Dithering",
            "DitheringFloydSteinberg",
            "Auto",
            "AutoOtsu",
            "Threshold25",
            "Threshold50",
            "Threshold75"
          ]
        },
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output image format.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output the output image format.",
          "format": "int32"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "SvgExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in SVG format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "         Export format.\n         ",
          "default": "svg"
        },
        "VectorizeText": {
          "type": "boolean",
          "description": "Determines whether the text on a slide will be saved as graphics."
        },
        "MetafileRasterizationDpi": {
          "type": "integer",
          "description": "Returns or sets the lower resolution limit for metafile rasterization.",
          "format": "int32"
        },
        "Disable3DText": {
          "type": "boolean",
          "description": "Determines whether the 3D text is disabled in SVG."
        },
        "DisableGradientSplit": {
          "type": "boolean",
          "description": "Disables splitting FromCornerX and FromCenter gradients."
        },
        "DisableLineEndCropping": {
          "type": "boolean",
          "description": "SVG 1.1 lacks ability to define insets for markers.\nAspose.Slides SVG writing engine has workaround for that problem:\nit crops end of line with arrow, so, line doesn't overlap markers.\nThis option switches off such behavior."
        },
        "JpegQuality": {
          "type": "integer",
          "description": "Determines JPEG encoding quality.",
          "format": "int32"
        },
        "PicturesCompression": {
          "type": "string",
          "description": "Represents the pictures compression level",
          "enum": [
            "Dpi330",
            "Dpi220",
            "Dpi150",
            "Dpi96",
            "Dpi72",
            "DocumentResolution"
          ]
        },
        "DeletePicturesCroppedAreas": {
          "type": "boolean",
          "description": "A boolean flag indicates if the cropped parts remain as part of the document. If true the cropped \nparts will removed, if false they will be serialized in the document (which can possible lead to a \nlarger file)"
        },
        "ExternalFontsHandling": {
          "type": "string",
          "description": "Determines a way of handling externally loaded fonts.",
          "enum": [
            "AddLinksToFontFiles",
            "Embed",
            "Vectorize"
          ]
        },
        "UseFrameSize": {
          "type": "boolean",
          "description": "Determines whether the text frame will be included in a rendering area or not."
        },
        "UseFrameRotation": {
          "type": "boolean",
          "description": "Determines whether to perform the specified rotation of the shape when rendering or not."
        },
        "DisableFontLigatures": {
          "type": "boolean",
          "description": "true to disable ligatures in the rendered output."
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "XpsExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in XPS format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "xps"
        },
        "ShowHiddenSlides": {
          "type": "boolean",
          "description": "Specifies whether the generated document should include hidden slides or not.\nDefault is false. "
        },
        "SaveMetafilesAsPng": {
          "type": "boolean",
          "description": "True to convert all metafiles used in a presentation to the PNG images."
        },
        "DrawSlidesFrame": {
          "type": "boolean",
          "description": "True to draw black frame around each slide."
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "PptxExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in PPTX format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "pptx"
        },
        "Conformance": {
          "type": "string",
          "description": "The conformance class to which the PresentationML document conforms.",
          "enum": [
            "Ecma376",
            "Iso29500Transitional",
            "Iso29500Strict"
          ]
        },
        "Zip64Mode": {
          "type": "string",
          "description": "Specifies whether the ZIP64 format is used for the Presentation document. The default value is Zip64Mode.IfNecessary.",
          "enum": [
            "Never",
            "IfNecessary",
            "Always"
          ]
        },
        "RefreshThumbnail": {
          "type": "boolean",
          "description": "True to refresh the presentation thumbnail on save"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "XamlExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in XAML format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "xaml"
        },
        "ExportHiddenSlides": {
          "type": "boolean",
          "description": "Export hidden slides"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "GifExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in Gif format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "gif"
        },
        "ExportHiddenSlides": {
          "type": "boolean",
          "description": "Determines whether hidden slides will be exported."
        },
        "TransitionFps": {
          "type": "integer",
          "description": "Gets or sets transition FPS [frames/sec]",
          "format": "int32"
        },
        "DefaultDelay": {
          "type": "integer",
          "description": "Gets or sets default delay time [ms].",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output image format.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the height of slides in the output the output image format.",
          "format": "int32"
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "VideoExportOptions": {
      "type": "object",
      "description": "Provides options that control how a presentation is saved in an video format.",
      "additionalProperties": false,
      "properties": {
        "Format": {
          "type": "string",
          "readOnly": true,
          "description": "Export format.",
          "default": "mpeg4"
        },
        "SlidesTransitionDuration": {
          "type": "integer",
          "description": "Slides transition duration.",
          "format": "int32"
        },
        "TransitionType": {
          "type": "string",
          "description": "Video transition type",
          "enum": [
            "None",
            "Fade",
            "Distance",
            "Slidedown",
            "Slideright",
            "Slideleft",
            "Slideup",
            "Smoothleft",
            "Smoothright",
            "Smoothup",
            "Smoothdown",
            "Rectcrop",
            "Circlecrop",
            "Circleclose",
            "Circleopen",
            "Horzclose",
            "Horzopen",
            "Vertclose",
            "Vertopen",
            "Diagbl",
            "Diagbr",
            "Diagtl",
            "Diagtr",
            "Hlslice",
            "Hrslice",
            "Vuslice",
            "Vdslice",
            "Dissolve",
            "Pixelize",
            "Radial"
          ]
        },
        "TransitionDuration": {
          "type": "integer",
          "description": "Duration of transition defined in TransitionType property.",
          "format": "int32"
        },
        "VideoResolutionType": {
          "type": "string",
          "description": "Video resolution type",
          "enum": [
            "FullHD",
            "SD",
            "HD",
            "QHD"
          ]
        },
        "DefaultRegularFont": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. "
        },
        "DeleteEmbeddedBinaryObjects": {
          "type": "boolean",
          "description": "True to delete delete all embedded binary objects."
        },
        "GradientStyle": {
          "type": "string",
          "description": "Default regular font for rendering the presentation. ",
          "enum": [
            "Default",
            "PowerPointUI"
          ]
        },
        "FontFallbackRules": {
          "type": "array",
          "description": "Gets of sets list of font fallback rules.",
          "items": {
            "$ref": "#/definitions/FontFallbackRule"
          }
        },
        "FontSubstRules": {
          "type": "array",
          "description": "Gets of sets list of font substitution rules.",
          "items": {
            "$ref": "#/definitions/FontSubstRule"
          }
        },
        "SkipJavaScriptLinks": {
          "type": "boolean",
          "description": "True to skip hyperlinks with javascript calls when saving the presentation."
        }
      }
    },
    "SplitDocumentResult": {
      "type": "object",
      "description": "Split document result.",
      "additionalProperties": false,
      "properties": {
        "Slides": {
          "type": "array",
          "description": "List of slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SlideExportFormat": {
      "type": "string",
      "description": "Slide Export Format",
      "x-enumNames": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Html",
        "Pdf",
        "Xps",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Potx",
        "Pot",
        "Potm",
        "Svg",
        "Fodp",
        "Xaml",
        "Html5",
        "Md",
        "Xml",
        "Emf"
      ],
      "enum": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Html",
        "Pdf",
        "Xps",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Potx",
        "Pot",
        "Potm",
        "Svg",
        "Fodp",
        "Xaml",
        "Html5",
        "Md",
        "Xml",
        "Emf"
      ]
    },
    "SlideShowProperties": {
      "type": "object",
      "description": "Slide show properties.",
      "additionalProperties": false,
      "properties": {
        "Loop": {
          "type": "boolean",
          "description": "Loop slide show."
        },
        "StartSlide": {
          "type": "integer",
          "description": "Start slide in the slide show.",
          "format": "int32"
        },
        "EndSlide": {
          "type": "integer",
          "description": "End slides in the slide show.",
          "format": "int32"
        },
        "PenColor": {
          "type": "string",
          "description": "Pen color."
        },
        "ShowAnimation": {
          "type": "boolean",
          "description": "Show animation."
        },
        "ShowNarration": {
          "type": "boolean",
          "description": "Show narrration."
        },
        "ShowMediaControls": {
          "type": "boolean",
          "description": "Show media controls."
        },
        "UseTimings": {
          "type": "boolean",
          "description": "Use timings."
        },
        "SlideShowType": {
          "type": "string",
          "description": "Slide show type.",
          "enum": [
            "BrowsedAtKiosk",
            "BrowsedByIndividual",
            "PresentedBySpeaker"
          ]
        },
        "ShowScrollbar": {
          "type": "boolean",
          "description": "Show scroll bar. Applied with BrowsedByIndividual slide show type."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "FontsData": {
      "type": "object",
      "description": "List of fonts data",
      "additionalProperties": false,
      "properties": {
        "List": {
          "type": "array",
          "description": "Fonts data list.",
          "items": {
            "$ref": "#/definitions/FontData"
          }
        }
      }
    },
    "FontData": {
      "type": "object",
      "description": "Represents font info.",
      "additionalProperties": false,
      "properties": {
        "FontName": {
          "type": "string",
          "description": "Font name"
        },
        "IsEmbedded": {
          "type": "boolean",
          "description": "Returns true if font is embedded."
        },
        "IsCustom": {
          "type": "boolean",
          "description": "Returns true for a custom font (contained in fontsFolder directory)."
        }
      }
    },
    "ApiInfo": {
      "type": "object",
      "description": "Represents response for ApiInfo  DTO",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Product name."
        },
        "Version": {
          "type": "string",
          "description": "API version."
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "description": "Represents pipeline for one input document.",
      "additionalProperties": false,
      "properties": {
        "Input": {
          "description": "Get or sets input document.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Input"
        },
        "Tasks": {
          "type": "array",
          "description": "Get or sets list of tasks representing pipeline.",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "Input": {
      "type": "object",
      "description": "Represents input document for pipeline.",
      "additionalProperties": false,
      "properties": {
        "Template": {
          "description": "Get or sets template document. If property is null new empty presentation will be created.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "HtmlData": {
          "description": "Get or sets html data for generate new presentation.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "TemplateData": {
          "description": "Get or sets data for template engine.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        }
      }
    },
    "InputFile": {
      "type": "object",
      "description": "Represents abstract input file source for pipeline.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Password": {
          "type": "string",
          "description": "Get or sets password to open document."
        },
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Path",
            "Request",
            "Base64"
          ]
        }
      }
    },
    "PathInputFile": {
      "type": "object",
      "description": "Represents input file from filesystem.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "File type.",
          "default": "Path",
          "enum": [
            "Path",
            "Request",
            "Base64"
          ]
        },
        "Path": {
          "type": "string",
          "description": "Get or sets path to file."
        },
        "Storage": {
          "type": "string",
          "description": "Get or sets name of storage."
        },
        "Password": {
          "type": "string",
          "description": "Get or sets password to open document."
        }
      }
    },
    "RequestInputFile": {
      "type": "object",
      "description": "Represents input file from multipart request.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "File type.",
          "default": "Request",
          "enum": [
            "Path",
            "Request",
            "Base64"
          ]
        },
        "Index": {
          "type": "integer",
          "description": "Get or sets index of file from request.",
          "format": "int32"
        },
        "Password": {
          "type": "string",
          "description": "Get or sets password to open document."
        }
      }
    },
    "Base64InputFile": {
      "type": "object",
      "description": "Represents base64 inline encoded file.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "File type.",
          "default": "Base64",
          "enum": [
            "Path",
            "Request",
            "Base64"
          ]
        },
        "Data": {
          "type": "string",
          "description": "Get or sets base64 data."
        },
        "Password": {
          "type": "string",
          "description": "Get or sets password to open document."
        }
      }
    },
    "Task": {
      "type": "object",
      "description": "Represents task for pipeline.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        }
      }
    },
    "AddShape": {
      "type": "object",
      "description": "Add shape task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "AddShape",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Shape": {
          "description": "Shape DTO.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ShapeBase"
        },
        "ShapePath": {
          "type": "string",
          "description": "Shape path for a grouped shape or smart art shape."
        }
      }
    },
    "AddSlide": {
      "type": "object",
      "description": "Add slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "AddSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "CloneFromFile": {
          "description": "File to clone a slide from.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "CloneFromPosition": {
          "type": "integer",
          "description": "Position of the slide to clone.",
          "format": "int32"
        },
        "Position": {
          "type": "integer",
          "description": "Position at which to insert the slide.",
          "format": "int32"
        },
        "LayoutAlias": {
          "type": "string",
          "description": "Alias of layout (href, index or type). If value is null a blank slide is added."
        }
      }
    },
    "AddMasterSlide": {
      "type": "object",
      "description": "Add master slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "AddMasterSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "CloneFromFile": {
          "description": "Source presentation clone from.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "CloneFromPosition": {
          "type": "integer",
          "description": "Index of slide to clone.",
          "format": "int32"
        },
        "ApplyToAll": {
          "type": "boolean",
          "description": "True if cloned master slide is applied to all slides."
        }
      }
    },
    "AddLayoutSlide": {
      "type": "object",
      "description": "Add layout slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "AddLayoutSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "CloneFromFile": {
          "description": "Source file.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "CloneFromPosition": {
          "type": "integer",
          "description": "Source layout slide position.",
          "format": "int32"
        }
      }
    },
    "Merge": {
      "type": "object",
      "description": "Merge presentations task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "Merge",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Presentations": {
          "type": "array",
          "description": "Information about documents and slides being merging sources.",
          "items": {
            "$ref": "#/definitions/MergingSource"
          }
        }
      }
    },
    "MergingSource": {
      "type": "object",
      "description": "Merging source.",
      "additionalProperties": false,
      "properties": {
        "Input": {
          "description": "Source file.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/InputFile"
        },
        "Slides": {
          "type": "array",
          "description": "Indices of slides to be merged.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "RemoveShape": {
      "type": "object",
      "description": "Remove shape task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "RemoveShape",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "ShapePath": {
          "type": "string",
          "description": "Shape path for a grouped or smart art shape."
        }
      }
    },
    "RemoveSlide": {
      "type": "object",
      "description": "Remove slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "RemoveSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Position": {
          "type": "integer",
          "description": "Position of slide to be removed.",
          "format": "int32"
        }
      }
    },
    "ReorderSlide": {
      "type": "object",
      "description": "Reorder slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "ReoderSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "OldPosition": {
          "type": "integer",
          "description": "Old position.",
          "format": "int32"
        },
        "NewPosition": {
          "type": "integer",
          "description": "New position.",
          "format": "int32"
        }
      }
    },
    "ReplaceText": {
      "type": "object",
      "description": "Replace text task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "ReplaceText",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "OldText": {
          "type": "string",
          "description": "Text to be replaced."
        },
        "NewText": {
          "type": "string",
          "description": "Text to replace with."
        },
        "IgnoreCase": {
          "type": "boolean",
          "description": "True to ignore case in replace pattern search."
        },
        "SlidePosition": {
          "type": "integer",
          "description": "One-based position of the slide to perform the replace in. 0 to make the replace throughout the presentation.",
          "format": "int32"
        }
      }
    },
    "ResetSlide": {
      "type": "object",
      "description": "Reset slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "ResetSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Position": {
          "type": "integer",
          "description": "Slide position.",
          "format": "int32"
        }
      }
    },
    "Save": {
      "type": "object",
      "description": "Save slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "Save",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Format": {
          "type": "string",
          "description": "Format.",
          "enum": [
            "Pdf",
            "Xps",
            "Tiff",
            "Pptx",
            "Odp",
            "Otp",
            "Ppt",
            "Pps",
            "Ppsx",
            "Pptm",
            "Ppsm",
            "Pot",
            "Potx",
            "Potm",
            "Html",
            "Html5",
            "Swf",
            "Svg",
            "Jpeg",
            "Png",
            "Gif",
            "Bmp",
            "Fodp",
            "Xaml",
            "Mpeg4",
            "Md",
            "Xml",
            "Emf"
          ]
        },
        "Output": {
          "description": "Output file.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/OutputFile"
        },
        "Options": {
          "description": "Save options.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ExportOptions"
        }
      }
    },
    "OutputFile": {
      "type": "object",
      "description": "Represents output file destination in pipeline.",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Path",
            "Response"
          ]
        }
      }
    },
    "PathOutputFile": {
      "type": "object",
      "description": "Represents fileSystem file with path.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "File type.",
          "default": "Path",
          "enum": [
            "Path",
            "Response"
          ]
        },
        "Path": {
          "type": "string",
          "description": "Get or sets path to file."
        },
        "Storage": {
          "type": "string",
          "description": "Get or sets name of storage."
        }
      }
    },
    "ResponseOutputFile": {
      "type": "object",
      "description": "Represents output file that will be sent to response.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "File type.",
          "default": "Response",
          "enum": [
            "Path",
            "Response"
          ]
        }
      }
    },
    "SaveShape": {
      "type": "object",
      "description": "Save shape task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "SaveShape",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Format": {
          "type": "string",
          "description": "Format.",
          "enum": [
            "Jpeg",
            "Png",
            "Gif",
            "Bmp",
            "Tiff",
            "Svg",
            "Emf"
          ]
        },
        "ShapePath": {
          "type": "string",
          "description": "Shape path."
        },
        "Output": {
          "description": "Output file.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/OutputFile"
        },
        "Options": {
          "description": "Save options.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/IShapeExportOptions"
        }
      }
    },
    "IShapeExportOptions": {
      "type": "object",
      "description": "Represents export options for whole presentation.",
      "x-abstract": true,
      "additionalProperties": false
    },
    "ShapeImageExportOptions": {
      "type": "object",
      "description": "Provides options that control how a shape is saved in thumbnail.",
      "additionalProperties": false,
      "properties": {
        "ScaleX": {
          "type": "number",
          "description": "Get or sets scaling ratio by X axis.",
          "format": "double"
        },
        "ScaleY": {
          "type": "number",
          "description": "Get or sets scaling ratio by Y axis.",
          "format": "double"
        },
        "ThumbnailBounds": {
          "type": "string",
          "description": "Get or sets thumbnail bounds",
          "enum": [
            "Slide",
            "Shape",
            "Appearance"
          ]
        },
        "Format": {
          "type": "string",
          "description": "Gets export format."
        }
      }
    },
    "SaveSlide": {
      "type": "object",
      "description": "Save slide task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "SaveSlide",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Output": {
          "description": "Output to save the slide to.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/OutputFile"
        },
        "Format": {
          "type": "string",
          "description": "Save format.",
          "enum": [
            "Jpeg",
            "Png",
            "Gif",
            "Bmp",
            "Tiff",
            "Html",
            "Pdf",
            "Xps",
            "Pptx",
            "Odp",
            "Otp",
            "Ppt",
            "Pps",
            "Ppsx",
            "Pptm",
            "Ppsm",
            "Potx",
            "Pot",
            "Potm",
            "Svg",
            "Fodp",
            "Xaml",
            "Html5",
            "Md",
            "Xml",
            "Emf"
          ]
        },
        "Options": {
          "description": "Save options.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ExportOptions"
        },
        "Width": {
          "type": "integer",
          "description": "Result width for saving to an image format.",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "description": "Result height for saving to an image format.",
          "format": "int32"
        },
        "Position": {
          "type": "integer",
          "description": "Slide index.",
          "format": "int32"
        }
      }
    },
    "UpdateBackground": {
      "type": "object",
      "description": "Update background task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "UpdateBackground",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Slides": {
          "type": "array",
          "description": "List of slide indices.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Background": {
          "description": "Background DTO.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlideBackground"
        }
      }
    },
    "SlideBackground": {
      "type": "object",
      "description": "Represents background of slide",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Fill type.",
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "NotDefined"
          ]
        },
        "FillFormat": {
          "description": "Fill format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FillFormat"
        },
        "EffectFormat": {
          "description": "Effect format.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/EffectFormat"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "UpdateShape": {
      "type": "object",
      "description": "Update shape task.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Task type.",
          "default": "UpdateShape",
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReoderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText"
          ]
        },
        "Shape": {
          "description": "Shape DTO.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ShapeBase"
        },
        "ShapePath": {
          "type": "string",
          "description": "Shape path for a grouped or SmartArt shape."
        }
      }
    },
    "Images": {
      "type": "object",
      "description": "List of images.",
      "additionalProperties": false,
      "properties": {
        "List": {
          "type": "array",
          "description": "Image list.",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Image": {
      "type": "object",
      "description": "Represents image DTO.",
      "additionalProperties": false,
      "properties": {
        "Width": {
          "type": "integer",
          "description": "Get or sets the width of an image.",
          "format": "int32"
        },
        "Height": {
          "type": "integer",
          "description": "Get or sets the height of an image.",
          "format": "int32"
        },
        "ContentType": {
          "type": "string",
          "description": "Get or sets the content type of an image."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ImageExportFormat": {
      "type": "string",
      "description": "Represents a format for image export.",
      "x-enumNames": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff"
      ],
      "enum": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff"
      ]
    },
    "LayoutSlides": {
      "type": "object",
      "description": "Layout slide list.",
      "additionalProperties": false,
      "properties": {
        "SlideList": {
          "type": "array",
          "description": "List of layout slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "LayoutSlide": {
      "type": "object",
      "description": "Layout slide.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name."
        },
        "Type": {
          "type": "string",
          "description": "Layout slide type.",
          "enum": [
            "Title",
            "Text",
            "TwoColumnText",
            "Table",
            "TextAndChart",
            "ChartAndText",
            "Diagram",
            "Chart",
            "TextAndClipArt",
            "ClipArtAndText",
            "TitleOnly",
            "Blank",
            "TextAndObject",
            "ObjectAndText",
            "Object",
            "TitleAndObject",
            "TextAndMedia",
            "MediaAndText",
            "ObjectOverText",
            "TextOverObject",
            "TextAndTwoObjects",
            "TwoObjectsAndText",
            "TwoObjectsOverText",
            "FourObjects",
            "VerticalText",
            "ClipArtAndVerticalText",
            "VerticalTitleAndText",
            "VerticalTitleAndTextOverChart",
            "TwoObjects",
            "ObjectAndTwoObject",
            "TwoObjectsAndObject",
            "SectionHeader",
            "TwoTextAndTwoObjects",
            "TitleObjectAndCaption",
            "PictureAndCaption",
            "Custom"
          ]
        },
        "MasterSlide": {
          "description": "Master slide link.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "DependingSlides": {
          "type": "array",
          "description": "List of depending slides.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "MasterSlides": {
      "type": "object",
      "description": "Master slide list.",
      "additionalProperties": false,
      "properties": {
        "SlideList": {
          "type": "array",
          "description": "List of slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "MasterSlide": {
      "type": "object",
      "description": "Master slide.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name."
        },
        "LayoutSlides": {
          "type": "array",
          "description": "List of layout slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "DependingSlides": {
          "type": "array",
          "description": "List of depending slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "PresentationsMergeRequest": {
      "type": "object",
      "description": "Request for presentations merge",
      "additionalProperties": false,
      "properties": {
        "PresentationPaths": {
          "type": "array",
          "description": "Gets or sets the presentation paths.",
          "items": {
            "type": "string"
          }
        },
        "PresentationPasswords": {
          "type": "array",
          "description": "Gets or sets the presentation passwords.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrderedMergeRequest": {
      "type": "object",
      "description": "Request for presentations merge with optional order of slides",
      "additionalProperties": false,
      "properties": {
        "Presentations": {
          "type": "array",
          "description": "Gets or sets the presentation paths.",
          "items": {
            "$ref": "#/definitions/PresentationToMerge"
          }
        }
      }
    },
    "PresentationToMerge": {
      "type": "object",
      "description": "Represents presentation to merge",
      "additionalProperties": false,
      "properties": {
        "Path": {
          "type": "string",
          "description": "Get or sets the presentation path"
        },
        "Password": {
          "type": "string",
          "description": "Get or sets the presentation password"
        },
        "Slides": {
          "type": "array",
          "description": "Get or sets the indexes of slides to merge",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Source": {
          "type": "string",
          "description": "Merge (request or storage). ",
          "enum": [
            "Storage",
            "Request",
            "Url"
          ]
        }
      }
    },
    "NotesSlide": {
      "type": "object",
      "description": "Represents notes slide DTO.",
      "additionalProperties": false,
      "properties": {
        "Text": {
          "type": "string",
          "description": "Get or sets text of notes slide."
        },
        "Shapes": {
          "description": "Get or sets the  link to list notes slide shapes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Slide": {
      "type": "object",
      "description": "Presentation slide.",
      "additionalProperties": false,
      "properties": {
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "ShowMasterShapes": {
          "type": "boolean",
          "description": "Specifies if shapes of the master slide should be shown on the slide.\nTrue by default."
        },
        "SlideShowTransition": {
          "description": "Specifies if shapes of the master slide should be shown on the slide.\nTrue by default.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlideShowTransition"
        },
        "LayoutSlide": {
          "description": "Gets or sets the  link to the layout slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Shapes": {
          "description": "Gets or sets the  link to list of top-level shapes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Theme": {
          "description": "Gets or sets the link to theme.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Placeholders": {
          "description": "Gets or sets the  link to placeholders.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Images": {
          "description": "Gets or sets the link to images.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Comments": {
          "description": "Gets or sets the link to comments.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Background": {
          "description": "Get or sets the link to slide's background",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "NotesSlide": {
          "description": "Get or sets the link to notes slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SlideShowTransition": {
      "type": "object",
      "description": "Slide Show Transition.",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Transition Type",
          "enum": [
            "None",
            "Blinds",
            "Checker",
            "Circle",
            "Comb",
            "Cover",
            "Cut",
            "Diamond",
            "Dissolve",
            "Fade",
            "Newsflash",
            "Plus",
            "Pull",
            "Push",
            "Random",
            "RandomBar",
            "Split",
            "Strips",
            "Wedge",
            "Wheel",
            "Wipe",
            "Zoom",
            "Vortex",
            "Switch",
            "Flip",
            "Ripple",
            "Honeycomb",
            "Cube",
            "Box",
            "Rotate",
            "Orbit",
            "Doors",
            "Window",
            "Ferris",
            "Gallery",
            "Conveyor",
            "Pan",
            "Glitter",
            "Warp",
            "Flythrough",
            "Flash",
            "Shred",
            "Reveal",
            "WheelReverse",
            "FallOver",
            "Drape",
            "Curtains",
            "Wind",
            "Prestige",
            "Fracture",
            "Crush",
            "PeelOff",
            "PageCurlDouble",
            "PageCurlSingle",
            "Airplane",
            "Origami",
            "Morph"
          ]
        },
        "AdvanceAfter": {
          "type": "boolean",
          "description": "Advance After"
        },
        "AdvanceAfterTime": {
          "type": "integer",
          "description": "Advance After Time",
          "format": "int32"
        },
        "AdvanceOnClick": {
          "type": "boolean",
          "description": "Advance On Click"
        },
        "SoundIsBuiltIn": {
          "type": "boolean",
          "description": "Sound Is Built In"
        },
        "SoundLoop": {
          "type": "boolean",
          "description": "Sound Loop"
        },
        "SoundMode": {
          "type": "string",
          "description": "Sound Mode",
          "enum": [
            "StartSound",
            "StopPrevoiusSound",
            "NotDefined"
          ]
        },
        "SoundName": {
          "type": "string",
          "description": "Sound Name"
        },
        "Speed": {
          "type": "string",
          "description": "Speed",
          "enum": [
            "Fast",
            "Medium",
            "Slow"
          ]
        },
        "CornerDirection": {
          "type": "string",
          "description": "Corner Direction.",
          "enum": [
            "LeftDown",
            "LeftUp",
            "RightDown",
            "RightUp"
          ]
        },
        "EightDirection": {
          "type": "string",
          "description": "Eight Direction.",
          "enum": [
            "LeftDown",
            "LeftUp",
            "RightDown",
            "RightUp",
            "Left",
            "Up",
            "Down",
            "Right"
          ]
        },
        "InOutDirection": {
          "type": "string",
          "description": "In/Out Direction.",
          "enum": [
            "In",
            "Out"
          ]
        },
        "HasBounce": {
          "type": "boolean",
          "description": "Has Bounce."
        },
        "SideDirection": {
          "type": "string",
          "description": "Side Direction.",
          "enum": [
            "Left",
            "Up",
            "Down",
            "Right"
          ]
        },
        "Pattern": {
          "type": "string",
          "description": "Pattern.",
          "enum": [
            "Diamond",
            "Hexagon"
          ]
        },
        "LeftRightDirection": {
          "type": "string",
          "description": "Left/Right Direction.",
          "enum": [
            "Left",
            "Right"
          ]
        },
        "MorphType": {
          "type": "string",
          "description": "Morph Type.",
          "enum": [
            "ByObject",
            "ByWord",
            "ByChar"
          ]
        },
        "FromBlack": {
          "type": "boolean",
          "description": "From Black."
        },
        "OrientationDirection": {
          "type": "string",
          "description": "Orientation Direction.",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "ThroughBlack": {
          "type": "boolean",
          "description": "Through Black."
        },
        "CornerAndCenterDirection": {
          "type": "string",
          "description": "Orientation.",
          "enum": [
            "LeftDown",
            "LeftUp",
            "RightDown",
            "RightUp",
            "Center"
          ]
        },
        "ShredPattern": {
          "type": "string",
          "description": "Shred Pattern.",
          "enum": [
            "Strip",
            "Rectangle"
          ]
        },
        "Orientation": {
          "type": "string",
          "description": "Orientation.",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "Spokes": {
          "type": "integer",
          "description": "Spokes.",
          "format": "int32"
        }
      }
    },
    "EntityExists": {
      "type": "object",
      "description": "Information about object existence.",
      "additionalProperties": false,
      "required": [
        "Exists"
      ],
      "properties": {
        "Exists": {
          "type": "boolean",
          "description": "True if the object exists."
        }
      }
    },
    "NotesSlideExportFormat": {
      "type": "string",
      "description": "Represents a format for notes slide export.",
      "x-enumNames": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Html",
        "Pdf",
        "Xps",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Potx",
        "Pot",
        "Potm",
        "Svg",
        "Fodp",
        "Xaml",
        "Html5"
      ],
      "enum": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Html",
        "Pdf",
        "Xps",
        "Pptx",
        "Odp",
        "Otp",
        "Ppt",
        "Pps",
        "Ppsx",
        "Pptm",
        "Ppsm",
        "Potx",
        "Pot",
        "Potm",
        "Svg",
        "Fodp",
        "Xaml",
        "Html5"
      ]
    },
    "NotesSlideHeaderFooter": {
      "type": "object",
      "description": "Represents header/footer info of notes slide",
      "additionalProperties": false,
      "properties": {
        "IsDateTimeVisible": {
          "type": "boolean",
          "description": "True if date is displayed in the footer"
        },
        "DateTimeText": {
          "type": "string",
          "description": "Text to be displayed as date in the footer"
        },
        "IsFooterVisible": {
          "type": "boolean",
          "description": "True if footer is displayed"
        },
        "FooterText": {
          "type": "string",
          "description": "Text to be displayed in the footer"
        },
        "IsHeaderVisible": {
          "type": "boolean",
          "description": "True if header is displayed"
        },
        "HeaderText": {
          "type": "string",
          "description": "Text to be displayed in the header"
        },
        "IsSlideNumberVisible": {
          "type": "boolean",
          "description": "True if slide number is displayed in the footer"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Placeholders": {
      "type": "object",
      "description": "Placeholder list.",
      "additionalProperties": false,
      "properties": {
        "PlaceholderLinks": {
          "type": "array",
          "description": "List for placeholder links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Placeholder": {
      "type": "object",
      "description": "Represents placeholder",
      "additionalProperties": false,
      "properties": {
        "Index": {
          "type": "integer",
          "description": "Index."
        },
        "Orientation": {
          "type": "string",
          "description": "Orientation.",
          "enum": [
            "Horizontal",
            "Vertical"
          ]
        },
        "Size": {
          "type": "string",
          "description": "Size.",
          "enum": [
            "Full",
            "Half",
            "Quarter"
          ]
        },
        "Type": {
          "type": "string",
          "description": "Placeholder type.",
          "enum": [
            "Title",
            "Body",
            "CenteredTitle",
            "Subtitle",
            "DateAndTime",
            "SlideNumber",
            "Footer",
            "Header",
            "Object",
            "Chart",
            "Table",
            "ClipArt",
            "Diagram",
            "Media",
            "SlideImage",
            "Picture"
          ]
        },
        "Shape": {
          "description": "Shape link.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "DocumentProperties": {
      "type": "object",
      "description": "Slides document properties.",
      "additionalProperties": false,
      "properties": {
        "List": {
          "type": "array",
          "description": "Document property list.",
          "items": {
            "$ref": "#/definitions/DocumentProperty"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "DocumentProperty": {
      "type": "object",
      "description": "Document property.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name."
        },
        "Value": {
          "type": "string",
          "description": "Value."
        },
        "BuiltIn": {
          "type": "boolean",
          "description": "True for builtin property."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ProtectionProperties": {
      "type": "object",
      "description": "Protection properties.",
      "additionalProperties": false,
      "properties": {
        "EncryptDocumentProperties": {
          "type": "boolean",
          "description": "True if document properties are encrypted. Has effect only for password protected presentations."
        },
        "ReadOnlyRecommended": {
          "type": "boolean",
          "description": "True if the document should be opened as read-only."
        },
        "ReadPassword": {
          "type": "string",
          "description": "Password for read protection."
        },
        "WritePassword": {
          "type": "string",
          "description": "Password for write protection."
        },
        "IsWriteProtected": {
          "type": "boolean",
          "description": "Returns true if the presentation protected for editing. "
        },
        "IsEncrypted": {
          "type": "boolean",
          "description": "Returns true if the presentation protected for reading. "
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Sections": {
      "type": "object",
      "description": "Section list.",
      "additionalProperties": false,
      "properties": {
        "SectionList": {
          "type": "array",
          "description": "List of slide links.",
          "items": {
            "$ref": "#/definitions/Section"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Section": {
      "type": "object",
      "description": "Presentation section.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name."
        },
        "FirstSlideIndex": {
          "type": "integer",
          "description": "One-based index of slide with which the section starts.",
          "format": "int32"
        },
        "SlideList": {
          "type": "array",
          "description": "Links to the shapes contained in the section.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Shapes": {
      "type": "object",
      "description": "Represents list of Links to Shapes resources",
      "additionalProperties": false,
      "properties": {
        "ShapesLinks": {
          "type": "array",
          "description": "List of shape links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ShapeType": {
      "type": "string",
      "description": "Shape type",
      "x-enumNames": [
        "Shape",
        "Chart",
        "Table",
        "PictureFrame",
        "VideoFrame",
        "AudioFrame",
        "SmartArt",
        "OleObjectFrame",
        "GroupShape",
        "GraphicalObject",
        "Connector",
        "SmartArtShape",
        "ZoomFrame",
        "SectionZoomFrame",
        "SummaryZoomFrame",
        "SummaryZoomSection"
      ],
      "enum": [
        "Shape",
        "Chart",
        "Table",
        "PictureFrame",
        "VideoFrame",
        "AudioFrame",
        "SmartArt",
        "OleObjectFrame",
        "GroupShape",
        "GraphicalObject",
        "Connector",
        "SmartArtShape",
        "ZoomFrame",
        "SectionZoomFrame",
        "SummaryZoomFrame",
        "SummaryZoomSection"
      ]
    },
    "Paragraphs": {
      "type": "object",
      "description": "Represents list of Links to Paragraphs resources",
      "additionalProperties": false,
      "properties": {
        "ParagraphLinks": {
          "type": "array",
          "description": "List of paragraph links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Portions": {
      "type": "object",
      "description": "Represents list of Links to Paragraphs resources",
      "additionalProperties": false,
      "properties": {
        "Items": {
          "type": "array",
          "description": "List of portion links.",
          "items": {
            "$ref": "#/definitions/Portion"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ShapeExportFormat": {
      "type": "string",
      "description": "Represents a format for individual shape export.",
      "x-enumNames": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Svg",
        "Emf"
      ],
      "enum": [
        "Jpeg",
        "Png",
        "Gif",
        "Bmp",
        "Tiff",
        "Svg",
        "Emf"
      ]
    },
    "ShapeThumbnailBounds": {
      "type": "string",
      "description": "Represents thumnail bounds settings.",
      "x-enumNames": [
        "Slide",
        "Shape",
        "Appearance"
      ],
      "enum": [
        "Slide",
        "Shape",
        "Appearance"
      ]
    },
    "ShapesAlignmentType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AlignLeft",
        "AlignRight",
        "AlignCenter",
        "AlignTop",
        "AlignMiddle",
        "AlignBottom",
        "DistributeHorizontally",
        "DistributeVertically"
      ],
      "enum": [
        "AlignLeft",
        "AlignRight",
        "AlignCenter",
        "AlignTop",
        "AlignMiddle",
        "AlignBottom",
        "DistributeHorizontally",
        "DistributeVertically"
      ]
    },
    "GeometryPaths": {
      "type": "object",
      "description": "Represents container for GeometryPath objects",
      "additionalProperties": false,
      "properties": {
        "Paths": {
          "type": "array",
          "description": "List of GeometryPath objects",
          "items": {
            "$ref": "#/definitions/GeometryPath"
          }
        }
      }
    },
    "GeometryPath": {
      "type": "object",
      "description": "Represents GeometryPath of the shape",
      "additionalProperties": false,
      "properties": {
        "FillMode": {
          "type": "string",
          "description": "Path fill mode",
          "enum": [
            "None",
            "Normal",
            "Lighten",
            "LightenLess",
            "Darken",
            "DarkenLess"
          ]
        },
        "Stroke": {
          "type": "boolean",
          "description": "Stroke"
        },
        "PathData": {
          "type": "array",
          "description": "List of PathSegmen objects",
          "items": {
            "$ref": "#/definitions/PathSegment"
          }
        }
      }
    },
    "PathSegment": {
      "type": "object",
      "description": "Represents segment of geometry path",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        }
      }
    },
    "ClosePathSegment": {
      "type": "object",
      "description": "Close path segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Close segment",
          "default": "Close",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        }
      }
    },
    "ArcToPathSegment": {
      "type": "object",
      "description": "Arc segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Arc segment",
          "default": "ArcTo",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        },
        "Width": {
          "type": "number",
          "description": "Width of the rectangle",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height of the rectangle",
          "format": "double"
        },
        "StartAngle": {
          "type": "number",
          "description": "Start angle",
          "format": "double"
        },
        "SweepAngle": {
          "type": "number",
          "description": "Sweep angle",
          "format": "double"
        }
      }
    },
    "LineToPathSegment": {
      "type": "object",
      "description": "Line segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Line segment",
          "default": "LineTo",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        },
        "X": {
          "type": "number",
          "description": "X coordinate of the end point of the line",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Y coordinate of the end point of the line",
          "format": "double"
        }
      }
    },
    "MoveToPathSegment": {
      "type": "object",
      "description": "MoveTo segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Move segment",
          "default": "MoveTo",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        },
        "X": {
          "type": "number",
          "description": "X coordinate of the point.",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "Y coordinate of the point.",
          "format": "double"
        }
      }
    },
    "CubicBezierToPathSegment": {
      "type": "object",
      "description": "Cubic Bezier curve segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Cubic Bezier curve segment",
          "default": "CubicBezierTo",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        },
        "X1": {
          "type": "number",
          "description": "X coordinate of the first direction point",
          "format": "double"
        },
        "Y1": {
          "type": "number",
          "description": "Y coordinate of the first direction point",
          "format": "double"
        },
        "X2": {
          "type": "number",
          "description": "X coordinate of the second direction point",
          "format": "double"
        },
        "Y2": {
          "type": "number",
          "description": "Y coordinate of the second direction point",
          "format": "double"
        },
        "X3": {
          "type": "number",
          "description": "X coordinate of end point",
          "format": "double"
        },
        "Y3": {
          "type": "number",
          "description": "Y coordinate of end point",
          "format": "double"
        }
      }
    },
    "QuadraticBezierToPathSegment": {
      "type": "object",
      "description": "Quadratic Bezier curve segment of the geometry path",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "description": "Quadratic Bezier curve segment",
          "default": "QuadBezierTo",
          "enum": [
            "Close",
            "MoveTo",
            "LineTo",
            "ArcTo",
            "QuadBezierTo",
            "CubicBezierTo"
          ]
        },
        "X1": {
          "type": "number",
          "description": "X coordinate of direction point",
          "format": "double"
        },
        "Y1": {
          "type": "number",
          "description": "Y coordinate of direction point",
          "format": "double"
        },
        "X2": {
          "type": "number",
          "description": "X coordinate of end point",
          "format": "double"
        },
        "Y2": {
          "type": "number",
          "description": "Y coordinate of end point",
          "format": "double"
        }
      }
    },
    "MathFormat": {
      "type": "string",
      "description": "Mathematical paragraph that is a container for mathematical blocks",
      "x-enumNames": [
        "MathML",
        "LaTeX"
      ],
      "enum": [
        "MathML",
        "LaTeX"
      ]
    },
    "TextBounds": {
      "type": "object",
      "description": "Represents text bounds within a paragraph or portion.",
      "additionalProperties": false,
      "required": [
        "X",
        "Y",
        "Width",
        "Height"
      ],
      "properties": {
        "X": {
          "type": "number",
          "description": "X coordinate of the text bounds.",
          "format": "double"
        },
        "Y": {
          "type": "number",
          "description": "X coordinate of the text bounds.\n            ",
          "format": "double"
        },
        "Width": {
          "type": "number",
          "description": "Width of the text bounds.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Height of the text bounds.",
          "format": "double"
        }
      }
    },
    "CaptionTracks": {
      "type": "object",
      "description": "Represents list of Links to Paragraphs resources",
      "additionalProperties": false,
      "properties": {
        "Items": {
          "type": "array",
          "description": "List of caption tracks.",
          "items": {
            "$ref": "#/definitions/CaptionTrack"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "CaptionTrack": {
      "type": "object",
      "description": "Represents list of Links to Paragraphs resources",
      "additionalProperties": false,
      "properties": {
        "CaptionId": {
          "type": "string",
          "description": "Caption ID.",
          "format": "guid"
        },
        "Label": {
          "type": "string",
          "description": "Label."
        },
        "DataAsString": {
          "type": "string",
          "description": "Caption track data as string."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Slides": {
      "type": "object",
      "description": "Slide list.",
      "additionalProperties": false,
      "properties": {
        "SlideList": {
          "type": "array",
          "description": "List of slide links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SpecialSlideType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "MasterSlide",
        "LayoutSlide",
        "NotesSlide"
      ],
      "enum": [
        "MasterSlide",
        "LayoutSlide",
        "NotesSlide"
      ]
    },
    "TableCellMergeOptions": {
      "type": "object",
      "description": "Table cells merge options",
      "additionalProperties": false,
      "required": [
        "FirstRowIndex",
        "FirstCellIndex",
        "LastRowIndex",
        "LastCellIndex"
      ],
      "properties": {
        "FirstRowIndex": {
          "type": "integer",
          "description": "Row index of the first cell",
          "format": "int32"
        },
        "FirstCellIndex": {
          "type": "integer",
          "description": "First cell index in the row",
          "format": "int32"
        },
        "LastRowIndex": {
          "type": "integer",
          "description": "Row index of the last cell",
          "format": "int32"
        },
        "LastCellIndex": {
          "type": "integer",
          "description": "Last cell index in the row",
          "format": "int32"
        },
        "AllowSplitting": {
          "type": "boolean",
          "description": "Allow splitting"
        }
      }
    },
    "TableCellSplitType": {
      "type": "string",
      "description": "Table cell split type",
      "x-enumNames": [
        "SplitByWidth",
        "SplitByHeight",
        "SplitByColSpan",
        "SplitByRowSpan"
      ],
      "enum": [
        "SplitByWidth",
        "SplitByHeight",
        "SplitByColSpan",
        "SplitByRowSpan"
      ]
    },
    "TextItems": {
      "type": "object",
      "description": "Represents text of resource",
      "additionalProperties": false,
      "properties": {
        "Items": {
          "type": "array",
          "description": "Gets or sets the text items.",
          "items": {
            "$ref": "#/definitions/TextItem"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "TextItem": {
      "type": "object",
      "description": "Represents text item, referenced by TextItems",
      "additionalProperties": false,
      "properties": {
        "Uri": {
          "description": "Gets or sets the URI to resource that contains text",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Text": {
          "type": "string",
          "description": "Gets or sets the text."
        }
      }
    },
    "DocumentReplaceResult": {
      "type": "object",
      "description": "Represents document replace result DTO.",
      "additionalProperties": false,
      "properties": {
        "Matches": {
          "type": "integer",
          "description": "Gets or sets the number of matches ",
          "format": "int32"
        },
        "DocumentProperties": {
          "description": "Link to Document properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "ViewProperties": {
          "description": "Link to Document properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Slides": {
          "description": "Link to slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Images": {
          "description": "Link to images collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "LayoutSlides": {
          "description": "Link to layout slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "MasterSlides": {
          "description": "Link to master slides collection.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "SlideReplaceResult": {
      "type": "object",
      "description": "Represents slide replace result DTO.",
      "additionalProperties": false,
      "properties": {
        "Matches": {
          "type": "integer",
          "description": "Gets or sets the number of matches ",
          "format": "int32"
        },
        "Width": {
          "type": "number",
          "description": "Gets or sets the width.",
          "format": "double"
        },
        "Height": {
          "type": "number",
          "description": "Gets or sets the height.",
          "format": "double"
        },
        "ShowMasterShapes": {
          "type": "boolean",
          "description": "Specifies if shapes of the master slide should be shown on the slide.\nTrue by default."
        },
        "SlideShowTransition": {
          "description": "Specifies if shapes of the master slide should be shown on the slide.\nTrue by default.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/SlideShowTransition"
        },
        "LayoutSlide": {
          "description": "Gets or sets the  link to the layout slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Shapes": {
          "description": "Gets or sets the  link to list of top-level shapes.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Theme": {
          "description": "Gets or sets the link to theme.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Placeholders": {
          "description": "Gets or sets the  link to placeholders.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Images": {
          "description": "Gets or sets the link to images.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Comments": {
          "description": "Gets or sets the link to comments.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "Background": {
          "description": "Get or sets the link to slide's background",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "NotesSlide": {
          "description": "Get or sets the link to notes slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "Theme": {
      "type": "object",
      "description": "Represents Slide's theme ",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name."
        },
        "ColorScheme": {
          "description": "Color scheme.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "FontScheme": {
          "description": "Font scheme.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "FormatScheme": {
          "description": "Format scheme.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "ColorScheme": {
      "type": "object",
      "description": "Slide's color scheme DTO",
      "additionalProperties": false,
      "properties": {
        "Accent1": {
          "type": "string",
          "description": "First accent color."
        },
        "Accent2": {
          "type": "string",
          "description": "Second accent color."
        },
        "Accent3": {
          "type": "string",
          "description": "Third accent color."
        },
        "Accent4": {
          "type": "string",
          "description": "Fourth accent color."
        },
        "Accent5": {
          "type": "string",
          "description": "Fifth accent color."
        },
        "Accent6": {
          "type": "string",
          "description": "Sixth accent color."
        },
        "Dark1": {
          "type": "string",
          "description": "First dark color."
        },
        "Dark2": {
          "type": "string",
          "description": "Second dark color."
        },
        "FollowedHyperlink": {
          "type": "string",
          "description": "Visited hyperlink color."
        },
        "Hyperlink": {
          "type": "string",
          "description": "Hyperlink color/"
        },
        "Light1": {
          "type": "string",
          "description": "First light color."
        },
        "Light2": {
          "type": "string",
          "description": "Second light color."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "FontScheme": {
      "type": "object",
      "description": "Represents font scheme",
      "additionalProperties": false,
      "properties": {
        "Major": {
          "description": "Gets or sets fonts collection for a \"heading\" part of the slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FontSet"
        },
        "Minor": {
          "description": "Gets or sets  the fonts collection for a \"body\" part of the slide.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FontSet"
        },
        "Name": {
          "type": "string",
          "description": "Gets or sets the name."
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "FontSet": {
      "type": "object",
      "description": "Font set.",
      "additionalProperties": false,
      "properties": {
        "ComplexScript": {
          "type": "string",
          "description": "Complex script font."
        },
        "EastAsian": {
          "type": "string",
          "description": "East Asian font."
        },
        "Latin": {
          "type": "string",
          "description": "Latin font."
        }
      }
    },
    "FormatScheme": {
      "type": "object",
      "description": "Represents Format Scheme for slide's theme",
      "additionalProperties": false,
      "properties": {
        "BackgroundStyles": {
          "type": "array",
          "description": "Background styles.",
          "items": {
            "$ref": "#/definitions/FillFormat"
          }
        },
        "EffectStyles": {
          "type": "array",
          "description": "Effect styles.",
          "items": {
            "$ref": "#/definitions/EffectFormat"
          }
        },
        "FillStyles": {
          "type": "array",
          "description": "Fill styles.",
          "items": {
            "$ref": "#/definitions/FillFormat"
          }
        },
        "LineStyles": {
          "type": "array",
          "description": "Line style.",
          "items": {
            "$ref": "#/definitions/LineFormat"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "VbaProject": {
      "type": "object",
      "description": "VBA project",
      "additionalProperties": false,
      "properties": {
        "Modules": {
          "type": "array",
          "description": "VBA modules",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        },
        "References": {
          "type": "array",
          "description": "VBA references",
          "items": {
            "$ref": "#/definitions/VbaReference"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "VbaReference": {
      "type": "object",
      "description": "VBA reference",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name"
        },
        "LibId": {
          "type": "string",
          "description": "Library ID"
        }
      }
    },
    "VbaModule": {
      "type": "object",
      "description": "Represents VBA module.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "description": "VBA module name. "
        },
        "SourceCode": {
          "type": "string",
          "description": "VBA module source code."
        },
        "References": {
          "type": "array",
          "description": "List of references. ",
          "items": {
            "$ref": "#/definitions/VbaReference"
          }
        },
        "SelfUri": {
          "description": "Gets or sets the link to this resource.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResourceUri"
        },
        "AlternateLinks": {
          "type": "array",
          "readOnly": true,
          "description": "List of alternate links.",
          "items": {
            "$ref": "#/definitions/ResourceUri"
          }
        }
      }
    },
    "FilesUploadResult": {
      "type": "object",
      "description": "File upload result",
      "additionalProperties": false,
      "properties": {
        "Uploaded": {
          "type": "array",
          "description": "List of uploaded file names",
          "items": {
            "type": "string"
          }
        },
        "Errors": {
          "type": "array",
          "description": "List of errors.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error",
      "additionalProperties": false,
      "properties": {
        "Code": {
          "type": "string",
          "description": "Code\n            "
        },
        "Message": {
          "type": "string",
          "description": "Message\n            "
        },
        "Description": {
          "type": "string",
          "description": "Description\n            "
        },
        "InnerError": {
          "description": "Inner Error\n            ",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The error details",
      "additionalProperties": false,
      "required": [
        "Date"
      ],
      "properties": {
        "RequestId": {
          "type": "string",
          "description": "The request id"
        },
        "Date": {
          "type": "string",
          "description": "Date",
          "format": "date-time"
        }
      }
    },
    "Operation": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Id",
        "Method",
        "Status"
      ],
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid"
        },
        "Method": {
          "type": "string",
          "enum": [
            "Convert",
            "DownloadPresentation",
            "ConvertAndSave",
            "SavePresentation",
            "Merge",
            "MergeAndSave",
            "Split",
            "UploadAndSplit"
          ]
        },
        "Status": {
          "type": "string",
          "enum": [
            "Created",
            "Enqueued",
            "Started",
            "Failed",
            "Canceled",
            "Finished"
          ]
        },
        "Progress": {
          "$ref": "#/definitions/OperationProgress"
        },
        "Created": {
          "type": "string",
          "format": "date-time"
        },
        "Started": {
          "type": "string",
          "format": "date-time"
        },
        "Failed": {
          "type": "string",
          "format": "date-time"
        },
        "Canceled": {
          "type": "string",
          "format": "date-time"
        },
        "Finished": {
          "type": "string",
          "format": "date-time"
        },
        "Error": {
          "$ref": "#/definitions/OperationError"
        }
      }
    },
    "OperationProgress": {
      "type": "object",
      "description": "Operation progress.",
      "additionalProperties": false,
      "required": [
        "StepIndex",
        "StepCount"
      ],
      "properties": {
        "Description": {
          "type": "string",
          "description": "Description."
        },
        "StepIndex": {
          "type": "integer",
          "description": "Current Step Index.",
          "format": "int32"
        },
        "StepCount": {
          "type": "integer",
          "description": "Current Step Index.",
          "format": "int32"
        }
      }
    },
    "OperationError": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "HttpStatusCode"
      ],
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "HttpStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "FilesList": {
      "type": "object",
      "description": "Files list",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "array",
          "description": "Files and folders contained by folder StorageFile.",
          "items": {
            "$ref": "#/definitions/StorageFile"
          }
        }
      }
    },
    "StorageFile": {
      "type": "object",
      "description": "File or folder information",
      "additionalProperties": false,
      "required": [
        "IsFolder",
        "Size"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "description": "File or folder name."
        },
        "IsFolder": {
          "type": "boolean",
          "description": "True if it is a folder."
        },
        "ModifiedDate": {
          "type": "string",
          "description": "File or folder last modified DateTime.",
          "format": "date-time"
        },
        "Size": {
          "type": "integer",
          "description": "File or folder size.",
          "format": "int64"
        },
        "Path": {
          "type": "string",
          "description": "File or folder path."
        }
      }
    },
    "StorageExist": {
      "type": "object",
      "description": "Storage exists",
      "additionalProperties": false,
      "required": [
        "Exists"
      ],
      "properties": {
        "Exists": {
          "type": "boolean",
          "description": "Shows that the storage exists.\n            "
        }
      }
    },
    "ObjectExist": {
      "type": "object",
      "description": "Object exists",
      "additionalProperties": false,
      "required": [
        "Exists",
        "IsFolder"
      ],
      "properties": {
        "Exists": {
          "type": "boolean",
          "description": "Indicates that the file or folder exists."
        },
        "IsFolder": {
          "type": "boolean",
          "description": "True if it is a folder, false if it is a file."
        }
      }
    },
    "DiscUsage": {
      "type": "object",
      "description": "Class for disc space information.",
      "additionalProperties": false,
      "required": [
        "UsedSize",
        "TotalSize"
      ],
      "properties": {
        "UsedSize": {
          "type": "integer",
          "description": "Application used disc space.",
          "format": "int64"
        },
        "TotalSize": {
          "type": "integer",
          "description": "Total disc space.",
          "format": "int64"
        }
      }
    },
    "FileVersions": {
      "type": "object",
      "description": "File versions FileVersion.",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "array",
          "description": "File versions FileVersion.",
          "items": {
            "$ref": "#/definitions/FileVersion"
          }
        }
      }
    },
    "FileVersion": {
      "type": "object",
      "description": "File Version",
      "additionalProperties": false,
      "properties": {
        "VersionId": {
          "type": "string",
          "description": "File Version ID."
        },
        "IsLatest": {
          "type": "boolean",
          "description": "Specifies whether the file is (true) or is not (false) the latest version of an file."
        },
        "Name": {
          "type": "string",
          "description": "File or folder name."
        },
        "IsFolder": {
          "type": "boolean",
          "description": "True if it is a folder."
        },
        "ModifiedDate": {
          "type": "string",
          "description": "File or folder last modified DateTime.",
          "format": "date-time"
        },
        "Size": {
          "type": "integer",
          "description": "File or folder size.",
          "format": "int64"
        },
        "Path": {
          "type": "string",
          "description": "File or folder path."
        }
      }
    },
    "UniversalPresentation": {
      "type": "object",
      "description": "Universal presentation that can contain any PowerPoint content",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/PresentationMetadata"
        },
        "slides": {
          "type": "array",
          "description": "All slides in the presentation",
          "items": {
            "$ref": "#/definitions/UniversalSlide"
          }
        },
        "masterSlides": {
          "type": "array",
          "description": "Master slide templates",
          "items": {
            "$ref": "#/definitions/UniversalSlide"
          }
        },
        "layoutSlides": {
          "type": "array",
          "description": "Layout slide templates",
          "items": {
            "$ref": "#/definitions/UniversalSlide"
          }
        },
        "documentProperties": {
          "$ref": "#/definitions/UniversalDocumentProperties"
        },
        "viewProperties": {
          "$ref": "#/definitions/UniversalViewProperties"
        },
        "theme": {
          "$ref": "#/definitions/UniversalTheme"
        },
        "protection": {
          "$ref": "#/definitions/UniversalProtection"
        },
        "vbaProject": {
          "$ref": "#/definitions/UniversalVbaProject"
        },
        "customProperties": {
          "type": "object",
          "additionalProperties": true,
          "description": "Custom document properties"
        }
      },
      "additionalProperties": true
    },
    "UniversalSlide": {
      "type": "object",
      "description": "Universal slide that can contain any PowerPoint content",
      "properties": {
        "slideId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slideType": {
          "enum": [
            "Slide",
            "MasterSlide",
            "LayoutSlide",
            "NotesSlide"
          ],
          "description": "Type of slide"
        },
        "shapes": {
          "type": "array",
          "description": "All shapes and content on the slide",
          "items": {
            "$ref": "#/definitions/UniversalShape"
          }
        },
        "background": {
          "$ref": "#/definitions/UniversalBackground"
        },
        "slideSize": {
          "$ref": "#/definitions/UniversalSlideSize"
        },
        "transition": {
          "$ref": "#/definitions/UniversalTransition"
        },
        "timing": {
          "$ref": "#/definitions/UniversalTiming"
        },
        "animations": {
          "type": "array",
          "description": "All animations on the slide",
          "items": {
            "$ref": "#/definitions/UniversalAnimation"
          }
        },
        "comments": {
          "type": "array",
          "description": "Comments on the slide",
          "items": {
            "$ref": "#/definitions/UniversalComment"
          }
        },
        "notesSlide": {
          "$ref": "#/definitions/UniversalSlide"
        },
        "layoutSlide": {
          "$ref": "#/definitions/ResourceUri"
        },
        "masterSlide": {
          "$ref": "#/definitions/ResourceUri"
        },
        "placeholders": {
          "type": "array",
          "description": "Placeholder definitions",
          "items": {
            "$ref": "#/definitions/UniversalPlaceholder"
          }
        }
      },
      "additionalProperties": true
    },
    "UniversalShape": {
      "type": "object",
      "description": "Universal shape that can represent any PowerPoint content element",
      "properties": {
        "shapeType": {
          "enum": [
            "Shape",
            "Chart",
            "Table",
            "PictureFrame",
            "VideoFrame",
            "AudioFrame",
            "SmartArt",
            "OleObjectFrame",
            "GroupShape",
            "GraphicalObject",
            "Connector",
            "SmartArtShape",
            "ZoomFrame",
            "SectionZoomFrame",
            "SummaryZoomFrame",
            "SummaryZoomSection"
          ],
          "description": "Type of shape"
        },
        "name": {
          "type": "string"
        },
        "alternativeText": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "geometry": {
          "$ref": "#/definitions/UniversalGeometry"
        },
        "fillFormat": {
          "$ref": "#/definitions/UniversalFillFormat"
        },
        "lineFormat": {
          "$ref": "#/definitions/UniversalLineFormat"
        },
        "effectFormat": {
          "$ref": "#/definitions/UniversalEffectFormat"
        },
        "threeDFormat": {
          "$ref": "#/definitions/UniversalThreeDFormat"
        },
        "textFrame": {
          "$ref": "#/definitions/UniversalTextFrame"
        },
        "hyperlink": {
          "$ref": "#/definitions/UniversalHyperlink"
        },
        "chartType": {
          "$ref": "#/definitions/ChartTypeEnum"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalChartSeries"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalChartCategory"
          }
        },
        "axes": {
          "$ref": "#/definitions/UniversalChartAxes"
        },
        "legend": {
          "$ref": "#/definitions/UniversalChartLegend"
        },
        "plotArea": {
          "$ref": "#/definitions/UniversalPlotArea"
        },
        "chartWall": {
          "$ref": "#/definitions/UniversalChartWall"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalTableRow"
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalTableColumn"
          }
        },
        "tableStyle": {
          "$ref": "#/definitions/UniversalTableStyle"
        },
        "shapes": {
          "type": "array",
          "description": "Shapes within a group",
          "items": {
            "$ref": "#/definitions/UniversalShape"
          }
        },
        "pictureFillFormat": {
          "$ref": "#/definitions/UniversalPictureFillFormat"
        },
        "videoFormat": {
          "$ref": "#/definitions/UniversalVideoFormat"
        },
        "audioFormat": {
          "$ref": "#/definitions/UniversalAudioFormat"
        },
        "smartArtLayout": {
          "$ref": "#/definitions/UniversalSmartArtLayout"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalSmartArtNode"
          }
        },
        "mathParagraph": {
          "$ref": "#/definitions/UniversalMathParagraph"
        }
      },
      "additionalProperties": true,
      "anyOf": [
        {
          "required": [
            "shapeType"
          ]
        },
        {
          "properties": {
            "type": {
              "const": "Shape"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "Chart"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "Table"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "PictureFrame"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "VideoFrame"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "AudioFrame"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "SmartArt"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "OleObjectFrame"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "GroupShape"
            }
          }
        },
        {
          "properties": {
            "type": {
              "const": "Connector"
            }
          }
        }
      ]
    },
    "UniversalOperation": {
      "type": "object",
      "description": "Universal operation that can represent any PowerPoint API action",
      "properties": {
        "operationType": {
          "enum": [
            "Save",
            "SaveSlide",
            "SaveShape",
            "AddSlide",
            "AddMasterSlide",
            "AddLayoutSlide",
            "RemoveSlide",
            "ReorderSlide",
            "Merge",
            "UpdateBackground",
            "ResetSlide",
            "AddShape",
            "RemoveShape",
            "UpdateShape",
            "ReplaceText",
            "Export",
            "Convert",
            "Split",
            "Protect",
            "Unprotect",
            "GetInfo",
            "Upload",
            "Download"
          ],
          "description": "Type of operation to perform"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/definitions/UniversalPresentation"
            },
            {
              "$ref": "#/definitions/UniversalSlide"
            },
            {
              "$ref": "#/definitions/UniversalShape"
            },
            {
              "type": "string",
              "description": "File path or identifier"
            }
          ],
          "description": "Target of the operation"
        },
        "parameters": {
          "type": "object",
          "description": "Operation-specific parameters",
          "additionalProperties": true
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/definitions/UniversalPresentation"
            },
            {
              "$ref": "#/definitions/UniversalSlide"
            },
            {
              "$ref": "#/definitions/UniversalShape"
            },
            {
              "type": "string",
              "description": "Source file path"
            }
          ],
          "description": "Source for copy/clone operations"
        },
        "position": {
          "type": "integer",
          "description": "Position for insert operations"
        },
        "options": {
          "$ref": "#/definitions/UniversalOperationOptions"
        }
      },
      "required": [
        "operationType"
      ],
      "additionalProperties": true
    },
    "UniversalTextFrame": {
      "type": "object",
      "description": "Universal text container with all formatting options",
      "properties": {
        "text": {
          "type": "string",
          "description": "Plain text content"
        },
        "paragraphs": {
          "type": "array",
          "description": "Structured paragraph content",
          "items": {
            "$ref": "#/definitions/UniversalParagraph"
          }
        },
        "textFrameFormat": {
          "$ref": "#/definitions/UniversalTextFrameFormat"
        },
        "autofit": {
          "$ref": "#/definitions/UniversalAutofit"
        },
        "marginLeft": {
          "type": "number"
        },
        "marginRight": {
          "type": "number"
        },
        "marginTop": {
          "type": "number"
        },
        "marginBottom": {
          "type": "number"
        },
        "wrapText": {
          "type": "boolean"
        },
        "anchoringType": {
          "enum": [
            "Top",
            "Center",
            "Bottom",
            "Justified",
            "Distributed"
          ],
          "description": "Vertical text anchoring"
        },
        "centerText": {
          "type": "boolean"
        },
        "textVerticalType": {
          "enum": [
            "Horizontal",
            "Vertical",
            "Vertical270",
            "WordArtVertical",
            "EastAsianVertical",
            "MongolianVertical",
            "WordArtVerticalRightToLeft"
          ],
          "description": "Text orientation"
        }
      },
      "additionalProperties": true
    },
    "UniversalFillFormat": {
      "type": "object",
      "description": "Universal fill format supporting all PowerPoint fill types",
      "properties": {
        "type": {
          "enum": [
            "NoFill",
            "Solid",
            "Gradient",
            "Pattern",
            "Picture",
            "Group"
          ],
          "description": "Type of fill"
        },
        "solidFillColor": {
          "$ref": "#/definitions/UniversalColor"
        },
        "gradientFillFormat": {
          "$ref": "#/definitions/GradientFillFormat"
        },
        "patternFillFormat": {
          "$ref": "#/definitions/PatternFillFormat"
        },
        "pictureFillFormat": {
          "$ref": "#/definitions/PictureFillFormat"
        }
      },
      "additionalProperties": true
    },
    "UniversalLineFormat": {
      "type": "object",
      "description": "Universal line format supporting all PowerPoint line styles",
      "properties": {
        "alignment": {
          "enum": [
            "Center",
            "Inset",
            "NotDefined"
          ]
        },
        "capStyle": {
          "enum": [
            "Round",
            "Square",
            "Flat",
            "NotDefined"
          ]
        },
        "dashStyle": {
          "enum": [
            "Solid",
            "Dot",
            "Dash",
            "LargeDash",
            "DashDot",
            "LargeDashDot",
            "LargeDashDotDot",
            "SystemDash",
            "SystemDot",
            "SystemDashDot",
            "SystemDashDotDot",
            "Custom",
            "NotDefined"
          ]
        },
        "joinStyle": {
          "enum": [
            "Round",
            "Bevel",
            "Miter",
            "NotDefined"
          ]
        },
        "style": {
          "enum": [
            "Single",
            "ThinThin",
            "ThinThick",
            "ThickThin",
            "ThickBetweenThin",
            "NotDefined"
          ]
        },
        "width": {
          "type": "number"
        },
        "fillFormat": {
          "$ref": "#/definitions/UniversalFillFormat"
        },
        "beginArrowHead": {
          "$ref": "#/definitions/ArrowHeadProperties"
        },
        "endArrowHead": {
          "$ref": "#/definitions/ArrowHeadProperties"
        },
        "customDashPattern": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "additionalProperties": true
    },
    "UniversalEffectFormat": {
      "type": "object",
      "description": "Universal effect format supporting all PowerPoint visual effects",
      "properties": {
        "blur": {
          "$ref": "#/definitions/BlurEffect"
        },
        "glow": {
          "$ref": "#/definitions/GlowEffect"
        },
        "innerShadow": {
          "$ref": "#/definitions/InnerShadowEffect"
        },
        "outerShadow": {
          "$ref": "#/definitions/OuterShadowEffect"
        },
        "presetShadow": {
          "$ref": "#/definitions/PresetShadowEffect"
        },
        "softEdge": {
          "$ref": "#/definitions/SoftEdgeEffect"
        },
        "reflection": {
          "$ref": "#/definitions/ReflectionEffect"
        },
        "fillOverlay": {
          "$ref": "#/definitions/FillOverlayEffect"
        }
      },
      "additionalProperties": true
    },
    "UniversalGeometry": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalBackground": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalAnimation": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalExportRequest": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalApiResponse": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalParagraph": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalPortion": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalChartSeries": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalTableRow": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalTableCell": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalMathParagraph": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalColor": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "RGB"
            },
            "r": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            },
            "g": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            },
            "b": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            },
            "alpha": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          "required": [
            "type",
            "r",
            "g",
            "b"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "HSL"
            },
            "h": {
              "type": "number",
              "minimum": 0,
              "maximum": 360
            },
            "s": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "l": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "alpha": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          "required": [
            "type",
            "h",
            "s",
            "l"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "Scheme"
            },
            "schemeColor": {
              "enum": [
                "Accent1",
                "Accent2",
                "Accent3",
                "Accent4",
                "Accent5",
                "Accent6",
                "Background1",
                "Background2",
                "Dark1",
                "Dark2",
                "FollowedHyperlink",
                "Hyperlink",
                "Light1",
                "Light2",
                "Text1",
                "Text2"
              ]
            },
            "transforms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ColorTransform"
              }
            }
          },
          "required": [
            "type",
            "schemeColor"
          ]
        },
        {
          "type": "string",
          "pattern": "^#[0-9A-Fa-f]{6}$",
          "description": "Hex color code"
        }
      ]
    },
    "UniversalFont": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalPosition": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalSize": {
      "type": "object",
      "additionalProperties": true
    },
    "UniversalOperationOptions": {
      "type": "object",
      "additionalProperties": true
    }
  },
  "anyOf": [
    {
      "properties": {
        "presentation": {
          "type": "object",
          "description": "Complete presentation document with all slides and content",
          "$ref": "#/definitions/UniversalPresentation"
        }
      },
      "required": [
        "presentation"
      ]
    },
    {
      "properties": {
        "slide": {
          "type": "object",
          "description": "Individual slide with all possible content",
          "$ref": "#/definitions/UniversalSlide"
        }
      },
      "required": [
        "slide"
      ]
    },
    {
      "properties": {
        "shape": {
          "type": "object",
          "description": "Any type of shape or content element",
          "$ref": "#/definitions/UniversalShape"
        }
      },
      "required": [
        "shape"
      ]
    },
    {
      "properties": {
        "operation": {
          "type": "object",
          "description": "Any API operation or batch task",
          "$ref": "#/definitions/UniversalOperation"
        }
      },
      "required": [
        "operation"
      ]
    },
    {
      "properties": {
        "exportRequest": {
          "type": "object",
          "description": "Export operation with any format and options",
          "$ref": "#/definitions/UniversalExportRequest"
        }
      },
      "required": [
        "exportRequest"
      ]
    },
    {
      "properties": {
        "apiResponse": {
          "type": "object",
          "description": "Any API response type",
          "$ref": "#/definitions/UniversalApiResponse"
        }
      },
      "required": [
        "apiResponse"
      ]
    },
    {
      "properties": {
        "batch": {
          "type": "array",
          "description": "Batch operations for multiple actions",
          "items": {
            "$ref": "#/definitions/UniversalOperation"
          }
        }
      },
      "required": [
        "batch"
      ]
    }
  ],
  "version": "25.6.0",
  "generated": "2025-01-07",
  "totalSchemas": 263,
  "generator": "Manus AI Universal Schema Generator"
}