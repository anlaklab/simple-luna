# ðŸš€ Coolify Configuration for Luna Platform
# Separate Containers Architecture with Better Monitoring

version: "3.8"

services:
  # =============================================================================
  # FRONTEND - React Client
  # =============================================================================
  luna-client:
    build:
      context: ./client
      dockerfile: Dockerfile.production
    container_name: luna-client
    restart: unless-stopped
    environment:
      NODE_ENV: production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - luna-network

  # =============================================================================
  # BACKEND - Node.js API Server
  # =============================================================================
  luna-server:
    build:
      context: .
      dockerfile: server/Dockerfile.production
    container_name: luna-server
    restart: unless-stopped
    environment:
      # Core Configuration
      NODE_ENV: production
      PORT: 3000
      
      # File Processing
      MAX_FILE_SIZE: 62914560
      UPLOAD_TEMP_DIR: /app/temp/uploads
      ASPOSE_TEMP_DIR: /app/temp/aspose
      
      # Java Configuration
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      JAVA_OPTS: "-Xmx2g -Xms512m -Djava.awt.headless=true"
      
      # Aspose Configuration
      ASPOSE_LICENSE_PATH: /app/Aspose.Slides.Product.Family.lic
      
      # Firebase Configuration (from Coolify environment)
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4-turbo-preview
      
      # Security
      CORS_ORIGIN: ${CORS_ORIGIN:-https://luna.anlaklab.com}
      JWT_SECRET: ${JWT_SECRET}
      
    volumes:
      - luna_uploads:/app/temp/uploads
      - luna_aspose:/app/temp/aspose
      - luna_conversions:/app/temp/conversions
      - luna_logs:/app/logs
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    depends_on:
      - luna-client
    
    networks:
      - luna-network

  # =============================================================================
  # NGINX - Reverse Proxy
  # =============================================================================
  luna-nginx:
    image: nginx:alpine
    container_name: luna-nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - luna-client
      - luna-server
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/nginx-health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - luna-network

# =============================================================================
# NETWORKS & VOLUMES
# =============================================================================
networks:
  luna-network:
    driver: bridge

volumes:
  luna_uploads:
  luna_aspose:
  luna_conversions:
  luna_logs: 