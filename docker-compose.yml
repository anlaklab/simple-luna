# üê≥ Luna Project - Docker Compose Configuration

services:
  # =============================================================================
  # Luna Server - Main Application
  # =============================================================================
  luna-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: luna-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Node.js Configuration
      - NODE_ENV=production
      - PORT=3000
      
      # File Processing Configuration
      - MAX_FILE_SIZE=62914560
      - UPLOAD_TEMP_DIR=/app/temp/uploads
      - ASPOSE_TEMP_DIR=/app/temp/aspose
      
      # Java Configuration for Aspose.Slides
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk
      - JAVA_OPTS=-Xmx2g -Xms512m -Djava.awt.headless=true
      
      # Aspose.Slides Configuration (LOCAL LIBRARY)
      - ASPOSE_LICENSE_PATH=${ASPOSE_LICENSE_PATH:-/app/Aspose.Slides.Product.Family.lic}
      
      # Dynamic Extensions Configuration
      - DYNAMIC_EXTENSIONS_ENABLED=true
      - DYNAMIC_EXTENSIONS_DIR=/app/server/src/modules/shared/extensions
      - DYNAMIC_EXTENSIONS_MAX=20
      - DYNAMIC_EXTENSIONS_DEFAULT=chart,table,video
      
      # Firebase Configuration (Firestore + Storage only)
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      
      # OpenAI Configuration (from .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4-turbo-preview
      
      # Security Configuration
      - CORS_ORIGIN=http://localhost:5173,http://localhost:3000
      
      # Logging Configuration
      - LOG_LEVEL=info
      - LOKI_URL=http://loki:3100
      - ENABLE_LOKI_LOGGING=true
      
    volumes:
      # Persistent storage for uploads and processing
      - luna-uploads:/app/temp/uploads
      - luna-aspose:/app/temp/aspose
      - luna-conversions:/app/temp/conversions
      - luna-logs:/app/logs
      
      # Dynamic Extensions storage (persistent across container restarts)
      - luna-extensions:/app/server/src/modules/shared/extensions
      
      # Development: Mount source code for hot reload (comment out for production)
      # - ./server:/app/server
      # - ./lib:/app/lib
      # - ./server/src/modules/shared/extensions:/app/server/src/modules/shared/extensions
      
    networks:
      - luna-network
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging configuration for Loki
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,environment"
    
    labels:
      - "service=luna-server"
      - "environment=production"

  # =============================================================================
  # Luna Client - React Frontend (Development)
  # =============================================================================
  luna-client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: luna-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
    volumes:
      # Development: Mount source code for hot reload
      - ./client:/app
      - /app/node_modules
    networks:
      - luna-network
    depends_on:
      - luna-server
    
    # Logging configuration for Loki
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,environment"
    
    labels:
      - "service=luna-client"
      - "environment=development"

  # =============================================================================
  # MONITORING STACK - PLG (Prometheus + Loki + Grafana)
  # =============================================================================
  
  # Loki - Log Aggregation System
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - luna-network
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - Log Collection Agent
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - luna-logs:/app/logs:ro
    networks:
      - luna-network
    depends_on:
      - loki
    command: -config.file=/etc/promtail/config.yml

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - luna-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Visualization Dashboard
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=luna-admin-2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - luna-network
    depends_on:
      - prometheus
      - loki
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - luna-network
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  # cAdvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    networks:
      - luna-network
    privileged: true
    devices:
      - /dev/kmsg

# =============================================================================
# Named Volumes
# =============================================================================
volumes:
  luna-uploads:
    driver: local
  luna-aspose:
    driver: local
  luna-conversions:
    driver: local
  luna-logs:
    driver: local
  luna-extensions:
    driver: local
  
  # Monitoring volumes
  loki-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  luna-network:
    driver: bridge 